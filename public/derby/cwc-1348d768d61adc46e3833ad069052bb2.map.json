{"version":3,"sources":["node_modules/browser-pack/_prelude.js","agent-interaction/agentAPI.js","index.js","node_modules/arraydiff/index.js","node_modules/browserchannel/dist/bcsocket-uncompressed.js","node_modules/deep-is/index.js","node_modules/derby-templates/index.js","node_modules/derby-templates/lib/contexts.js","node_modules/derby-templates/lib/expressions.js","node_modules/derby-templates/lib/operatorFns.js","node_modules/derby-templates/lib/templates.js","node_modules/derby/lib/App.js","node_modules/derby/lib/Controller.js","node_modules/derby/lib/Derby.js","node_modules/derby/lib/Dom.js","node_modules/derby/lib/Page.js","node_modules/derby/lib/_views.js","node_modules/derby/lib/components.js","node_modules/derby/lib/documentListeners.js","node_modules/derby/lib/eventmodel.js","node_modules/derby/lib/textDiff.js","node_modules/events/events.js","node_modules/make-error/index.js","node_modules/onecolor/index.js","node_modules/onecolor/lib/CMYK.js","node_modules/onecolor/lib/HSL.js","node_modules/onecolor/lib/HSV.js","node_modules/onecolor/lib/LAB.js","node_modules/onecolor/lib/XYZ.js","node_modules/onecolor/lib/color.js","node_modules/onecolor/lib/plugins/clearer.js","node_modules/onecolor/lib/plugins/darken.js","node_modules/onecolor/lib/plugins/desaturate.js","node_modules/onecolor/lib/plugins/grayscale.js","node_modules/onecolor/lib/plugins/lighten.js","node_modules/onecolor/lib/plugins/mix.js","node_modules/onecolor/lib/plugins/namedColors.js","node_modules/onecolor/lib/plugins/negate.js","node_modules/onecolor/lib/plugins/opaquer.js","node_modules/onecolor/lib/plugins/rotate.js","node_modules/onecolor/lib/plugins/saturate.js","node_modules/onecolor/lib/plugins/toAlpha.js","node_modules/ot-json0/lib/bootstrapTransform.js","node_modules/ot-json0/lib/index.js","node_modules/ot-json0/lib/json0.js","node_modules/ot-json0/lib/text0.js","node_modules/path-browserify/index.js","node_modules/process/browser.js","node_modules/punycode/punycode.js","node_modules/qs/lib/formats.js","node_modules/qs/lib/index.js","node_modules/qs/lib/parse.js","node_modules/qs/lib/stringify.js","node_modules/qs/lib/utils.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/qunitjs/qunit/qunit.js","node_modules/racer-highway/lib/browser/index.js","node_modules/racer-highway/lib/browser/socket.js","node_modules/racer/lib/Model/CollectionCounter.js","node_modules/racer/lib/Model/Doc.js","node_modules/racer/lib/Model/LocalDoc.js","node_modules/racer/lib/Model/Model.js","node_modules/racer/lib/Model/Query.js","node_modules/racer/lib/Model/RemoteDoc.js","node_modules/racer/lib/Model/collections.js","node_modules/racer/lib/Model/connection.js","node_modules/racer/lib/Model/contexts.js","node_modules/racer/lib/Model/defaultFns.js","node_modules/racer/lib/Model/events.js","node_modules/racer/lib/Model/filter.js","node_modules/racer/lib/Model/fn.js","node_modules/racer/lib/Model/index.js","node_modules/racer/lib/Model/mutators.js","node_modules/racer/lib/Model/paths.js","node_modules/racer/lib/Model/ref.js","node_modules/racer/lib/Model/refList.js","node_modules/racer/lib/Model/setDiff.js","node_modules/racer/lib/Model/subscriptions.js","node_modules/racer/lib/Model/unbundle.js","node_modules/racer/lib/Racer.js","node_modules/racer/lib/util.js","node_modules/saddle/index.js","node_modules/serialize-object/index.js","node_modules/sharedb/lib/client/connection.js","node_modules/sharedb/lib/client/doc.js","node_modules/sharedb/lib/client/index.js","node_modules/sharedb/lib/client/query.js","node_modules/sharedb/lib/emitter.js","node_modules/sharedb/lib/error.js","node_modules/sharedb/lib/types.js","node_modules/sharedb/lib/util.js","node_modules/tracks/lib/History.js","node_modules/tracks/lib/browser.js","node_modules/tracks/lib/router.js","node_modules/tracks/vendor/express/router/route.js","node_modules/tracks/vendor/express/utils.js","node_modules/url/url.js","node_modules/url/util.js","node_modules/uuid/rng-browser.js","node_modules/uuid/uuid.js","public/collaborative-app/editor-listener.js","public/collaborative-app/factoid-handler.js","public/collaborative-app/modelManager.js","public/node_modules/underscore/underscore.js","public/src/reach-functions/idxCard-info.js","public/src/reach-functions/idxcardjson-to-json-converter.js","public/src/reach-functions/json-merger.js","public/test/testOptions.js","public/test/testsAgentAPI.js","node_modules/derby","node_modules/racer/lib/index.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrrnstzlljkzvipBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChnxJA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzphhOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACprhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxlzinjtpzlhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxptBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChzpezrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrlkvrxttBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChvjVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxpgxnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfzwBA;AACA;AACA;;ACFA;AACA;AACA","file":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Created by Funda Durupinar on 10/28/15.\n */\n\n/**\n * Creates an agent with name and id\n * @param name\n * @param id\n * @constructor\n */\n\n\nfunction Agent (name, id) {\n    //public\n    this.agentId = id;\n    this.agentName = name;\n    this.colorCode = \"#00bfff\"; //agents have different colors based on specialty\n    // this.colorCode = getNewColor();\n\n    this.selectedNode;\n    this.selectedEdge;\n    this.opHistory = [];\n    this.chatHistory = [];\n    this.userList = [];\n    this.pageDoc;\n    this.socket;\n    this.room;\n\n\n}\n\n/**\n *\n * @param url Server address\n * @param callback\n * @returns socket Io socket to the node.js server\n */\nAgent.prototype.connectToServer = function (url, callback) {\n\n\n    var self = this;\n    var serverIp;\n    var sInd = url.search(\"3000/\") + 5; //roomId index\n    if(sInd <= 5){\n        serverIp = url;\n        self.room = \"\";\n    }\n    else{\n        serverIp = url.slice(0,sInd);\n        self.room = url.slice(sInd, url.length);\n    }\n    this.socket =  io(serverIp); //server connection\n\n    var p1 = new Promise(function (resolve, reject) {\n        if (self.room == \"\"  || self.room == null) {\n\n            self.socket.emit(\"agentCurrentRoomRequest\", function (room) {\n                console.log(room);\n                    self.room = room; //select the latest room\n                resolve(\"success\");\n            });\n        }\n        else {\n            console.log(self.room);\n            resolve(\"success\");\n        }\n    });\n\n    p1.then(function (content) {\n\n        self.socket.emit(\"subscribeAgent\", {userName: self.agentName, room: self.room, userId: self.agentId, colorCode: self.colorCode }, function () {\n\n\n\n            if (callback != null) callback(self.socket);\n\n        });\n\n\n    }),  function (xhr, status, error) {\n        api.set('content.text', \"Error retrieving data: \" + error);\n    };\n\n\n}\n\n\n\n/**\n * Disconnects from the socket\n * @param callback After disconnecting from server we get success message\n *\n */\nAgent.prototype.disconnect = function(callback){\n\n\n    this.socket.emit('agentManualDisconnect', function(){\n        if(callback) callback(\"success\");\n    });\n\n    // this.socket.disconnect();\n\n\n\n};\n\n//get model for the current room\nAgent.prototype.loadModel = function (callback) {\n\n    var self = this;\n    this.socket.emit('agentPageDocRequest', {userId: self.agentId, room: self.room}, function(data){\n\n        self.pageDoc = data;\n\n\n        self.userList = [];\n        for(var userId in data.users) {\n\n            self.userList.push({userId: userId, userName: data.users[userId].name});\n        }\n\n\n\n        if (callback != null) callback();\n    });\n\n\n};\n/**\n * Gets list of operations from the node.js server\n * @param callback Function to call after getting operation history\n */\nAgent.prototype.loadOperationHistory = function (callback) {\n\n    var self = this;\n    this.socket.emit('agentOperationHistoryRequest', {room: this.room}, function(data){\n        self.opHistory = data;\n        if (data == null)\n            self.opHistory = [];\n\n\n        if (callback != null) callback();\n\n\n    });\n\n};\n\n/**\n * Returns userList in the same room as agent\n */\n\nAgent.prototype.getUserList = function() {\n\n\n    return self.userList;\n}\n\n/**\n * Gets chat messages from the node.js server\n * @param callback Function to call after getting chat history\n */\n//get operation history\nAgent.prototype.loadChatHistory= function (callback) {\n    var self = this;\n    this.socket.emit('agentChatHistoryRequest', {room: this.room}, function(data){\n        self.chatHistory = data;\n        if (data == null)\n            self.chatHistory = [];\n\n        if (callback != null) callback();\n\n    });\n}\n/**\n *\n * @returns {Object} Node list in the shared model\n */\nAgent.prototype.getNodeList = function(){\n\n    return this.pageDoc.cy.nodes;\n};\n\n\n\n/**\n *\n * @returns {Object} Edge list in the shared model\n */\nAgent.prototype.getEdgeList = function(){\n    return this.pageDoc.cy.edges;\n};\n\n/**\n *\n * @returns {*} Layout properties in the shared model\n */\nAgent.prototype.getLayoutProperties = function(){\n    return this.pageDoc.layoutProperties;\n}\n\n/**\n * Sends request to the node.js server to change agent's name\n * @param newName New agent name\n */\nAgent.prototype.changeName = function(newName, callback){\n    this.agentName = newName;\n    this.sendRequest(\"agentChangeNameRequest\", {userName: newName, userId: self.agentId});\n    if(callback) callback();\n};\n\n\n\n\n/**\n * Gets node with id from the node.js server\n * @param id Node id\n * @param callback Function to call after getting node\n */\nAgent.prototype.getNodeRequest = function(id, callback){\n    var self = this;\n    this.socket.emit('agentGetNodeRequest', {room: this.room,  userId: self.agentId, id:id}, function(data){\n        self.selectedNode = data;\n        if (callback != null) callback();\n\n    })\n};\n\n/**\n * Gets edge with id from the node.js server\n * @param id Edge id\n * @param callback Function to call after getting edge\n */\nAgent.prototype.getEdgeRequest = function(id, callback){\n    var self = this;\n    this.socket.emit('agentGetEdgeRequest', {room: this.room, userId: self.agentId, id:id}, function(data){\n        self.selectedEdge = data;\n        if (callback != null) callback();\n\n    })\n};\n/**\n * Sends an operation request to the node.js server\n * Model update operations are done in this method\n * @param reqName Operation name\n * @param param Depends on the operation type\n * <ul>\n *     <li>reqName: \"agentAddImageRequest\", param: {img,filePath} </li>\n *     <li>reqName: \"agentSetLayoutProperties\", param: {name, nodeRepulsion, nodeOverlap, idealEdgeLength, edgeElasticity, nestingFactor, gravity, numIter, tile, animate, randomize} </li>\n *     <li>reqName: \"agentRunLayoutRequest\", param:null </li>\n *     <li>reqName: \"agentAddNodeRequest\", param:{x y, class} </li>\n *     <li>reqName: \"agentAddEdgeRequest\", param:{source, target, class} </li>\\\n *     <li>reqName: \"agentChangeNodeAttributeRequest\", param:{id, attStr, attVal} </li>\n *     <li>reqName: \"agentChangeEdgeAttributeRequest\", param:{id, attStr, attVal} </li>\n *     <li>reqName: \"agentMoveNodeRequest\", param:{id, pos} </li>\n *     <li>reqName: \"agentMoveNodeRequest\", param:{id, pos} </li>\n *     <li>reqName: \"agentAddCompoundRequest\", param:{type, selectedNodes} </li>\n * </ul>\n *\n */\nAgent.prototype.sendRequest = function(reqName, param, callback){ //model operations\n\n    if(param == null){\n        param = {};\n    }\n    param.room = this.room;\n    param.userId = this.agentId;\n\n    this.socket.emit(reqName, param, function(data){\n        if(callback)\n            callback(data);\n        else\n            console.log(data);\n    });\n\n};\n\n\n/**\n * Socket listener\n * @param callback\n */\nAgent.prototype.listen = function(callback){\n    var self = this;\n    this.socket.on('operation', function(data){\n        self.opHistory.push(data);\n    });\n\n    this.socket.on('message', function(data){\n        self.chatHistory.push(data);\n    });\n\n    // this.socket.on('userList', function(data){\n    //     self.userList = data;\n    // });\n\n    this.socket.on('imageFile', function(data){\n\n\n    });\n\n    if (callback != null) callback();\n\n\n}\n\n/**\n * Sends chat message\n * @param comment Message in text\n * @param targets Ids of targets\n * @param callback Function to call after sending message\n */\nAgent.prototype.sendMessage = function(comment, targets, callback){\n\n    var self = this;\n    if(targets == \"*\" || targets == \"all\"){ //add all users\n        targets = [];\n        for(var i = 0; i < self.userList.length; i++){ //FIXME: send to all the users for now\n            targets.push({userId: self.userList[i].userId});\n        }\n\n    }\n\n    var message = {room: this.room, comment: comment, userName:this.agentName, userId: this.agentId, time: 1, targets: targets}; //set time on the server\n\n\n    console.log(targets);\n    console.log(comment);\n    this.socket.emit('agentMessage', message, function(data){\n\n\n        if (callback) callback(data);\n    });\n}\n\n\n\n/**\n *\n * @returns {string} A specific color to identify the agent\n */\n// Agent.prototype.getNewColor = function(){\n//     var gR = 1.618033988749895; //golden ratio\n//     var h = Math.floor((Math.random() * gR * 360));//Math.floor((cInd * gR - Math.floor(cInd * gR))*360);\n//     var cHsl = [h, 70 + Math.random() * 30, 60 + Math.random() * 10];\n//\n//     if(typeof module !== 'undefined' && module.exports)\n//         tinycolor = require('tinycolor')();\n//\n//     return tinycolor('hsla('+cHsl[0]  +', '+ cHsl[1] + '%, ' + cHsl[2] +'%, 1)').toHexString();\n//\n// }\n\nif(typeof module !== 'undefined' && module.exports)\n    module.exports = Agent;\n\n\n","/*\n *\tModel initialization\n *  Event handlers of model updates\n *\tAuthor: Funda Durupinar Babur<f.durupinar@gmail.com>\n */\nvar app = module.exports = require('derby').createApp('cwc', __filename);\nvar _ = require('./public/node_modules/underscore');\n\nvar bs;\n\n\n\napp.loadViews(__dirname + '/views');\n//app.loadStyles(__dirname + '/styles');\n//app.serverUse(module, 'derby-stylus');\n\n\nvar testMode = true;\nvar ONE_DAY = 1000 * 60 * 60 * 24;\n\nvar ONE_HOUR = 1000 * 60 * 60;\n\nvar ONE_MINUTE = 1000 * 60;\n\nvar docReady = false;\n\nvar useQunit = true;\n\nvar factoidHandler;\n\nvar socket;\nvar jsonMerger = require('./public/src/reach-functions/json-merger.js');\n\nvar modelManager;\nvar oneColor = require('onecolor');\napp.on('model', function (model) {\n\n    model.fn('biggerTime', function (item) {\n        var duration = model.get('_page.durationId');\n        var startTime;\n        if (duration < 0)\n            startTime = 0;\n        else\n            startTime = new Date - duration;\n\n        return item.date > startTime;\n    });\n\n\n});\n\n\napp.get('/', function (page, model, params) {\n    function getId() {\n        return model.id();\n    }\n\n\n\n\n    function idIsReserved() {\n        var ret = model.get('documents.' + docId) != undefined;\n        return ret;\n    }\n\n    var docId = getId();\n\n    while (idIsReserved()) {\n        docId = getId();\n    }\n\n    // if( useQunit ){ // use qunit testing doc if we're testing so we don't disrupt real docs\n    //     docId = 'qunit';\n    // }\n\n    return page.redirect('/' + docId);\n});\n\n\napp.get('/:docId', function (page, model, arg, next) {\n    var messagesQuery, room;\n    room = arg.docId;\n\n    model.subscribe('documents', function () {\n        var docPath = 'documents.' + arg.docId;\n        model.ref('_page.doc', ('documents.' + arg.docId));\n\n        model.subscribe(docPath, function (err) {\n            if (err) return next(err);\n\n            model.createNull(docPath, { // create the empty new doc if it doesn't already exist\n                id: arg.docId\n            });\n\n            // //chat related\n            model.set('_page.room', room);\n            //\n            model.set('_page.durations', [{name: 'All', id: -1}, {name: 'One day', id: ONE_DAY}, {\n                name: 'One hour',\n                id: ONE_HOUR\n            }, {name: 'One minute', id: ONE_MINUTE}]);\n\n\n            // create a reference to the document\n            var cy = model.at((docPath + '.cy'));\n            var history = model.at((docPath + '.history'));\n            var undoIndex = model.at((docPath + '.undoIndex'));\n            var context = model.at((docPath + '.context'));\n            var images = model.at((docPath + '.images'));\n\n            var users = model.at((docPath + '.users'));//user lists with names and color codes\n            var userIds = model.at((docPath + '.userIds')); //used for keeping a list of subscribed users\n            var messages = model.at((docPath + '.messages'));\n\n            cy.subscribe(function () {\n            });\n            history.subscribe(function () {\n            });\n\n            undoIndex.subscribe(function () {\n            });\n            context.subscribe(function () {\n            });\n\n            images.subscribe(function () {\n            });\n\n            messages.subscribe(function () {\n            });\n\n\n            userIds.subscribe(function () {\n                var userId = model.get('_session.userId');\n\n\n                var userIdsList = userIds.get();\n\n\n                if (!userIdsList) {\n                    userIdsList = [userId];\n                    userIds.push(userId);\n                }\n                else if (userIdsList.indexOf(userId) < 0) //does not exist\n                    userIds.push(userId);\n\n                userIdsList = userIds.get();\n\n\n                users.subscribe(function () {\n\n                    console.log(\"User is being subscribed\");\n\n                    var colorCode = null;\n                    var userName = null;\n                    if (users.get(userId)) {\n                        userName = users.get(userId).name;\n                        colorCode = users.get(userId).colorCode;\n                    }\n                    if (userName == null)\n                        userName = 'User ' + userIdsList.length;\n                    if (colorCode == null)\n                        colorCode = getNewColor();\n\n\n                    users.set(userId, {name: userName, colorCode: colorCode});\n\n\n                    return page.render();\n                });\n            });\n\n        });\n    });\n});\n\n\n\nfunction getNewColor(){\n    var gR = 1.618033988749895; //golden ratio\n    var h = Math.floor((Math.random() * gR * 360));//Math.floor((cInd * gR - Math.floor(cInd * gR))*360);\n    var cHsl = [h, 70 + Math.random() * 30, 60 + Math.random() * 10];\n\n  //  return ('hsla('+cHsl[0]  +', '+ cHsl[1] + '%, ' + cHsl[2] +'%, 1)');\n    var strHsl = 'hsl('+cHsl[0]  +', '+ cHsl[1] + '%, ' + cHsl[2] +'%)';\n\n  return oneColor(strHsl).hex();\n\n\n}\n\n\nfunction triggerContentChange(divId){\n    //TODO: triggering here is not good\n\n    $(('#' + divId)).trigger('contentchanged');\n\n}\nfunction playSound() {\n    try {\n        document.getElementById('notificationAudio').play();\n        if (!document)\n            throw err;\n    }\n    catch (err) {\n        return err;\n    }\n\n\n}\n\n\n\napp.proto.changeDuration = function () {\n\n    return this.model.filter('_page.doc.messages', 'biggerTime').ref('_page.list');\n\n};\n\n/***\n * Human listens to agent socket and performs menu operations requested by the agent\n */\napp.proto.listenToAgentSocket = function(model){\n\n    var self = this;\n    var modelOp;\n\n\n    //For debugging\n    socket.on('message', function (msg){\n\n        console.log(msg.comment);\n    });\n    socket.on('loadFile', function(txtFile, callback){\n        try {\n\n            sbgnviz.loadSBGNMLText(txtFile);\n            if(callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n\n    });\n\n    socket.on('newFile', function(data, callback){\n        try{\n            cy.remove(cy.elements());\n            modelManager.newModel(\"me\"); //do not delete cytoscape, only the model\n            if(callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n    socket.on('runLayout', function(data, callback){\n        try {\n            $(\"#perform-layout\").trigger('click');\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n\n    socket.on('addNode', function(data, callback){\n        try {\n            //does not trigger cy events\n            var newNode = chise.elementUtilities.addNode(data.x, data.y, data.class);\n\n            //notifies other clients\n            modelManager.addModelNode(newNode.id(), data, \"me\");\n            modelManager.initModelNode(newNode, \"me\");\n\n            if (callback) callback(newNode.id());\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n\n\n    socket.on('deleteEles', function(data, callback){\n        try {\n            //unselect all others\n            cy.elements().unselect();\n\n\n            data.elementIds.forEach(function (id) {\n                cy.getElementById(id).select();\n            });\n\n\n            if (data.type === \"simple\")\n                $(\"#delete-selected-simple\").trigger('click');\n            else { //\"smart\"\n                $(\"#delete-selected-smart\").trigger('click');\n            }\n\n\n            var p1 = new Promise(function (resolve) {\n                if(modelOp === \"delete\"){\n                    var undoInd =  model.get('_page.doc.undoIndex');\n\n                    var cmd = model.get('_page.doc.history.' + undoInd);\n                    console.log(cmd.opName);\n                    resolve(\"success\");\n                }\n            });\n            p1.then(function(){\n\n                if(callback) callback(\"deleted!!\");\n            });\n\n\n\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n//make sure action is performed on the model\n\n    model.on('change', '_page.doc.undoIndex', function(id, cmdInd){\n\n        var cmd = model.get('_page.doc.history.' + id);\n            modelOp = cmd.opName;\n            //console.log(modelOp);\n\n\n    });\n\n\n    socket.on('addEdge', function(data, callback){\n        try {\n            //does not trigger cy events\n            var newEdge = chise.elementUtilities.addEdge(source, target, sbgnclass, id, visibility);\n\n            //notifies other clients\n            modelManager.addModelEdge(newNode.id(), data, \"me\");\n            // modelManager.initModelEdge(newEdge, \"me\");\n\n            if (callback) callback(newEdge.id());\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n\n    socket.on('align', function(data, callback){\n        try {\n            var nodes = cy.collection();\n            if(data.nodeIds === '*' || data.nodeIds === 'all')\n                nodes = cy.nodes();\n            else\n                data.nodeIds.forEach(function(nodeId){\n                    nodes.add(cy.getElementById(nodeId));\n                });\n\n            chise.align(nodes, data.horizontal, data.vertical, cy.getElementById(data.alignTo));\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n\n    });\n    socket.on('updateVisibility', function(data, callback){\n        try {\n            //unselect all others\n            cy.elements().unselect();\n\n            if (data.val === \"showAll\")\n                $(\"#show-all\").trigger('click');\n            else {\n                data.elementIds.forEach(function (id) {\n                    cy.getElementById(id).select();\n                });\n\n                if (data.val == \"hide\")\n                    $(\"#hide-selected\").trigger('click');\n                else\n                    $(\"#show-selected\").trigger('click');\n            }\n\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n    socket.on('searchByLabel', function(data, callback){\n        try {\n            //unselect all others\n            cy.elements().unselect();\n\n            chise.searchByLabel(data.label);\n\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n    socket.on('updateHighlight', function(data, callback){\n        try {\n            //unselect all others\n            cy.elements().unselect();\n\n            if(data.val === \"remove\"){\n                $(\"#remove-highlights\").trigger('click');\n            }\n            else{\n                data.elementIds.forEach(function (id) {\n                    cy.getElementById(id).select();\n                });\n\n                if (data.val === \"neighbors\")\n                    $(\"#highlight-neighbors-of-selected\").trigger('click');\n                else if (data.val === \"processes\")\n                    $(\"#highlight-processes-of-selected\").trigger('click');\n            }\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n    socket.on('updateExpandCollapse', function(data, callback){\n        try {\n\n            //unselect all others\n            cy.elements().unselect();\n\n            data.elementIds.forEach(function (id) {\n                cy.getElementById(id).select();\n            });\n\n            if (data.val === \"collapse\")\n                $(\"#collapse-selected\").trigger('click');\n            else\n                $(\"#expand-selected\").trigger('click');\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n\n    socket.on('addCompound', function(data, callback){\n        try {\n            //unselect all others\n            cy.elements().unselect();\n\n            data.elementIds.forEach(function (nodeId) {\n\n                cy.getElementById(nodeId).select();\n            });\n\n            if (data.val === \"complex\")\n                $(\"#add-complex-for-selected\").trigger('click');\n            else\n                $(\"#add-compartment-for-selected\").trigger('click');\n\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n\n    });\n\n    socket.on('clone', function(data, callback){\n        try {\n            cy.elements().unselect();\n\n            data.elementIds.forEach(function (nodeId) {\n                cy.getElementById(nodeId).select();\n            });\n\n            $(\"#clone-selected\").trigger('click');\n\n\n            if (callback) callback(\"success\");\n        }\n        catch(e){\n            console.log(e);\n            if(callback) callback(\"fail\");\n\n        }\n    });\n\n\n\n    socket.on(\"mergeSbgn\", function(data, callback){\n        self.mergeSbgn(data);\n        if(callback) callback(\"success\");\n    });\n\n    socket.on(\"mergeJsonWithCurrent\", function(data){\n        self.mergeJsonWithCurrent(data);\n    });\n\n\n\n    // socket.on('agentContextQuestion', function(socketId){\n    //     setTimeout(function() {\n    //         var answer = confirm(\"Do you agree with the context?\");\n    //         socket.emit('contextAnswer', {socketId: socketId, value:answer});\n    //         //if (callback) callback(answer);\n    //     }, 1000); //wait for the human to read\n    //\n    // });\n\n\n\n}\n\n/***\n * Called only once in a browser after first page rendering\n * @param model\n * @returns {*}\n */\n\napp.proto.create = function (model) {\n    model.set('_page.showTime', true);\n\n    var self = this;\n    docReady = true;\n\n    var isQueryWindow = false;\n\n    socket = io();\n\n\n    var id = model.get('_session.userId');\n    var name = model.get('_page.doc.users.' + id +'.name');\n\n    modelManager = require('./public/collaborative-app/modelManager.js')(model, model.get('_page.room') );\n    modelManager.setName( model.get('_session.userId'),name);\n\n    factoidHandler = require('./public/collaborative-app/factoid-handler')(this, modelManager) ;\n    factoidHandler.initialize();\n\n\n    //Notify server about the client connection\n    socket.emit(\"subscribeHuman\", { userName:name, room:  model.get('_page.room'), userId: id}, function(){\n\n    }); //subscribe to current doc as a new room\n\n\n    // //If we get a message on a separate window\n\n    window.addEventListener('message', function(event) {\n        if(event.data) { //initialization for a query winddow\n            isQueryWindow = true;\n\n            modelManager.newModel(\"me\"); //do not delete cytoscape, only the model\n\n             chise.updateGraph(JSON.parse(event.data));\n\n\n            setTimeout(function() {\n\n                modelManager.initModel(cy.nodes(), cy.edges(), appUtilities, \"me\");\n            },2000);\n        }\n\n    }, false);\n\n\n\n\n    this.listenToAgentSocket(model);\n\n\n\n    //Loading cytoscape and clients\n    setTimeout(function(){\n\n    if(!isQueryWindow) { //initialization for a regular window\n        var isModelEmpty = self.loadCyFromModel();\n        console.log(\"no query\");\n        //TODO????????????????\n        setTimeout(function () {\n            if (isModelEmpty)\n                modelManager.initModel(cy.nodes(), cy.edges(), appUtilities, \"me\");\n\n\n\n        }, 1000);\n\n    }\n\n        require('./public/collaborative-app/editor-listener.js')(modelManager);\n        //Listen to these after cy is loaded\n        $(\"#undo-last-action, #undo-icon\").click(function (e) {\n            if(modelManager.isUndoPossible()){\n                modelManager.undoCommand();\n\n            }\n        });\n\n        $(\"#redo-last-action, #redo-icon\").click(function (e) {\n            if(modelManager.isRedoPossible()){\n                modelManager.redoCommand();\n\n            }\n        });\n\n\n    }, 2000);\n\n\n\n    this.atBottom = true;\n\n\n\n    return model.on('all', '_page.list', (function (_this) {\n\n        return function () {\n            if (!_this.atBottom) {\n                return;\n            }\n            return _this.container.scrollTop = _this.list.offsetHeight;\n        };\n    })(this));\n};\n\napp.proto.loadCyFromModel = function(){\n\n\n    var jsonArr = modelManager.getJsonFromModel();\n\n\n    if (jsonArr!= null) {\n        //Updates data fields and sets style fields to default\n        chise.updateGraph({\n            nodes: jsonArr.nodes,\n            edges: jsonArr.edges\n        });\n\n\n        //Update position fields separately\n        cy.nodes().forEach(function(node){\n\n            var position = modelManager.getModelNodeAttribute('position',node.id());\n\n            node.position({x:position.x, y: position.y});\n\n        });\n\n        var props;\n        //update app utilities as well\n        props = modelManager.getLayoutProperties();\n        if(props) appUtilities.currentLayoutProperties = props;\n\n        props = modelManager.getGeneralProperties();\n        if(props) appUtilities.currentGeneralProperties = props;\n\n        props = modelManager.getGridProperties();\n        if(props) appUtilities.currentGridProperties = props;\n\n    }\n    return (jsonArr == null);\n}\n\nfunction moveNodeAndChildren(positionDiff, node, notCalcTopMostNodes) {\n        var oldX = node.position(\"x\");\n        var oldY = node.position(\"y\");\n        node.position({\n            x: oldX + positionDiff.x,\n            y: oldY + positionDiff.y\n        });\n        var children = node.children();\n        children.forEach(function(child){\n            moveNodeAndChildren(positionDiff, child, true);\n        });\n}\n\napp.proto.listenToNodeOperations = function(model){\n\n\n    model.on('all', '_page.doc.factoid.*', function(id, op, val, prev, passed){\n\n        if(docReady &&  passed.user == null) {\n            factoidHandler.setFactoidModel(val);\n        }\n\n\n    });\n\n    //Update inspector\n    model.on('all', '_page.doc.cy.nodes.**', function(id, op, val, prev, passed){\n        inspectorUtilities.handleSBGNInspector();\n    });\n\n    model.on('all', '_page.doc.cy.nodes.*', function(id, op, val, prev, passed){\n\n\n        if(docReady &&  passed.user == null) {\n\n            var node  = model.get('_page.doc.cy.nodes.' + id);\n\n\n            if(!node || !node.id){ //node is deleted\n                cy.getElementById(id).remove();\n            }\n        }\n\n\n\n    });\n\n\n\n\n    model.on('all', '_page.doc.cy.nodes.*.addedLater', function(id, op, idName, prev, passed){ //this property must be something that is only changed during insertion\n\n\n        if(docReady && passed.user == null) {\n            var pos = model.get('_page.doc.cy.nodes.'+ id + '.position');\n            var sbgnclass = model.get('_page.doc.cy.nodes.'+ id + '.data.class');\n            var visibility = model.get('_page.doc.cy.nodes.'+ id + '.visibility');\n            var parent = model.get('_page.doc.cy.nodes.'+ id + '.data.parent');\n\n            if(parent == undefined) parent = null;\n\n\n            var newNode = chise.elementUtilities.addNode(pos.x, pos.y, sbgnclass, id, parent, visibility);\n\n            // modelManager.initModelNode(newNode,\"me\", true);\n\n\n            newNode.move({\"parent\":parent});\n\n        }\n\n    });\n\n\n\n    model.on('all', '_page.doc.cy.nodes.*.position', function(id, op, pos,prev, passed){\n\n        if(docReady && passed.user == null) {\n            var posDiff = {x: (pos.x - cy.getElementById(id).position(\"x\")), y:(pos.y - cy.getElementById(id).position(\"y\"))} ;\n            moveNodeAndChildren(posDiff, cy.getElementById(id)); //children need to be updated manually here\n\n        }\n    });\n    model.on('all', '_page.doc.cy.nodes.*.highlightColor', function(id, op, val,prev, passed){\n\n        if(docReady && passed.user == null) {\n            if(val == null){\n                cy.getElementById(id).css({\n                    \"overlay-color\": null,\n                    \"overlay-padding\": 10,\n                    \"overlay-opacity\": 0\n                });\n\n            }\n            else\n                cy.getElementById(id).css({\n                    \"overlay-color\": val,\n                    \"overlay-padding\": 10,\n                    \"overlay-opacity\": 0.25\n                });\n\n            console.log(\"changed highlightcolor\");\n        }\n\n    });\n\n    //Called by agents to change bbox\n    model.on('all', '_page.doc.cy.nodes.*.data.*.*', function(id, att1,att2, op, val,prev, passed){\n        if(docReady && passed.user == null) {\n\n            var newAtt = cy.getElementById(id).data(att1);\n            newAtt[att2] = val;\n            cy.getElementById(id).data(att1, newAtt);\n\n\n        }\n    });\n\n\n    //Called by agents to change specific properties of data\n    model.on('all', '_page.doc.cy.nodes.*.data.*', function(id, att, op, val,prev, passed){\n        if(docReady && passed.user == null) {\n\n            cy.getElementById(id).data(att, val);\n            if(att === \"parent\")\n                cy.getElementById(id).move({\"parent\":val});\n        }\n    });\n\n\n    model.on('all', '_page.doc.cy.nodes.*.data', function(id,  op, data,prev, passed){\n\n        console.log(\"only data\");\n\n\n\n\n        if(docReady && passed.user == null) {\n\n            //cy.getElementById(id).data(data); //can't call this if cy element does not have a field called \"data\"\n            cy.getElementById(id)._private.data = data;\n\n            //to update parent\n            var newParent = data.parent;\n            if(newParent == undefined)\n                newParent = null;  //must be null explicitly\n\n            cy.getElementById(id).move({\"parent\":newParent});\n            cy.getElementById(id).updateStyle();\n\n\n        }\n    });\n\n\n\n    model.on('all', '_page.doc.cy.nodes.*.expandCollapseStatus', function(id, op, val,prev, passed){\n\n\n\n        if(docReady && passed.user == null) {\n            var expandCollapse = cy.expandCollapse('get'); //we can't call chise.expand or collapse directly as it causes infinite calls\n            if(val === \"collapse\")\n                expandCollapse.collapse(cy.getElementById(id));\n            else\n                expandCollapse.expand(cy.getElementById(id));\n\n        }\n\n    });\n\n\n    model.on('all', '_page.doc.cy.nodes.*.highlightStatus', function(id, op, highlightStatus, prev, passed){ //this property must be something that is only changed during insertion\n        if(docReady && passed.user == null) {\n            try{\n                var viewUtilities = cy.viewUtilities('get');\n\n                console.log(highlightStatus);\n                if(highlightStatus === \"highlighted\")\n                    viewUtilities.highlight(cy.getElementById(id));\n                else\n                    viewUtilities.unhighlight(cy.getElementById(id));\n\n                //    cy.getElementById(id).updateStyle();\n            }\n            catch(e){\n                console.log(e);\n            }\n\n        }\n    });\n\n    model.on('all', '_page.doc.cy.nodes.*.visibilityStatus', function(id, op, visibilityStatus, prev, passed){ //this property must be something that is only changed during insertion\n        if(docReady && passed.user == null) {\n            try{\n                var viewUtilities = cy.viewUtilities('get');\n\n\n                if(visibilityStatus === \"hide\")\n                    viewUtilities.hide(cy.getElementById(id));\n                else\n                    viewUtilities.show(cy.getElementById(id));\n\n            }\n            catch(e){\n                console.log(e);\n            }\n\n        }\n    });\n\n}\n\napp.proto.listenToEdgeOperations = function(model){\n\n\n\n\n    //Update inspector\n    model.on('all', '_page.doc.cy.edges.**', function(id, op, val, prev, passed){\n        inspectorUtilities.handleSBGNInspector();\n    });\n\n\n    model.on('all', '_page.doc.cy.edges.*.highlightColor', function(id, op, val,prev, passed){\n\n        if(docReady && passed.user == null) {\n            if(val == null){\n\n                cy.getElementById(id).css({\n                    \"overlay-color\": null,\n                    \"overlay-padding\": 10,\n                    \"overlay-opacity\": 0\n                });\n\n            }\n            else {\n                cy.getElementById(id).css({\n                    \"overlay-color\": val,\n                    \"overlay-padding\": 10,\n                    \"overlay-opacity\": 0.25\n                });\n            }\n\n\n        }\n    });\n\n    model.on('all', '_page.doc.cy.edges.*', function(id, op, val, prev, passed){\n\n\n        if(docReady &&  passed.user == null) {\n            var edge  = model.get('_page.doc.cy.edges.' + id); //check\n\n            if(!edge|| !edge.id){ //edge is deleted\n                cy.getElementById(id).remove();\n\n            }\n        }\n\n    });\n\n    model.on('all', '_page.doc.cy.edges.*.addedLater', function(id,op, idName, prev, passed){//this property must be something that is only changed during insertion\n\n\n        if(docReady && passed.user == null ){\n            var source = model.get('_page.doc.cy.edges.'+ id + '.data.source');\n            var target = model.get('_page.doc.cy.edges.'+ id + '.data.target');\n            var sbgnclass = model.get('_page.doc.cy.edges.'+ id + '.data.class');\n            var visibility = model.get('_page.doc.cy.nodes.'+ id + '.visibility');\n\n\n            var newEdge = chise.elementUtilities.addEdge(source, target, sbgnclass, id, visibility);\n\n\n\n\n            modelManager.initModelEdge(newEdge,\"me\", true);\n\n        }\n\n    });\n    //Called by agents to change specific properties of data\n    model.on('all', '_page.doc.cy.edges.*.data.*', function(id, att, op, val,prev, passed){\n        if(docReady && passed.user == null) {\n            cy.getElementById(id).data(att, val);\n        }\n    });\n\n    model.on('all', '_page.doc.cy.edges.*.data', function(id, op, data,prev, passed){\n\n        if(docReady && passed.user == null) {\n            //cy.getElementById(id).data(data); //can't call this if cy element does not have a field called \"data\"\n            cy.getElementById(id)._private.data = data;\n\n        }\n    });\n\n\n    model.on('all', '_page.doc.cy.edges.*.bendPoints', function(id, op, bendPoints, prev, passed){ //this property must be something that is only changed during insertion\n        if(docReady && passed.user == null) {\n\n            try{\n                var edge = cy.getElementById(id);\n                if(bendPoints.weights && bendPoints.weights.length > 0) {\n                    edge.scratch('cyedgebendeditingWeights', bendPoints.weights);\n                    edge.scratch('cyedgebendeditingDistances', bendPoints.distances);\n                    edge.addClass('edgebendediting-hasbendpoints');\n                }\n                else{\n                    edge.removeScratch('cyedgebendeditingWeights');\n                    edge.removeScratch('cyedgebendeditingDistances');\n                    edge.removeClass('edgebendediting-hasbendpoints');\n                }\n\n                edge.trigger('cyedgebendediting.changeBendPoints');\n             //   cy.getElementById(id).updateStyle();\n\n            }\n            catch(e){\n                console.log(e);\n            }\n\n        }\n    });\n\n    model.on('all', '_page.doc.cy.edges.*.highlightStatus', function(id, op, highlightStatus, prev, passed){ //this property must be something that is only changed during insertion\n        if(docReady && passed.user == null) {\n            var viewUtilities = cy.viewUtilities('get');\n            try{\n                if(highlightStatus === \"highlighted\")\n                    viewUtilities.highlight(cy.getElementById(id));\n                else\n                    viewUtilities.unhighlight(cy.getElementById(id));\n\n            }\n            catch(e){\n                console.log(e);\n            }\n\n        }\n    });\n\n    model.on('all', '_page.doc.cy.edges.*.visibilityStatus', function(id, op, visibilityStatus, prev, passed){ //this property must be something that is only changed during insertion\n        if(docReady && passed.user == null) {\n            var viewUtilities = cy.viewUtilities('get');\n            try{\n                if(visibilityStatus === \"hide\")\n                    viewUtilities.hide(cy.getElementById(id));\n                else\n                    viewUtilities.show(cy.getElementById(id));\n            }\n            catch(e){\n                console.log(e);\n            }\n        }\n    });\n\n}\n\napp.proto.init = function (model) {\n    var timeSort;\n\n    var self = this;\n    this.listenToNodeOperations(model);\n    this.listenToEdgeOperations(model);\n\n\n\n    //Listen to other model operations\n\n    model.on('all', '_page.doc.factoid.*', function(id, op, val, prev, passed){\n\n        if(docReady &&  passed.user == null) {\n            factoidHandler.setFactoidModel(val);\n        }\n\n\n    });\n\n\n\n    //Cy updated by other clients\n    model.on('change', '_page.doc.cy.initTime', function( val, prev, passed){\n\n        if(docReady &&  passed.user == null) {\n\n            self.loadCyFromModel();\n\n        }\n    });\n\n    model.on('all', '_page.doc.cy.layoutProperties', function(op, val) {\n        if (docReady){\n            for(var att in val){ //assign each attribute separately to keep the functions in currentlayoutproperties\n                if(appUtilities.currentLayoutProperties[att])\n                    appUtilities.currentLayoutProperties[att] = val[att];\n            }\n\n        }\n\n    });\n\n    model.on('all', '_page.doc.cy.generalProperties', function(op, val) {\n        if (docReady){\n            for(var att in val){ //assign each attribute separately to keep the functions in currentgeneralproperties\n                if(appUtilities.currentGeneralProperties[att])\n                    appUtilities.currentGeneralProperties[att] = val[att];\n            }\n\n        }\n\n    });\n\n    model.on('all', '_page.doc.cy.gridProperties', function(op, val) {\n        if (docReady){\n            for(var att in val){ //assign each attribute separately to keep the functions in currentgridproperties\n                if(appUtilities.currentGridProperties[att])\n                    appUtilities.currentGridProperties[att] = val[att];\n            }\n\n        }\n\n    });\n\n\n    //Sometimes works\n    model.on('all', '_page.doc.images', function() {\n        if (docReady)\n            triggerContentChange('receivedImages');\n    });\n\n    model.on('all', '_page.doc.history', function(){\n        if(docReady){\n            triggerContentChange('command-history-area');\n        }\n    });\n\n    model.on('insert', '_page.list', function (index) {\n\n\n        var com = model.get('_page.list');\n        var myId = model.get('_session.userId');\n\n\n        if(docReady){\n            triggerContentChange('messages');\n\n        }\n\n        if (com[com.length - 1].userId != myId) {\n\n            playSound();\n\n        }\n    });\n\n\n    timeSort = function (a, b) {\n\n        return (a != null ? a.date : void 0) - (b != null ? b.date : void 0);\n    };\n\n\n\n    return model.sort('_page.doc.messages', timeSort).ref('_page.list');\n};\n\n\napp.proto.onScroll = function () {\n    var bottom, containerHeight, scrollBottom;\n    bottom = this.list.offsetHeight;\n    containerHeight = this.container.offsetHeight;\n    scrollBottom = this.container.scrollTop + containerHeight;\n\n    return this.atBottom = bottom < containerHeight || scrollBottom > bottom - 10;\n\n};\n\n\napp.proto.changeColorCode = function(){\n\n    var  user = this.model.at('_page.doc.users.' + this.model.get('_session.userId'));\n    user.set('colorCode', getNewColor());\n\n};\napp.proto.runUnitTests = function(){\n\n    var room = this.model.get('_page.room');\n    require(\"./public/test/testsAgentAPI.js\")((\"http://localhost:3000/\" + room), modelManager);\n    // require(\"./public/test/testsModelManager.js\")();\n    require(\"./public/test/testOptions.js\")(); //to print out results\n\n\n\n\n}\n\napp.proto.add = function (model, filePath) {\n\n    if(model == null)\n\n        model = this.model;\n    this.atBottom = true;\n\n\n\n        var comment;\n        comment = model.del('_page.newComment'); //to clear  the input box\n        if (!comment) {\n            return;\n        }\n\n        var targets  = [];\n        var users = model.get('_page.doc.userIds');\n\n        var myId = model.get('_session.userId');\n        for(var i = 0; i < users.length; i++){\n            var user = users[i];\n            if(user == myId ||  document.getElementById(user).checked){\n                targets.push({id: user});\n            }\n        }\n\n        var msgUserId = model.get('_session.userId');\n        var msgUserName = model.get('_page.doc.users.' + msgUserId +'.name');\n\n        socket.emit('getDate', function(date){ //get the date from the server\n\n            model.add('_page.doc.messages', {\n                room: model.get('_page.room'),\n                targets: targets,\n                userId: msgUserId,\n                userName: msgUserName,\n                comment: comment,\n                date: date\n            });\n\n        });\n\n\n};\n\n\n\n\napp.proto.uploadFile = function(evt){\n\n    try{\n        var room = this.model.get('_page.room');\n        var fileStr = this.model.get(\"_page.newFile\").split('\\\\');\n        var filePath = fileStr[fileStr.length-1];\n\n        var file = evt.target.files[0];\n\n        var reader = new FileReader();\n        reader.onload = function(evt){\n            modelManager.addImage({ img: evt.target.result,room: room, filePath: filePath});\n\n        };\n\n        reader.readAsDataURL(file);\n\n        //Add file name as a text message\n        this.model.set('_page.newComment', \"Sent image: \"  + filePath );\n\n        this.app.proto.add(this.model, filePath);\n\n\n    }\n    catch(error){ //clicking cancel when the same file is selected causes error\n        console.log(error);\n\n    }\n};\n\n\napp.proto.count = function (value) {\n    return Object.keys(value || {}).length;\n};\n\n\n\napp.proto.formatTime = function (message) {\n    var hours, minutes, seconds, period, time;\n    time = message && message.date;\n\n\n    if (!time) {\n        return;\n    }\n    time = new Date(time);\n    hours = time.getHours();\n\n    minutes = time.getMinutes();\n\n    seconds = time.getSeconds();\n\n    if (minutes < 10) {\n        minutes = '0' + minutes;\n    }\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return hours + ':' + minutes + ':' + seconds;\n};\n\napp.proto.formatObj = function(obj){\n\n    return JSON.stringify(obj, null, '\\t');\n};\n\n\napp.proto.mergeJsons = function(jsonGraphs){\n\n    if(jsonGraphs.length == 0 )\n        return;\n\n    modelManager.setRollbackPoint(); //before merging everything\n\n    //clear the canvas first\n    cy.remove(cy.elements());\n    modelManager.newModel(\"me\"); //do not delete cytoscape, only the model\n\n\n    //var labelMap = {}; //keeps label names in association with jsons -- an object of arrays\n    var jsonObj = jsonGraphs[0].json;\n\n\n    var sentenceNodeMap = {};\n    var idxCardNodeMap = {};\n\n\n\n    jsonGraphs[0].json.nodes.forEach(function(node){ //do for the first graph before any changes\n\n        sentenceNodeMap[node.data.id] = [jsonGraphs[0].sentence];\n        idxCardNodeMap[node.data.id] = [jsonGraphs[0].idxCard];\n    });\n\n\n\n\n    for(var i = 0; i  < jsonGraphs.length - 1; i++){\n\n        var mergeResult = jsonMerger.merge(jsonObj, jsonGraphs[i+1].json); //jsonobj's ids remain the same\n\n\n        mergeResult.whichJsn.jsn2.forEach(function(nd){\n\n            if(sentenceNodeMap[nd] !== undefined) {\n                sentenceNodeMap[nd].push(jsonGraphs[i + 1].sentence);\n                idxCardNodeMap[nd].push(jsonGraphs[i + 1].idxCard);\n            }\n            else {\n                sentenceNodeMap[nd] = [jsonGraphs[i + 1].sentence];\n                idxCardNodeMap[nd] = [jsonGraphs[i + 1].idxCard];\n            }\n\n\n        });\n\n\n\n\n\n\n        jsonObj = mergeResult.wholeJson;\n\n    }\n\n\n    //Map\n\n    modelManager.newModel( \"me\", true);\n\n    chise.updateGraph(jsonObj);\n\n    setTimeout(function(){\n        modelManager.initModel(cy.nodes(), cy.edges(), appUtilities, \"me\");\n    },1000); //wait for chise to complete updating graph\n\n\n    $(\"#perform-layout\").trigger('click');\n\n    //Call merge notification after the layout\n    setTimeout(function(){\n        modelManager.mergeJsons(\"me\", true);\n    }, 1000);\n\n\n    return {sentences: sentenceNodeMap, idxCards: idxCardNodeMap};\n}\n\napp.proto.mergeJsonWithCurrent = function(jsonGraph){\n\n\n    var currJson = sbgnviz.createJson();\n\nconsole.log(jsonGraph);\n    modelManager.setRollbackPoint(); //before merging\n\n\n\n    var mergeResult = jsonMerger.merge(jsonGraph, currJson); //Merge the two SBGN models.\n    var jsonObj = mergeResult.wholeJson;\n    var newJsonIds = mergeResult.jsonToMerge;\n\n    //get another sbgncontainer and display the new SBGN model.\n    modelManager.newModel( \"me\", true);\n\n    chise.updateGraph(jsonObj);\n    setTimeout(function(){\n        modelManager.initModel(cy.nodes(), cy.edges(), appUtilities, \"me\");\n    },1000); //wait for chise to complete updating graph\n\n\n\n\n    //select the new graph\n    newJsonIds.nodes.forEach(function(node){\n            cy.getElementById(node.data.id).select();\n\n    });\n\n    //Call Layout\n\n\n    $(\"#perform-layout\").trigger('click');\n\n    //Call merge notification after the layout\n    setTimeout(function(){\n        modelManager.mergeJsons(\"me\", true);\n    }, 1000);\n\n\n}\n\napp.proto.mergeSbgn = function(sbgnText){\n\n\n    var newJson = sbgnviz.convertSbgnmlTextToJson(sbgnText);\n    this.mergeJsonWithCurrent(newJson);\n}\n","module.exports = arrayDiff;\n\n// Based on some rough benchmarking, this algorithm is about O(2n) worst case,\n// and it can compute diffs on random arrays of length 1024 in about 34ms,\n// though just a few changes on an array of length 1024 takes about 0.5ms\n\narrayDiff.InsertDiff = InsertDiff;\narrayDiff.RemoveDiff = RemoveDiff;\narrayDiff.MoveDiff = MoveDiff;\n\nfunction InsertDiff(index, values) {\n  this.index = index;\n  this.values = values;\n}\nInsertDiff.prototype.type = 'insert';\nInsertDiff.prototype.toJSON = function() {\n  return {\n    type: this.type,\n    index: this.index,\n    values: this.values\n  };\n};\n\nfunction RemoveDiff(index, howMany) {\n  this.index = index;\n  this.howMany = howMany;\n}\nRemoveDiff.prototype.type = 'remove';\nRemoveDiff.prototype.toJSON = function() {\n  return {\n    type: this.type,\n    index: this.index,\n    howMany: this.howMany\n  };\n};\n\nfunction MoveDiff(from, to, howMany) {\n  this.from = from;\n  this.to = to;\n  this.howMany = howMany;\n}\nMoveDiff.prototype.type = 'move';\nMoveDiff.prototype.toJSON = function() {\n  return {\n    type: this.type,\n    from: this.from,\n    to: this.to,\n    howMany: this.howMany\n  };\n};\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n\nfunction arrayDiff(before, after, equalFn) {\n  if (!equalFn) equalFn = strictEqual;\n\n  // Find all items in both the before and after array, and represent them\n  // as moves. Many of these \"moves\" may end up being discarded in the last\n  // pass if they are from an index to the same index, but we don't know this\n  // up front, since we haven't yet offset the indices.\n  //\n  // Also keep a map of all the indices accounted for in the before and after\n  // arrays. These maps are used next to create insert and remove diffs.\n  var beforeLength = before.length;\n  var afterLength = after.length;\n  var moves = [];\n  var beforeMarked = {};\n  var afterMarked = {};\n  for (var beforeIndex = 0; beforeIndex < beforeLength; beforeIndex++) {\n    var beforeItem = before[beforeIndex];\n    for (var afterIndex = 0; afterIndex < afterLength; afterIndex++) {\n      if (afterMarked[afterIndex]) continue;\n      if (!equalFn(beforeItem, after[afterIndex])) continue;\n      var from = beforeIndex;\n      var to = afterIndex;\n      var howMany = 0;\n      do {\n        beforeMarked[beforeIndex++] = afterMarked[afterIndex++] = true;\n        howMany++;\n      } while (\n        beforeIndex < beforeLength &&\n        afterIndex < afterLength &&\n        equalFn(before[beforeIndex], after[afterIndex]) &&\n        !afterMarked[afterIndex]\n      );\n      moves.push(new MoveDiff(from, to, howMany));\n      beforeIndex--;\n      break;\n    }\n  }\n\n  // Create a remove for all of the items in the before array that were\n  // not marked as being matched in the after array as well\n  var removes = [];\n  for (beforeIndex = 0; beforeIndex < beforeLength;) {\n    if (beforeMarked[beforeIndex]) {\n      beforeIndex++;\n      continue;\n    }\n    var index = beforeIndex;\n    var howMany = 0;\n    while (beforeIndex < beforeLength && !beforeMarked[beforeIndex++]) {\n      howMany++;\n    }\n    removes.push(new RemoveDiff(index, howMany));\n  }\n\n  // Create an insert for all of the items in the after array that were\n  // not marked as being matched in the before array as well\n  var inserts = [];\n  for (var afterIndex = 0; afterIndex < afterLength;) {\n    if (afterMarked[afterIndex]) {\n      afterIndex++;\n      continue;\n    }\n    var index = afterIndex;\n    var howMany = 0;\n    while (afterIndex < afterLength && !afterMarked[afterIndex++]) {\n      howMany++;\n    }\n    var values = after.slice(index, index + howMany);\n    inserts.push(new InsertDiff(index, values));\n  }\n\n  var insertsLength = inserts.length;\n  var removesLength = removes.length;\n  var movesLength = moves.length;\n  var i, j;\n\n  // Offset subsequent removes and moves by removes\n  var count = 0;\n  for (i = 0; i < removesLength; i++) {\n    var remove = removes[i];\n    remove.index -= count;\n    count += remove.howMany;\n    for (j = 0; j < movesLength; j++) {\n      var move = moves[j];\n      if (move.from >= remove.index) move.from -= remove.howMany;\n    }\n  }\n\n  // Offset moves by inserts\n  for (i = insertsLength; i--;) {\n    var insert = inserts[i];\n    var howMany = insert.values.length;\n    for (j = movesLength; j--;) {\n      var move = moves[j];\n      if (move.to >= insert.index) move.to -= howMany;\n    }\n  }\n\n  // Offset the to of moves by later moves\n  for (i = movesLength; i-- > 1;) {\n    var move = moves[i];\n    if (move.to === move.from) continue;\n    for (j = i; j--;) {\n      var earlier = moves[j];\n      if (earlier.to >= move.to) earlier.to -= move.howMany;\n      if (earlier.to >= move.from) earlier.to += move.howMany;\n    }\n  }\n\n  // Only output moves that end up having an effect after offsetting\n  var outputMoves = [];\n\n  // Offset the from of moves by earlier moves\n  for (i = 0; i < movesLength; i++) {\n    var move = moves[i];\n    if (move.to === move.from) continue;\n    outputMoves.push(move);\n    for (j = i + 1; j < movesLength; j++) {\n      var later = moves[j];\n      if (later.from >= move.from) later.from -= move.howMany;\n      if (later.from >= move.to) later.from += move.howMany;\n    }\n  }\n\n  return removes.concat(outputMoves, inserts);\n}\n","(function(){\nvar f, aa = aa || {}, l = this;\nfunction ba(a) {\n  a = a.split(\".\");\n  for (var b = l, c;c = a.shift();) {\n    if (null != b[c]) {\n      b = b[c];\n    } else {\n      return null;\n    }\n  }\n  return b;\n}\nfunction ca() {\n}\nfunction da(a) {\n  var b = typeof a;\n  if (\"object\" == b) {\n    if (a) {\n      if (a instanceof Array) {\n        return \"array\";\n      }\n      if (a instanceof Object) {\n        return b;\n      }\n      var c = Object.prototype.toString.call(a);\n      if (\"[object Window]\" == c) {\n        return \"object\";\n      }\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) {\n        return \"array\";\n      }\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) {\n        return \"function\";\n      }\n    } else {\n      return \"null\";\n    }\n  } else {\n    if (\"function\" == b && \"undefined\" == typeof a.call) {\n      return \"object\";\n    }\n  }\n  return b;\n}\nfunction m(a) {\n  return \"array\" == da(a);\n}\nfunction ea(a) {\n  var b = da(a);\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\n}\nfunction n(a) {\n  return \"string\" == typeof a;\n}\nfunction fa(a) {\n  return \"function\" == da(a);\n}\nvar ga = \"closure_uid_\" + (1E9 * Math.random() >>> 0), ha = 0;\nfunction ia(a, b, c) {\n  return a.call.apply(a.bind, arguments);\n}\nfunction ja(a, b, c) {\n  if (!a) {\n    throw Error();\n  }\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      var c = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(c, d);\n      return a.apply(b, c);\n    };\n  }\n  return function() {\n    return a.apply(b, arguments);\n  };\n}\nfunction p(a, b, c) {\n  p = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? ia : ja;\n  return p.apply(null, arguments);\n}\nvar q = Date.now || function() {\n  return+new Date;\n};\nfunction s(a, b) {\n  function c() {\n  }\n  c.prototype = b.prototype;\n  a.pa = b.prototype;\n  a.prototype = new c;\n  a.Hc = function(a, c, g) {\n    var h = Array.prototype.slice.call(arguments, 2);\n    return b.prototype[c].apply(a, h);\n  };\n}\n;function ka(a, b) {\n  for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1);e.length && 1 < c.length;) {\n    d += c.shift() + e.shift();\n  }\n  return d + c.join(\"%s\");\n}\nfunction la(a) {\n  if (!ma.test(a)) {\n    return a;\n  }\n  -1 != a.indexOf(\"&\") && (a = a.replace(na, \"&amp;\"));\n  -1 != a.indexOf(\"<\") && (a = a.replace(oa, \"&lt;\"));\n  -1 != a.indexOf(\">\") && (a = a.replace(pa, \"&gt;\"));\n  -1 != a.indexOf('\"') && (a = a.replace(qa, \"&quot;\"));\n  -1 != a.indexOf(\"'\") && (a = a.replace(ra, \"&#39;\"));\n  return a;\n}\nvar na = /&/g, oa = /</g, pa = />/g, qa = /\"/g, ra = /'/g, ma = /[&<>\"']/;\nfunction sa() {\n  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36);\n}\nfunction ta(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n;var x, ua, va, wa;\nfunction xa() {\n  return l.navigator ? l.navigator.userAgent : null;\n}\nwa = va = ua = x = !1;\nvar ya;\nif (ya = xa()) {\n  var za = l.navigator;\n  x = 0 == ya.lastIndexOf(\"Opera\", 0);\n  ua = !x && (-1 != ya.indexOf(\"MSIE\") || -1 != ya.indexOf(\"Trident\"));\n  va = !x && -1 != ya.indexOf(\"WebKit\");\n  wa = !x && !va && !ua && \"Gecko\" == za.product;\n}\nvar Aa = x, y = ua, Ba = wa, z = va;\nfunction Ca() {\n  var a = l.document;\n  return a ? a.documentMode : void 0;\n}\nvar Da;\na: {\n  var Ea = \"\", Fa;\n  if (Aa && l.opera) {\n    var Ga = l.opera.version, Ea = \"function\" == typeof Ga ? Ga() : Ga\n  } else {\n    if (Ba ? Fa = /rv\\:([^\\);]+)(\\)|;)/ : y ? Fa = /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/ : z && (Fa = /WebKit\\/(\\S+)/), Fa) {\n      var Ha = Fa.exec(xa()), Ea = Ha ? Ha[1] : \"\"\n    }\n  }\n  if (y) {\n    var Ia = Ca();\n    if (Ia > parseFloat(Ea)) {\n      Da = String(Ia);\n      break a;\n    }\n  }\n  Da = Ea;\n}\nvar Ja = {};\nfunction A(a) {\n  var b;\n  if (!(b = Ja[a])) {\n    b = 0;\n    for (var c = String(Da).replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\").split(\".\"), d = String(a).replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, \"\").split(\".\"), e = Math.max(c.length, d.length), g = 0;0 == b && g < e;g++) {\n      var h = c[g] || \"\", k = d[g] || \"\", u = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\"), K = RegExp(\"(\\\\d*)(\\\\D*)\", \"g\");\n      do {\n        var v = u.exec(h) || [\"\", \"\", \"\"], r = K.exec(k) || [\"\", \"\", \"\"];\n        if (0 == v[0].length && 0 == r[0].length) {\n          break;\n        }\n        b = ta(0 == v[1].length ? 0 : parseInt(v[1], 10), 0 == r[1].length ? 0 : parseInt(r[1], 10)) || ta(0 == v[2].length, 0 == r[2].length) || ta(v[2], r[2]);\n      } while (0 == b);\n    }\n    b = Ja[a] = 0 <= b;\n  }\n  return b;\n}\nvar La = l.document, Ma = La && y ? Ca() || (\"CSS1Compat\" == La.compatMode ? parseInt(Da, 10) : 5) : void 0;\nfunction Na(a) {\n  Error.captureStackTrace ? Error.captureStackTrace(this, Na) : this.stack = Error().stack || \"\";\n  a && (this.message = String(a));\n}\ns(Na, Error);\nNa.prototype.name = \"CustomError\";\nfunction Oa(a, b) {\n  b.unshift(a);\n  Na.call(this, ka.apply(null, b));\n  b.shift();\n}\ns(Oa, Na);\nOa.prototype.name = \"AssertionError\";\nfunction Pa(a, b) {\n  throw new Oa(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1));\n}\n;var Qa = RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#(.*))?$\");\nfunction Ra(a) {\n  if (Sa) {\n    Sa = !1;\n    var b = l.location;\n    if (b) {\n      var c = b.href;\n      if (c && (c = (c = Ra(c)[3] || null) && decodeURIComponent(c)) && c != b.hostname) {\n        throw Sa = !0, Error();\n      }\n    }\n  }\n  return a.match(Qa);\n}\nvar Sa = z;\nfunction Ta(a) {\n  var b = [], c = 0, d;\n  for (d in a) {\n    b[c++] = a[d];\n  }\n  return b;\n}\nfunction Ua(a) {\n  var b = [], c = 0, d;\n  for (d in a) {\n    b[c++] = d;\n  }\n  return b;\n}\nvar Va = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\nfunction Wa(a, b) {\n  for (var c, d, e = 1;e < arguments.length;e++) {\n    d = arguments[e];\n    for (c in d) {\n      a[c] = d[c];\n    }\n    for (var g = 0;g < Va.length;g++) {\n      c = Va[g], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\n    }\n  }\n}\n;var B = Array.prototype, Xa = B.indexOf ? function(a, b, c) {\n  return B.indexOf.call(a, b, c);\n} : function(a, b, c) {\n  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\n  if (n(a)) {\n    return n(b) && 1 == b.length ? a.indexOf(b, c) : -1;\n  }\n  for (;c < a.length;c++) {\n    if (c in a && a[c] === b) {\n      return c;\n    }\n  }\n  return-1;\n}, Ya = B.forEach ? function(a, b, c) {\n  B.forEach.call(a, b, c);\n} : function(a, b, c) {\n  for (var d = a.length, e = n(a) ? a.split(\"\") : a, g = 0;g < d;g++) {\n    g in e && b.call(c, e[g], g, a);\n  }\n};\nfunction Za(a) {\n  var b;\n  a: {\n    b = $a;\n    for (var c = a.length, d = n(a) ? a.split(\"\") : a, e = 0;e < c;e++) {\n      if (e in d && b.call(void 0, d[e], e, a)) {\n        b = e;\n        break a;\n      }\n    }\n    b = -1;\n  }\n  return 0 > b ? null : n(a) ? a.charAt(b) : a[b];\n}\nfunction ab(a) {\n  return B.concat.apply(B, arguments);\n}\nfunction bb(a) {\n  var b = a.length;\n  if (0 < b) {\n    for (var c = Array(b), d = 0;d < b;d++) {\n      c[d] = a[d];\n    }\n    return c;\n  }\n  return[];\n}\n;function cb(a, b) {\n  this.O = {};\n  this.j = [];\n  this.o = 0;\n  var c = arguments.length;\n  if (1 < c) {\n    if (c % 2) {\n      throw Error(\"Uneven number of arguments\");\n    }\n    for (var d = 0;d < c;d += 2) {\n      this.set(arguments[d], arguments[d + 1]);\n    }\n  } else {\n    if (a) {\n      a instanceof cb ? (c = a.ca(), d = a.N()) : (c = Ua(a), d = Ta(a));\n      for (var e = 0;e < c.length;e++) {\n        this.set(c[e], d[e]);\n      }\n    }\n  }\n}\nf = cb.prototype;\nf.N = function() {\n  db(this);\n  for (var a = [], b = 0;b < this.j.length;b++) {\n    a.push(this.O[this.j[b]]);\n  }\n  return a;\n};\nf.ca = function() {\n  db(this);\n  return this.j.concat();\n};\nf.wa = function(a) {\n  return C(this.O, a);\n};\nf.remove = function(a) {\n  return C(this.O, a) ? (delete this.O[a], this.o--, this.j.length > 2 * this.o && db(this), !0) : !1;\n};\nfunction db(a) {\n  if (a.o != a.j.length) {\n    for (var b = 0, c = 0;b < a.j.length;) {\n      var d = a.j[b];\n      C(a.O, d) && (a.j[c++] = d);\n      b++;\n    }\n    a.j.length = c;\n  }\n  if (a.o != a.j.length) {\n    for (var e = {}, c = b = 0;b < a.j.length;) {\n      d = a.j[b], C(e, d) || (a.j[c++] = d, e[d] = 1), b++;\n    }\n    a.j.length = c;\n  }\n}\nf.get = function(a, b) {\n  return C(this.O, a) ? this.O[a] : b;\n};\nf.set = function(a, b) {\n  C(this.O, a) || (this.o++, this.j.push(a));\n  this.O[a] = b;\n};\nf.n = function() {\n  return new cb(this);\n};\nfunction C(a, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n;function eb(a) {\n  if (\"function\" == typeof a.N) {\n    return a.N();\n  }\n  if (n(a)) {\n    return a.split(\"\");\n  }\n  if (ea(a)) {\n    for (var b = [], c = a.length, d = 0;d < c;d++) {\n      b.push(a[d]);\n    }\n    return b;\n  }\n  return Ta(a);\n}\nfunction D(a, b, c) {\n  if (\"function\" == typeof a.forEach) {\n    a.forEach(b, c);\n  } else {\n    if (ea(a) || n(a)) {\n      Ya(a, b, c);\n    } else {\n      var d;\n      if (\"function\" == typeof a.ca) {\n        d = a.ca();\n      } else {\n        if (\"function\" != typeof a.N) {\n          if (ea(a) || n(a)) {\n            d = [];\n            for (var e = a.length, g = 0;g < e;g++) {\n              d.push(g);\n            }\n          } else {\n            d = Ua(a);\n          }\n        } else {\n          d = void 0;\n        }\n      }\n      for (var e = eb(a), g = e.length, h = 0;h < g;h++) {\n        b.call(c, e[h], d && d[h], a);\n      }\n    }\n  }\n}\n;function E(a, b) {\n  var c;\n  if (a instanceof E) {\n    this.D = void 0 !== b ? b : a.D, fb(this, a.oa), c = a.eb, F(this), this.eb = c, gb(this, a.ja), hb(this, a.Ca), ib(this, a.I), jb(this, a.R.n()), c = a.Na, F(this), this.Na = c;\n  } else {\n    if (a && (c = Ra(String(a)))) {\n      this.D = !!b;\n      fb(this, c[1] || \"\", !0);\n      var d = c[2] || \"\";\n      F(this);\n      this.eb = d ? decodeURIComponent(d) : \"\";\n      gb(this, c[3] || \"\", !0);\n      hb(this, c[4]);\n      ib(this, c[5] || \"\", !0);\n      jb(this, c[6] || \"\", !0);\n      c = c[7] || \"\";\n      F(this);\n      this.Na = c ? decodeURIComponent(c) : \"\";\n    } else {\n      this.D = !!b, this.R = new kb(null, 0, this.D);\n    }\n  }\n}\nf = E.prototype;\nf.oa = \"\";\nf.eb = \"\";\nf.ja = \"\";\nf.Ca = null;\nf.I = \"\";\nf.Na = \"\";\nf.oc = !1;\nf.D = !1;\nf.toString = function() {\n  var a = [], b = this.oa;\n  b && a.push(lb(b, mb), \":\");\n  if (b = this.ja) {\n    a.push(\"//\");\n    var c = this.eb;\n    c && a.push(lb(c, mb), \"@\");\n    a.push(encodeURIComponent(String(b)));\n    b = this.Ca;\n    null != b && a.push(\":\", String(b));\n  }\n  if (b = this.I) {\n    this.ja && \"/\" != b.charAt(0) && a.push(\"/\"), a.push(lb(b, \"/\" == b.charAt(0) ? nb : ob));\n  }\n  (b = this.R.toString()) && a.push(\"?\", b);\n  (b = this.Na) && a.push(\"#\", lb(b, pb));\n  return a.join(\"\");\n};\nf.n = function() {\n  return new E(this);\n};\nfunction fb(a, b, c) {\n  F(a);\n  a.oa = c ? b ? decodeURIComponent(b) : \"\" : b;\n  a.oa && (a.oa = a.oa.replace(/:$/, \"\"));\n}\nfunction gb(a, b, c) {\n  F(a);\n  a.ja = c ? b ? decodeURIComponent(b) : \"\" : b;\n}\nfunction hb(a, b) {\n  F(a);\n  if (b) {\n    b = Number(b);\n    if (isNaN(b) || 0 > b) {\n      throw Error(\"Bad port number \" + b);\n    }\n    a.Ca = b;\n  } else {\n    a.Ca = null;\n  }\n}\nfunction ib(a, b, c) {\n  F(a);\n  a.I = c ? b ? decodeURIComponent(b) : \"\" : b;\n}\nfunction jb(a, b, c) {\n  F(a);\n  b instanceof kb ? (a.R = b, a.R.ub(a.D)) : (c || (b = lb(b, qb)), a.R = new kb(b, 0, a.D));\n}\nfunction G(a, b, c) {\n  F(a);\n  a.R.set(b, c);\n}\nfunction rb(a, b, c) {\n  F(a);\n  m(c) || (c = [String(c)]);\n  sb(a.R, b, c);\n}\nfunction H(a) {\n  F(a);\n  G(a, \"zx\", sa());\n  return a;\n}\nfunction F(a) {\n  if (a.oc) {\n    throw Error(\"Tried to modify a read-only Uri\");\n  }\n}\nf.ub = function(a) {\n  this.D = a;\n  this.R && this.R.ub(a);\n  return this;\n};\nfunction tb(a) {\n  return a instanceof E ? a.n() : new E(a, void 0);\n}\nfunction ub(a, b, c, d) {\n  var e = new E(null, void 0);\n  a && fb(e, a);\n  b && gb(e, b);\n  c && hb(e, c);\n  d && ib(e, d);\n  return e;\n}\nfunction lb(a, b) {\n  return n(a) ? encodeURI(a).replace(b, vb) : null;\n}\nfunction vb(a) {\n  a = a.charCodeAt(0);\n  return \"%\" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);\n}\nvar mb = /[#\\/\\?@]/g, ob = /[\\#\\?:]/g, nb = /[\\#\\?]/g, qb = /[\\#\\?@]/g, pb = /#/g;\nfunction kb(a, b, c) {\n  this.C = a || null;\n  this.D = !!c;\n}\nfunction I(a) {\n  if (!a.h && (a.h = new cb, a.o = 0, a.C)) {\n    for (var b = a.C.split(\"&\"), c = 0;c < b.length;c++) {\n      var d = b[c].indexOf(\"=\"), e = null, g = null;\n      0 <= d ? (e = b[c].substring(0, d), g = b[c].substring(d + 1)) : e = b[c];\n      e = decodeURIComponent(e.replace(/\\+/g, \" \"));\n      e = J(a, e);\n      a.add(e, g ? decodeURIComponent(g.replace(/\\+/g, \" \")) : \"\");\n    }\n  }\n}\nf = kb.prototype;\nf.h = null;\nf.o = null;\nf.add = function(a, b) {\n  I(this);\n  this.C = null;\n  a = J(this, a);\n  var c = this.h.get(a);\n  c || this.h.set(a, c = []);\n  c.push(b);\n  this.o++;\n  return this;\n};\nf.remove = function(a) {\n  I(this);\n  a = J(this, a);\n  return this.h.wa(a) ? (this.C = null, this.o -= this.h.get(a).length, this.h.remove(a)) : !1;\n};\nf.wa = function(a) {\n  I(this);\n  a = J(this, a);\n  return this.h.wa(a);\n};\nf.ca = function() {\n  I(this);\n  for (var a = this.h.N(), b = this.h.ca(), c = [], d = 0;d < b.length;d++) {\n    for (var e = a[d], g = 0;g < e.length;g++) {\n      c.push(b[d]);\n    }\n  }\n  return c;\n};\nf.N = function(a) {\n  I(this);\n  var b = [];\n  if (n(a)) {\n    this.wa(a) && (b = ab(b, this.h.get(J(this, a))));\n  } else {\n    a = this.h.N();\n    for (var c = 0;c < a.length;c++) {\n      b = ab(b, a[c]);\n    }\n  }\n  return b;\n};\nf.set = function(a, b) {\n  I(this);\n  this.C = null;\n  a = J(this, a);\n  this.wa(a) && (this.o -= this.h.get(a).length);\n  this.h.set(a, [b]);\n  this.o++;\n  return this;\n};\nf.get = function(a, b) {\n  var c = a ? this.N(a) : [];\n  return 0 < c.length ? String(c[0]) : b;\n};\nfunction sb(a, b, c) {\n  a.remove(b);\n  0 < c.length && (a.C = null, a.h.set(J(a, b), bb(c)), a.o += c.length);\n}\nf.toString = function() {\n  if (this.C) {\n    return this.C;\n  }\n  if (!this.h) {\n    return \"\";\n  }\n  for (var a = [], b = this.h.ca(), c = 0;c < b.length;c++) {\n    for (var d = b[c], e = encodeURIComponent(String(d)), d = this.N(d), g = 0;g < d.length;g++) {\n      var h = e;\n      \"\" !== d[g] && (h += \"=\" + encodeURIComponent(String(d[g])));\n      a.push(h);\n    }\n  }\n  return this.C = a.join(\"&\");\n};\nf.n = function() {\n  var a = new kb;\n  a.C = this.C;\n  this.h && (a.h = this.h.n(), a.o = this.o);\n  return a;\n};\nfunction J(a, b) {\n  var c = String(b);\n  a.D && (c = c.toLowerCase());\n  return c;\n}\nf.ub = function(a) {\n  a && !this.D && (I(this), this.C = null, D(this.h, function(a, c) {\n    var d = c.toLowerCase();\n    c != d && (this.remove(c), sb(this, d, a));\n  }, this));\n  this.D = a;\n};\nfunction wb(a) {\n  a = String(a);\n  if (/^\\s*$/.test(a) ? 0 : /^[\\],:{}\\s\\u2028\\u2029]*$/.test(a.replace(/\\\\[\"\\\\\\/bfnrtu]/g, \"@\").replace(/\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, \"]\").replace(/(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g, \"\"))) {\n    try {\n      return eval(\"(\" + a + \")\");\n    } catch (b) {\n    }\n  }\n  throw Error(\"Invalid JSON string: \" + a);\n}\nfunction xb(a) {\n  return eval(\"(\" + a + \")\");\n}\nfunction yb(a) {\n  var b = [];\n  zb(new Ab, a, b);\n  return b.join(\"\");\n}\nfunction Ab() {\n  this.Ya = void 0;\n}\nfunction zb(a, b, c) {\n  switch(typeof b) {\n    case \"string\":\n      Bb(b, c);\n      break;\n    case \"number\":\n      c.push(isFinite(b) && !isNaN(b) ? b : \"null\");\n      break;\n    case \"boolean\":\n      c.push(b);\n      break;\n    case \"undefined\":\n      c.push(\"null\");\n      break;\n    case \"object\":\n      if (null == b) {\n        c.push(\"null\");\n        break;\n      }\n      if (m(b)) {\n        var d = b.length;\n        c.push(\"[\");\n        for (var e = \"\", g = 0;g < d;g++) {\n          c.push(e), e = b[g], zb(a, a.Ya ? a.Ya.call(b, String(g), e) : e, c), e = \",\";\n        }\n        c.push(\"]\");\n        break;\n      }\n      c.push(\"{\");\n      d = \"\";\n      for (g in b) {\n        Object.prototype.hasOwnProperty.call(b, g) && (e = b[g], \"function\" != typeof e && (c.push(d), Bb(g, c), c.push(\":\"), zb(a, a.Ya ? a.Ya.call(b, g, e) : e, c), d = \",\"));\n      }\n      c.push(\"}\");\n      break;\n    case \"function\":\n      break;\n    default:\n      throw Error(\"Unknown type: \" + typeof b);;\n  }\n}\nvar Cb = {'\"':'\\\\\"', \"\\\\\":\"\\\\\\\\\", \"/\":\"\\\\/\", \"\\b\":\"\\\\b\", \"\\f\":\"\\\\f\", \"\\n\":\"\\\\n\", \"\\r\":\"\\\\r\", \"\\t\":\"\\\\t\", \"\\x0B\":\"\\\\u000b\"}, Db = /\\uffff/.test(\"\\uffff\") ? /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g : /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\nfunction Bb(a, b) {\n  b.push('\"', a.replace(Db, function(a) {\n    if (a in Cb) {\n      return Cb[a];\n    }\n    var b = a.charCodeAt(0), e = \"\\\\u\";\n    16 > b ? e += \"000\" : 256 > b ? e += \"00\" : 4096 > b && (e += \"0\");\n    return Cb[a] = e + b.toString(16);\n  }), '\"');\n}\n;function Eb(a) {\n  return Fb(a || arguments.callee.caller, []);\n}\nfunction Fb(a, b) {\n  var c = [];\n  if (0 <= Xa(b, a)) {\n    c.push(\"[...circular reference...]\");\n  } else {\n    if (a && 50 > b.length) {\n      c.push(Gb(a) + \"(\");\n      for (var d = a.arguments, e = 0;e < d.length;e++) {\n        0 < e && c.push(\", \");\n        var g;\n        g = d[e];\n        switch(typeof g) {\n          case \"object\":\n            g = g ? \"object\" : \"null\";\n            break;\n          case \"string\":\n            break;\n          case \"number\":\n            g = String(g);\n            break;\n          case \"boolean\":\n            g = g ? \"true\" : \"false\";\n            break;\n          case \"function\":\n            g = (g = Gb(g)) ? g : \"[fn]\";\n            break;\n          default:\n            g = typeof g;\n        }\n        40 < g.length && (g = g.substr(0, 40) + \"...\");\n        c.push(g);\n      }\n      b.push(a);\n      c.push(\")\\n\");\n      try {\n        c.push(Fb(a.caller, b));\n      } catch (h) {\n        c.push(\"[exception trying to get caller]\\n\");\n      }\n    } else {\n      a ? c.push(\"[...long stack...]\") : c.push(\"[end]\");\n    }\n  }\n  return c.join(\"\");\n}\nfunction Gb(a) {\n  if (Hb[a]) {\n    return Hb[a];\n  }\n  a = String(a);\n  if (!Hb[a]) {\n    var b = /function ([^\\(]+)/.exec(a);\n    Hb[a] = b ? b[1] : \"[Anonymous]\";\n  }\n  return Hb[a];\n}\nvar Hb = {};\nfunction Ib(a, b, c, d, e) {\n  this.reset(a, b, c, d, e);\n}\nIb.prototype.Fb = null;\nIb.prototype.Eb = null;\nvar Jb = 0;\nIb.prototype.reset = function(a, b, c, d, e) {\n  \"number\" == typeof e || Jb++;\n  d || q();\n  this.Aa = a;\n  this.qc = b;\n  delete this.Fb;\n  delete this.Eb;\n};\nIb.prototype.$b = function(a) {\n  this.Aa = a;\n};\nfunction L(a) {\n  this.rc = a;\n}\nL.prototype.Sa = null;\nL.prototype.Aa = null;\nL.prototype.jb = null;\nL.prototype.Jb = null;\nfunction Kb(a, b) {\n  this.name = a;\n  this.value = b;\n}\nKb.prototype.toString = function() {\n  return this.name;\n};\nvar Lb = new Kb(\"SEVERE\", 1E3), Mb = new Kb(\"WARNING\", 900), Nb = new Kb(\"INFO\", 800), Ob = new Kb(\"CONFIG\", 700), Pb = new Kb(\"FINE\", 500);\nf = L.prototype;\nf.getParent = function() {\n  return this.Sa;\n};\nf.$b = function(a) {\n  this.Aa = a;\n};\nfunction Qb(a) {\n  if (a.Aa) {\n    return a.Aa;\n  }\n  if (a.Sa) {\n    return Qb(a.Sa);\n  }\n  Pa(\"Root logger has no level set.\");\n  return null;\n}\nf.log = function(a, b, c) {\n  if (a.value >= Qb(this).value) {\n    for (fa(b) && (b = b()), a = this.mc(a, b, c), b = \"log:\" + a.qc, l.console && (l.console.timeStamp ? l.console.timeStamp(b) : l.console.markTimeline && l.console.markTimeline(b)), l.msWriteProfilerMark && l.msWriteProfilerMark(b), b = this;b;) {\n      c = b;\n      var d = a;\n      if (c.Jb) {\n        for (var e = 0, g = void 0;g = c.Jb[e];e++) {\n          g(d);\n        }\n      }\n      b = b.getParent();\n    }\n  }\n};\nf.mc = function(a, b, c) {\n  var d = new Ib(a, String(b), this.rc);\n  if (c) {\n    d.Fb = c;\n    var e;\n    var g = arguments.callee.caller;\n    try {\n      var h;\n      var k = ba(\"window.location.href\");\n      if (n(c)) {\n        h = {message:c, name:\"Unknown error\", lineNumber:\"Not available\", fileName:k, stack:\"Not available\"};\n      } else {\n        var u, K, v = !1;\n        try {\n          u = c.lineNumber || c.Ic || \"Not available\";\n        } catch (r) {\n          u = \"Not available\", v = !0;\n        }\n        try {\n          K = c.fileName || c.filename || c.sourceURL || l.$googDebugFname || k;\n        } catch (Ka) {\n          K = \"Not available\", v = !0;\n        }\n        h = !v && c.lineNumber && c.fileName && c.stack && c.message && c.name ? c : {message:c.message || \"Not available\", name:c.name || \"UnknownError\", lineNumber:u, fileName:K, stack:c.stack || \"Not available\"};\n      }\n      e = \"Message: \" + la(h.message) + '\\nUrl: <a href=\"view-source:' + h.fileName + '\" target=\"_new\">' + h.fileName + \"</a>\\nLine: \" + h.lineNumber + \"\\n\\nBrowser stack:\\n\" + la(h.stack + \"-> \") + \"[end]\\n\\nJS stack traversal:\\n\" + la(Eb(g) + \"-> \");\n    } catch (w) {\n      e = \"Exception trying to expose exception! You win, we lose. \" + w;\n    }\n    d.Eb = e;\n  }\n  return d;\n};\nf.J = function(a, b) {\n  this.log(Lb, a, b);\n};\nf.Z = function(a, b) {\n  this.log(Mb, a, b);\n};\nf.info = function(a, b) {\n  this.log(Nb, a, b);\n};\nvar Rb = {}, Sb = null;\nfunction Tb(a) {\n  Sb || (Sb = new L(\"\"), Rb[\"\"] = Sb, Sb.$b(Ob));\n  var b;\n  if (!(b = Rb[a])) {\n    b = new L(a);\n    var c = a.lastIndexOf(\".\"), d = a.substr(c + 1), c = Tb(a.substr(0, c));\n    c.jb || (c.jb = {});\n    c.jb[d] = b;\n    b.Sa = c;\n    Rb[a] = b;\n  }\n  return b;\n}\n;function M(a, b) {\n  a && a.log(Pb, b, void 0);\n}\n;function N() {\n  this.r = Tb(\"goog.net.BrowserChannel\");\n}\nfunction Ub(a, b, c, d) {\n  a.info(\"XMLHTTP TEXT (\" + b + \"): \" + Vb(a, c) + (d ? \" \" + d : \"\"));\n}\nN.prototype.debug = function(a) {\n  this.info(a);\n};\nfunction Wb(a, b, c) {\n  a.J((c || \"Exception\") + b);\n}\nN.prototype.info = function(a) {\n  var b = this.r;\n  b && b.info(a, void 0);\n};\nN.prototype.Z = function(a) {\n  var b = this.r;\n  b && b.Z(a, void 0);\n};\nN.prototype.J = function(a) {\n  var b = this.r;\n  b && b.J(a, void 0);\n};\nfunction Vb(a, b) {\n  if (!b || b == Xb) {\n    return b;\n  }\n  try {\n    var c = xb(b);\n    if (c) {\n      for (var d = 0;d < c.length;d++) {\n        if (m(c[d])) {\n          var e = c[d];\n          if (!(2 > e.length)) {\n            var g = e[1];\n            if (m(g) && !(1 > g.length)) {\n              var h = g[0];\n              if (\"noop\" != h && \"stop\" != h) {\n                for (var k = 1;k < g.length;k++) {\n                  g[k] = \"\";\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return yb(c);\n  } catch (u) {\n    return a.debug(\"Exception parsing expected JS array - probably was not JS\"), b;\n  }\n}\n;function Yb(a, b) {\n  this.P = b ? xb : wb;\n}\nYb.prototype.parse = function(a) {\n  return this.P(a);\n};\nfunction O() {\n  0 != Zb && ($b[this[ga] || (this[ga] = ++ha)] = this);\n}\nvar Zb = 0, $b = {};\nO.prototype.mb = !1;\nO.prototype.Ja = function() {\n  if (!this.mb && (this.mb = !0, this.u(), 0 != Zb)) {\n    var a = this[ga] || (this[ga] = ++ha);\n    delete $b[a];\n  }\n};\nO.prototype.u = function() {\n  if (this.Pb) {\n    for (;this.Pb.length;) {\n      this.Pb.shift()();\n    }\n  }\n};\nvar ac = \"closure_listenable_\" + (1E6 * Math.random() | 0);\nfunction bc(a) {\n  try {\n    return!(!a || !a[ac]);\n  } catch (b) {\n    return!1;\n  }\n}\nvar cc = 0;\nfunction dc(a, b, c, d, e) {\n  this.fa = a;\n  this.Ua = null;\n  this.src = b;\n  this.type = c;\n  this.capture = !!d;\n  this.Oa = e;\n  this.key = ++cc;\n  this.na = this.Ia = !1;\n}\nfunction ec(a) {\n  a.na = !0;\n  a.fa = null;\n  a.Ua = null;\n  a.src = null;\n  a.Oa = null;\n}\n;function P(a) {\n  this.src = a;\n  this.s = {};\n  this.Ga = 0;\n}\nP.prototype.add = function(a, b, c, d, e) {\n  var g = this.s[a];\n  g || (g = this.s[a] = [], this.Ga++);\n  var h = fc(g, b, d, e);\n  -1 < h ? (a = g[h], c || (a.Ia = !1)) : (a = new dc(b, this.src, a, !!d, e), a.Ia = c, g.push(a));\n  return a;\n};\nP.prototype.remove = function(a, b, c, d) {\n  if (!(a in this.s)) {\n    return!1;\n  }\n  var e = this.s[a];\n  b = fc(e, b, c, d);\n  return-1 < b ? (ec(e[b]), B.splice.call(e, b, 1), 0 == e.length && (delete this.s[a], this.Ga--), !0) : !1;\n};\nfunction gc(a, b) {\n  var c = b.type;\n  if (!(c in a.s)) {\n    return!1;\n  }\n  var d = a.s[c], e = Xa(d, b), g;\n  (g = 0 <= e) && B.splice.call(d, e, 1);\n  g && (ec(b), 0 == a.s[c].length && (delete a.s[c], a.Ga--));\n  return g;\n}\nP.prototype.Xa = function(a) {\n  var b = 0, c;\n  for (c in this.s) {\n    if (!a || c == a) {\n      for (var d = this.s[c], e = 0;e < d.length;e++) {\n        ++b, ec(d[e]);\n      }\n      delete this.s[c];\n      this.Ga--;\n    }\n  }\n  return b;\n};\nP.prototype.ya = function(a, b, c, d) {\n  a = this.s[a];\n  var e = -1;\n  a && (e = fc(a, b, c, d));\n  return-1 < e ? a[e] : null;\n};\nfunction fc(a, b, c, d) {\n  for (var e = 0;e < a.length;++e) {\n    var g = a[e];\n    if (!g.na && g.fa == b && g.capture == !!c && g.Oa == d) {\n      return e;\n    }\n  }\n  return-1;\n}\n;var hc = !y || y && 9 <= Ma, ic = y && !A(\"9\");\n!z || A(\"528\");\nBa && A(\"1.9b\") || y && A(\"8\") || Aa && A(\"9.5\") || z && A(\"528\");\nBa && !A(\"8\") || y && A(\"9\");\nfunction Q(a, b) {\n  this.type = a;\n  this.currentTarget = this.target = b;\n}\nf = Q.prototype;\nf.u = function() {\n};\nf.Ja = function() {\n};\nf.ga = !1;\nf.defaultPrevented = !1;\nf.Yb = !0;\nf.preventDefault = function() {\n  this.defaultPrevented = !0;\n  this.Yb = !1;\n};\nfunction jc(a) {\n  jc[\" \"](a);\n  return a;\n}\njc[\" \"] = ca;\nfunction kc(a, b) {\n  Q.call(this, a ? a.type : \"\");\n  this.relatedTarget = this.currentTarget = this.target = null;\n  this.charCode = this.keyCode = this.button = this.screenY = this.screenX = this.clientY = this.clientX = this.offsetY = this.offsetX = 0;\n  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;\n  this.Db = this.state = null;\n  if (a) {\n    var c = this.type = a.type;\n    this.target = a.target || a.srcElement;\n    this.currentTarget = b;\n    var d = a.relatedTarget;\n    if (d) {\n      if (Ba) {\n        var e;\n        a: {\n          try {\n            jc(d.nodeName);\n            e = !0;\n            break a;\n          } catch (g) {\n          }\n          e = !1;\n        }\n        e || (d = null);\n      }\n    } else {\n      \"mouseover\" == c ? d = a.fromElement : \"mouseout\" == c && (d = a.toElement);\n    }\n    this.relatedTarget = d;\n    this.offsetX = z || void 0 !== a.offsetX ? a.offsetX : a.layerX;\n    this.offsetY = z || void 0 !== a.offsetY ? a.offsetY : a.layerY;\n    this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX;\n    this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY;\n    this.screenX = a.screenX || 0;\n    this.screenY = a.screenY || 0;\n    this.button = a.button;\n    this.keyCode = a.keyCode || 0;\n    this.charCode = a.charCode || (\"keypress\" == c ? a.keyCode : 0);\n    this.ctrlKey = a.ctrlKey;\n    this.altKey = a.altKey;\n    this.shiftKey = a.shiftKey;\n    this.metaKey = a.metaKey;\n    this.state = a.state;\n    this.Db = a;\n    a.defaultPrevented && this.preventDefault();\n    delete this.ga;\n  }\n}\ns(kc, Q);\nkc.prototype.preventDefault = function() {\n  kc.pa.preventDefault.call(this);\n  var a = this.Db;\n  if (a.preventDefault) {\n    a.preventDefault();\n  } else {\n    if (a.returnValue = !1, ic) {\n      try {\n        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) {\n          a.keyCode = -1;\n        }\n      } catch (b) {\n      }\n    }\n  }\n};\nkc.prototype.u = function() {\n};\nvar lc = \"closure_lm_\" + (1E6 * Math.random() | 0), mc = {}, nc = 0;\nfunction oc(a, b, c, d, e) {\n  if (m(b)) {\n    for (var g = 0;g < b.length;g++) {\n      oc(a, b[g], c, d, e);\n    }\n    return null;\n  }\n  c = pc(c);\n  if (bc(a)) {\n    a = a.Ra(b, c, d, e);\n  } else {\n    if (!b) {\n      throw Error(\"Invalid event type\");\n    }\n    var g = !!d, h = qc(a);\n    h || (a[lc] = h = new P(a));\n    c = h.add(b, c, !1, d, e);\n    c.Ua || (d = rc(), c.Ua = d, d.src = a, d.fa = c, a.addEventListener ? a.addEventListener(b, d, g) : a.attachEvent(b in mc ? mc[b] : mc[b] = \"on\" + b, d), nc++);\n    a = c;\n  }\n  return a;\n}\nfunction rc() {\n  var a = sc, b = hc ? function(c) {\n    return a.call(b.src, b.fa, c);\n  } : function(c) {\n    c = a.call(b.src, b.fa, c);\n    if (!c) {\n      return c;\n    }\n  };\n  return b;\n}\nfunction tc(a, b, c, d, e) {\n  if (m(b)) {\n    for (var g = 0;g < b.length;g++) {\n      tc(a, b[g], c, d, e);\n    }\n  } else {\n    c = pc(c), bc(a) ? a.vb(b, c, d, e) : a && (a = qc(a)) && (b = a.ya(b, c, !!d, e)) && uc(b);\n  }\n}\nfunction uc(a) {\n  if (\"number\" == typeof a || !a || a.na) {\n    return!1;\n  }\n  var b = a.src;\n  if (bc(b)) {\n    return gc(b.W, a);\n  }\n  var c = a.type, d = a.Ua;\n  b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent && b.detachEvent(c in mc ? mc[c] : mc[c] = \"on\" + c, d);\n  nc--;\n  (c = qc(b)) ? (gc(c, a), 0 == c.Ga && (c.src = null, b[lc] = null)) : ec(a);\n  return!0;\n}\nfunction vc(a, b, c, d) {\n  var e = 1;\n  if (a = qc(a)) {\n    if (b = a.s[b]) {\n      for (b = bb(b), a = 0;a < b.length;a++) {\n        var g = b[a];\n        g && g.capture == c && !g.na && (e &= !1 !== wc(g, d));\n      }\n    }\n  }\n  return Boolean(e);\n}\nfunction wc(a, b) {\n  var c = a.fa, d = a.Oa || a.src;\n  a.Ia && uc(a);\n  return c.call(d, b);\n}\nfunction sc(a, b) {\n  if (a.na) {\n    return!0;\n  }\n  if (!hc) {\n    var c = b || ba(\"window.event\"), d = new kc(c, this), e = !0;\n    if (!(0 > c.keyCode || void 0 != c.returnValue)) {\n      a: {\n        var g = !1;\n        if (0 == c.keyCode) {\n          try {\n            c.keyCode = -1;\n            break a;\n          } catch (h) {\n            g = !0;\n          }\n        }\n        if (g || void 0 == c.returnValue) {\n          c.returnValue = !0;\n        }\n      }\n      c = [];\n      for (g = d.currentTarget;g;g = g.parentNode) {\n        c.push(g);\n      }\n      for (var g = a.type, k = c.length - 1;!d.ga && 0 <= k;k--) {\n        d.currentTarget = c[k], e &= vc(c[k], g, !0, d);\n      }\n      for (k = 0;!d.ga && k < c.length;k++) {\n        d.currentTarget = c[k], e &= vc(c[k], g, !1, d);\n      }\n    }\n    return e;\n  }\n  return wc(a, new kc(b, this));\n}\nfunction qc(a) {\n  a = a[lc];\n  return a instanceof P ? a : null;\n}\nvar xc = \"__closure_events_fn_\" + (1E9 * Math.random() >>> 0);\nfunction pc(a) {\n  return fa(a) ? a : a[xc] || (a[xc] = function(b) {\n    return a.handleEvent(b);\n  });\n}\n;function R() {\n  O.call(this);\n  this.W = new P(this);\n  this.fc = this;\n}\ns(R, O);\nR.prototype[ac] = !0;\nf = R.prototype;\nf.tb = null;\nf.addEventListener = function(a, b, c, d) {\n  oc(this, a, b, c, d);\n};\nf.removeEventListener = function(a, b, c, d) {\n  tc(this, a, b, c, d);\n};\nf.dispatchEvent = function(a) {\n  var b, c = this.tb;\n  if (c) {\n    for (b = [];c;c = c.tb) {\n      b.push(c);\n    }\n  }\n  var c = this.fc, d = a.type || a;\n  if (n(a)) {\n    a = new Q(a, c);\n  } else {\n    if (a instanceof Q) {\n      a.target = a.target || c;\n    } else {\n      var e = a;\n      a = new Q(d, c);\n      Wa(a, e);\n    }\n  }\n  var e = !0, g;\n  if (b) {\n    for (var h = b.length - 1;!a.ga && 0 <= h;h--) {\n      g = a.currentTarget = b[h], e = yc(g, d, !0, a) && e;\n    }\n  }\n  a.ga || (g = a.currentTarget = c, e = yc(g, d, !0, a) && e, a.ga || (e = yc(g, d, !1, a) && e));\n  if (b) {\n    for (h = 0;!a.ga && h < b.length;h++) {\n      g = a.currentTarget = b[h], e = yc(g, d, !1, a) && e;\n    }\n  }\n  return e;\n};\nf.u = function() {\n  R.pa.u.call(this);\n  this.W && this.W.Xa(void 0);\n  this.tb = null;\n};\nf.Ra = function(a, b, c, d) {\n  return this.W.add(String(a), b, !1, c, d);\n};\nf.vb = function(a, b, c, d) {\n  return this.W.remove(String(a), b, c, d);\n};\nfunction yc(a, b, c, d) {\n  b = a.W.s[String(b)];\n  if (!b) {\n    return!0;\n  }\n  b = bb(b);\n  for (var e = !0, g = 0;g < b.length;++g) {\n    var h = b[g];\n    if (h && !h.na && h.capture == c) {\n      var k = h.fa, u = h.Oa || h.src;\n      h.Ia && gc(a.W, h);\n      e = !1 !== k.call(u, d) && e;\n    }\n  }\n  return e && !1 != d.Yb;\n}\nf.ya = function(a, b, c, d) {\n  return this.W.ya(String(a), b, c, d);\n};\nfunction zc(a, b) {\n  R.call(this);\n  this.ea = a || 1;\n  this.ra = b || l;\n  this.ib = p(this.Gc, this);\n  this.sb = q();\n}\ns(zc, R);\nf = zc.prototype;\nf.enabled = !1;\nf.l = null;\nf.setInterval = function(a) {\n  this.ea = a;\n  this.l && this.enabled ? (this.stop(), this.start()) : this.l && this.stop();\n};\nf.Gc = function() {\n  if (this.enabled) {\n    var a = q() - this.sb;\n    0 < a && a < 0.8 * this.ea ? this.l = this.ra.setTimeout(this.ib, this.ea - a) : (this.l && (this.ra.clearTimeout(this.l), this.l = null), this.dispatchEvent(Ac), this.enabled && (this.l = this.ra.setTimeout(this.ib, this.ea), this.sb = q()));\n  }\n};\nf.start = function() {\n  this.enabled = !0;\n  this.l || (this.l = this.ra.setTimeout(this.ib, this.ea), this.sb = q());\n};\nf.stop = function() {\n  this.enabled = !1;\n  this.l && (this.ra.clearTimeout(this.l), this.l = null);\n};\nf.u = function() {\n  zc.pa.u.call(this);\n  this.stop();\n  delete this.ra;\n};\nvar Ac = \"tick\";\nfunction Bc(a, b, c) {\n  if (fa(a)) {\n    c && (a = p(a, c));\n  } else {\n    if (a && \"function\" == typeof a.handleEvent) {\n      a = p(a.handleEvent, a);\n    } else {\n      throw Error(\"Invalid listener argument\");\n    }\n  }\n  return 2147483647 < b ? -1 : l.setTimeout(a, b || 0);\n}\n;function Cc() {\n}\nCc.prototype.Ab = null;\nfunction Dc(a) {\n  var b;\n  (b = a.Ab) || (b = {}, Ec(a) && (b[0] = !0, b[1] = !0), b = a.Ab = b);\n  return b;\n}\n;var Fc;\nfunction Gc() {\n}\ns(Gc, Cc);\nfunction Hc(a) {\n  return(a = Ec(a)) ? new ActiveXObject(a) : new XMLHttpRequest;\n}\nfunction Ec(a) {\n  if (!a.Kb && \"undefined\" == typeof XMLHttpRequest && \"undefined\" != typeof ActiveXObject) {\n    for (var b = [\"MSXML2.XMLHTTP.6.0\", \"MSXML2.XMLHTTP.3.0\", \"MSXML2.XMLHTTP\", \"Microsoft.XMLHTTP\"], c = 0;c < b.length;c++) {\n      var d = b[c];\n      try {\n        return new ActiveXObject(d), a.Kb = d;\n      } catch (e) {\n      }\n    }\n    throw Error(\"Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed\");\n  }\n  return a.Kb;\n}\nFc = new Gc;\nfunction Ic(a) {\n  R.call(this);\n  this.headers = new cb;\n  this.gb = a || null;\n  this.T = !1;\n  this.fb = this.f = null;\n  this.Mb = this.Qa = \"\";\n  this.ka = 0;\n  this.q = \"\";\n  this.da = this.qb = this.Pa = this.nb = !1;\n  this.Fa = 0;\n  this.bb = null;\n  this.Xb = Jc;\n  this.cb = this.dc = !1;\n}\ns(Ic, R);\nvar Jc = \"\";\nIc.prototype.r = Tb(\"goog.net.XhrIo\");\nvar Kc = /^https?$/i, Lc = [\"POST\", \"PUT\"];\nf = Ic.prototype;\nf.send = function(a, b, c, d) {\n  if (this.f) {\n    throw Error(\"[goog.net.XhrIo] Object is active with another request=\" + this.Qa + \"; newUri=\" + a);\n  }\n  b = b ? b.toUpperCase() : \"GET\";\n  this.Qa = a;\n  this.q = \"\";\n  this.ka = 0;\n  this.Mb = b;\n  this.nb = !1;\n  this.T = !0;\n  this.f = this.gb ? Hc(this.gb) : Hc(Fc);\n  this.fb = this.gb ? Dc(this.gb) : Dc(Fc);\n  this.f.onreadystatechange = p(this.Qb, this);\n  try {\n    M(this.r, S(this, \"Opening Xhr\")), this.qb = !0, this.f.open(b, a, !0), this.qb = !1;\n  } catch (e) {\n    M(this.r, S(this, \"Error opening Xhr: \" + e.message));\n    Mc(this, e);\n    return;\n  }\n  a = c || \"\";\n  var g = this.headers.n();\n  d && D(d, function(a, b) {\n    g.set(b, a);\n  });\n  d = Za(g.ca());\n  c = l.FormData && a instanceof l.FormData;\n  !(0 <= Xa(Lc, b)) || d || c || g.set(\"Content-Type\", \"application/x-www-form-urlencoded;charset=utf-8\");\n  D(g, function(a, b) {\n    this.f.setRequestHeader(b, a);\n  }, this);\n  this.Xb && (this.f.responseType = this.Xb);\n  \"withCredentials\" in this.f && (this.f.withCredentials = this.dc);\n  try {\n    Nc(this), 0 < this.Fa && (this.cb = Oc(this.f), M(this.r, S(this, \"Will abort after \" + this.Fa + \"ms if incomplete, xhr2 \" + this.cb)), this.cb ? (this.f.timeout = this.Fa, this.f.ontimeout = p(this.qa, this)) : this.bb = Bc(this.qa, this.Fa, this)), M(this.r, S(this, \"Sending request\")), this.Pa = !0, this.f.send(a), this.Pa = !1;\n  } catch (h) {\n    M(this.r, S(this, \"Send error: \" + h.message)), Mc(this, h);\n  }\n};\nfunction Oc(a) {\n  return y && A(9) && \"number\" == typeof a.timeout && void 0 !== a.ontimeout;\n}\nfunction $a(a) {\n  return \"content-type\" == a.toLowerCase();\n}\nf.qa = function() {\n  \"undefined\" != typeof aa && this.f && (this.q = \"Timed out after \" + this.Fa + \"ms, aborting\", this.ka = 8, M(this.r, S(this, this.q)), this.dispatchEvent(\"timeout\"), this.abort(8));\n};\nfunction Mc(a, b) {\n  a.T = !1;\n  a.f && (a.da = !0, a.f.abort(), a.da = !1);\n  a.q = b;\n  a.ka = 5;\n  Pc(a);\n  Qc(a);\n}\nfunction Pc(a) {\n  a.nb || (a.nb = !0, a.dispatchEvent(\"complete\"), a.dispatchEvent(\"error\"));\n}\nf.abort = function(a) {\n  this.f && this.T && (M(this.r, S(this, \"Aborting\")), this.T = !1, this.da = !0, this.f.abort(), this.da = !1, this.ka = a || 7, this.dispatchEvent(\"complete\"), this.dispatchEvent(\"abort\"), Qc(this));\n};\nf.u = function() {\n  this.f && (this.T && (this.T = !1, this.da = !0, this.f.abort(), this.da = !1), Qc(this, !0));\n  Ic.pa.u.call(this);\n};\nf.Qb = function() {\n  this.mb || (this.qb || this.Pa || this.da ? Rc(this) : this.uc());\n};\nf.uc = function() {\n  Rc(this);\n};\nfunction Rc(a) {\n  if (a.T && \"undefined\" != typeof aa) {\n    if (a.fb[1] && 4 == T(a) && 2 == Sc(a)) {\n      M(a.r, S(a, \"Local request error detected and ignored\"));\n    } else {\n      if (a.Pa && 4 == T(a)) {\n        Bc(a.Qb, 0, a);\n      } else {\n        if (a.dispatchEvent(\"readystatechange\"), 4 == T(a)) {\n          M(a.r, S(a, \"Request complete\"));\n          a.T = !1;\n          try {\n            var b = Sc(a), c, d;\n            a: {\n              switch(b) {\n                case 200:\n                ;\n                case 201:\n                ;\n                case 202:\n                ;\n                case 204:\n                ;\n                case 206:\n                ;\n                case 304:\n                ;\n                case 1223:\n                  d = !0;\n                  break a;\n                default:\n                  d = !1;\n              }\n            }\n            if (!(c = d)) {\n              var e;\n              if (e = 0 === b) {\n                var g = Ra(String(a.Qa))[1] || null;\n                if (!g && self.location) {\n                  var h = self.location.protocol, g = h.substr(0, h.length - 1)\n                }\n                e = !Kc.test(g ? g.toLowerCase() : \"\");\n              }\n              c = e;\n            }\n            if (c) {\n              a.dispatchEvent(\"complete\"), a.dispatchEvent(\"success\");\n            } else {\n              a.ka = 6;\n              var k;\n              try {\n                k = 2 < T(a) ? a.f.statusText : \"\";\n              } catch (u) {\n                M(a.r, \"Can not get status: \" + u.message), k = \"\";\n              }\n              a.q = k + \" [\" + Sc(a) + \"]\";\n              Pc(a);\n            }\n          } finally {\n            Qc(a);\n          }\n        }\n      }\n    }\n  }\n}\nfunction Qc(a, b) {\n  if (a.f) {\n    Nc(a);\n    var c = a.f, d = a.fb[0] ? ca : null;\n    a.f = null;\n    a.fb = null;\n    b || a.dispatchEvent(\"ready\");\n    try {\n      c.onreadystatechange = d;\n    } catch (e) {\n      (c = a.r) && c.J(\"Problem encountered resetting onreadystatechange: \" + e.message, void 0);\n    }\n  }\n}\nfunction Nc(a) {\n  a.f && a.cb && (a.f.ontimeout = null);\n  \"number\" == typeof a.bb && (l.clearTimeout(a.bb), a.bb = null);\n}\nf.isActive = function() {\n  return!!this.f;\n};\nfunction T(a) {\n  return a.f ? a.f.readyState : 0;\n}\nfunction Sc(a) {\n  try {\n    return 2 < T(a) ? a.f.status : -1;\n  } catch (b) {\n    return(a = a.r) && a.Z(\"Can not get status: \" + b.message, void 0), -1;\n  }\n}\nfunction Tc(a) {\n  try {\n    return a.f ? a.f.responseText : \"\";\n  } catch (b) {\n    return M(a.r, \"Can not get responseText: \" + b.message), \"\";\n  }\n}\nf.Ib = function() {\n  return n(this.q) ? this.q : String(this.q);\n};\nfunction S(a, b) {\n  return b + \" [\" + a.Mb + \" \" + a.Qa + \" \" + Sc(a) + \"]\";\n}\n;function Uc() {\n  this.Wb = q();\n}\nnew Uc;\nUc.prototype.set = function(a) {\n  this.Wb = a;\n};\nUc.prototype.reset = function() {\n  this.set(q());\n};\nUc.prototype.get = function() {\n  return this.Wb;\n};\nfunction Vc(a) {\n  O.call(this);\n  this.e = a;\n  this.j = {};\n}\ns(Vc, O);\nvar Wc = [];\nf = Vc.prototype;\nf.Ra = function(a, b, c, d) {\n  m(b) || (Wc[0] = b, b = Wc);\n  for (var e = 0;e < b.length;e++) {\n    var g = oc(a, b[e], c || this.handleEvent, d || !1, this.e || this);\n    if (!g) {\n      break;\n    }\n    this.j[g.key] = g;\n  }\n  return this;\n};\nf.vb = function(a, b, c, d, e) {\n  if (m(b)) {\n    for (var g = 0;g < b.length;g++) {\n      this.vb(a, b[g], c, d, e);\n    }\n  } else {\n    c = c || this.handleEvent, e = e || this.e || this, c = pc(c), d = !!d, b = bc(a) ? a.ya(b, c, d, e) : a ? (a = qc(a)) ? a.ya(b, c, d, e) : null : null, b && (uc(b), delete this.j[b.key]);\n  }\n  return this;\n};\nf.Xa = function() {\n  var a = this.j, b = uc, c;\n  for (c in a) {\n    b.call(void 0, a[c], c, a);\n  }\n  this.j = {};\n};\nf.u = function() {\n  Vc.pa.u.call(this);\n  this.Xa();\n};\nf.handleEvent = function() {\n  throw Error(\"EventHandler.handleEvent not implemented\");\n};\nfunction Xc(a, b, c) {\n  O.call(this);\n  this.pc = a;\n  this.ea = b;\n  this.e = c;\n  this.jc = p(this.vc, this);\n}\ns(Xc, O);\nf = Xc.prototype;\nf.Za = !1;\nf.Vb = 0;\nf.l = null;\nf.stop = function() {\n  this.l && (l.clearTimeout(this.l), this.l = null, this.Za = !1);\n};\nf.u = function() {\n  Xc.pa.u.call(this);\n  this.stop();\n};\nf.vc = function() {\n  this.l = null;\n  this.Za && !this.Vb && (this.Za = !1, Yc(this));\n};\nfunction Yc(a) {\n  a.l = Bc(a.jc, a.ea);\n  a.pc.call(a.e);\n}\n;function U(a, b, c, d, e) {\n  this.b = a;\n  this.a = b;\n  this.Y = c;\n  this.B = d;\n  this.Ea = e || 1;\n  this.qa = Zc;\n  this.ob = new Vc(this);\n  this.Ta = new zc;\n  this.Ta.setInterval($c);\n}\nf = U.prototype;\nf.v = null;\nf.F = !1;\nf.ua = null;\nf.xb = null;\nf.Da = null;\nf.sa = null;\nf.U = null;\nf.w = null;\nf.X = null;\nf.k = null;\nf.Ha = 0;\nf.K = null;\nf.ta = null;\nf.q = null;\nf.g = -1;\nf.Zb = !0;\nf.$ = !1;\nf.ma = 0;\nf.Va = null;\nvar Zc = 45E3, $c = 250;\nfunction ad(a, b) {\n  switch(a) {\n    case 0:\n      return \"Non-200 return code (\" + b + \")\";\n    case 1:\n      return \"XMLHTTP failure (no data)\";\n    case 2:\n      return \"HttpConnection timeout\";\n    default:\n      return \"Unknown error\";\n  }\n}\nvar bd = {}, dd = {};\nfunction ed() {\n  return!y || y && 10 <= Ma;\n}\nf = U.prototype;\nf.S = function(a) {\n  this.v = a;\n};\nf.setTimeout = function(a) {\n  this.qa = a;\n};\nf.bc = function(a) {\n  this.ma = a;\n};\nfunction fd(a, b, c) {\n  a.sa = 1;\n  a.U = H(b.n());\n  a.X = c;\n  a.Cb = !0;\n  gd(a, null);\n}\nfunction hd(a, b, c, d, e) {\n  a.sa = 1;\n  a.U = H(b.n());\n  a.X = null;\n  a.Cb = c;\n  e && (a.Zb = !1);\n  gd(a, d);\n}\nfunction gd(a, b) {\n  a.Da = q();\n  id(a);\n  a.w = a.U.n();\n  rb(a.w, \"t\", a.Ea);\n  a.Ha = 0;\n  a.k = a.b.lb(a.b.$a() ? b : null);\n  0 < a.ma && (a.Va = new Xc(p(a.ec, a, a.k), a.ma));\n  a.ob.Ra(a.k, \"readystatechange\", a.Bc);\n  var c;\n  if (a.v) {\n    c = a.v;\n    var d = {}, e;\n    for (e in c) {\n      d[e] = c[e];\n    }\n    c = d;\n  } else {\n    c = {};\n  }\n  a.X ? (a.ta = \"POST\", c[\"Content-Type\"] = \"application/x-www-form-urlencoded\", a.k.send(a.w, a.ta, a.X, c)) : (a.ta = \"GET\", a.Zb && !z && (c.Connection = \"close\"), a.k.send(a.w, a.ta, null, c));\n  a.b.H(jd);\n  if (d = a.X) {\n    for (c = \"\", d = d.split(\"&\"), e = 0;e < d.length;e++) {\n      var g = d[e].split(\"=\");\n      if (1 < g.length) {\n        var h = g[0], g = g[1], k = h.split(\"_\");\n        c = 2 <= k.length && \"type\" == k[1] ? c + (h + \"=\" + g + \"&\") : c + (h + \"=redacted&\");\n      }\n    }\n  } else {\n    c = null;\n  }\n  a.a.info(\"XMLHTTP REQ (\" + a.B + \") [attempt \" + a.Ea + \"]: \" + a.ta + \"\\n\" + a.w + \"\\n\" + c);\n}\nf.Bc = function(a) {\n  a = a.target;\n  var b = this.Va;\n  b && 3 == T(a) ? (this.a.debug(\"Throttling readystatechange.\"), b.l || b.Vb ? b.Za = !0 : Yc(b)) : this.ec(a);\n};\nf.ec = function(a) {\n  try {\n    if (a == this.k) {\n      a: {\n        var b = T(this.k), c = this.k.ka, d = Sc(this.k);\n        if (!ed() || z && !A(\"420+\")) {\n          if (4 > b) {\n            break a;\n          }\n        } else {\n          if (3 > b || 3 == b && !Aa && !Tc(this.k)) {\n            break a;\n          }\n        }\n        this.$ || 4 != b || 7 == c || (8 == c || 0 >= d ? this.b.H(kd) : this.b.H(ld));\n        md(this);\n        var e = Sc(this.k);\n        this.g = e;\n        var g = Tc(this.k);\n        g || this.a.debug(\"No response text for uri \" + this.w + \" status \" + e);\n        this.F = 200 == e;\n        this.a.info(\"XMLHTTP RESP (\" + this.B + \") [ attempt \" + this.Ea + \"]: \" + this.ta + \"\\n\" + this.w + \"\\n\" + b + \" \" + e);\n        this.F ? (4 == b && V(this), this.Cb ? (nd(this, b, g), Aa && this.F && 3 == b && (this.ob.Ra(this.Ta, Ac, this.Ac), this.Ta.start())) : (Ub(this.a, this.B, g, null), od(this, g)), this.F && !this.$ && (4 == b ? this.b.la(this) : (this.F = !1, id(this)))) : (400 == e && 0 < g.indexOf(\"Unknown SID\") ? (this.q = 3, W(), this.a.Z(\"XMLHTTP Unknown SID (\" + this.B + \")\")) : (this.q = 0, W(), this.a.Z(\"XMLHTTP Bad status \" + e + \" (\" + this.B + \")\")), V(this), pd(this));\n      }\n    } else {\n      this.a.Z(\"Called back with an unexpected xmlhttp\");\n    }\n  } catch (h) {\n    this.a.debug(\"Failed call to OnXmlHttpReadyStateChanged_\"), this.k && Tc(this.k) ? Wb(this.a, h, \"ResponseText: \" + Tc(this.k)) : Wb(this.a, h, \"No response text\");\n  } finally {\n  }\n};\nfunction nd(a, b, c) {\n  for (var d = !0;!a.$ && a.Ha < c.length;) {\n    var e = qd(a, c);\n    if (e == dd) {\n      4 == b && (a.q = 4, W(), d = !1);\n      Ub(a.a, a.B, null, \"[Incomplete Response]\");\n      break;\n    } else {\n      if (e == bd) {\n        a.q = 4;\n        W();\n        Ub(a.a, a.B, c, \"[Invalid Chunk]\");\n        d = !1;\n        break;\n      } else {\n        Ub(a.a, a.B, e, null), od(a, e);\n      }\n    }\n  }\n  4 == b && 0 == c.length && (a.q = 1, W(), d = !1);\n  a.F = a.F && d;\n  d || (Ub(a.a, a.B, c, \"[Invalid Chunked Response]\"), V(a), pd(a));\n}\nf.Ac = function() {\n  var a = T(this.k), b = Tc(this.k);\n  this.Ha < b.length && (md(this), nd(this, a, b), this.F && 4 != a && id(this));\n};\nfunction qd(a, b) {\n  var c = a.Ha, d = b.indexOf(\"\\n\", c);\n  if (-1 == d) {\n    return dd;\n  }\n  c = Number(b.substring(c, d));\n  if (isNaN(c)) {\n    return bd;\n  }\n  d += 1;\n  if (d + c > b.length) {\n    return dd;\n  }\n  var e = b.substr(d, c);\n  a.Ha = d + c;\n  return e;\n}\nfunction rd(a, b) {\n  a.Da = q();\n  id(a);\n  var c = b ? window.location.hostname : \"\";\n  a.w = a.U.n();\n  G(a.w, \"DOMAIN\", c);\n  G(a.w, \"t\", a.Ea);\n  try {\n    a.K = new ActiveXObject(\"htmlfile\");\n  } catch (d) {\n    a.a.J(\"ActiveX blocked\");\n    V(a);\n    a.q = 7;\n    W();\n    pd(a);\n    return;\n  }\n  var e = \"<html><body>\";\n  b && (e += '<script>document.domain=\"' + c + '\"\\x3c/script>');\n  e += \"</body></html>\";\n  a.K.open();\n  a.K.write(e);\n  a.K.close();\n  a.K.parentWindow.m = p(a.yc, a);\n  a.K.parentWindow.d = p(a.Ub, a, !0);\n  a.K.parentWindow.rpcClose = p(a.Ub, a, !1);\n  c = a.K.createElement(\"div\");\n  a.K.parentWindow.document.body.appendChild(c);\n  c.innerHTML = '<iframe src=\"' + a.w + '\"></iframe>';\n  a.a.info(\"TRIDENT REQ (\" + a.B + \") [ attempt \" + a.Ea + \"]: GET\\n\" + a.w);\n  a.b.H(jd);\n}\nf.yc = function(a) {\n  Y(p(this.xc, this, a), 0);\n};\nf.xc = function(a) {\n  if (!this.$) {\n    var b = this.a;\n    b.info(\"TRIDENT TEXT (\" + this.B + \"): \" + Vb(b, a));\n    md(this);\n    od(this, a);\n    id(this);\n  }\n};\nf.Ub = function(a) {\n  Y(p(this.wc, this, a), 0);\n};\nf.wc = function(a) {\n  this.$ || (this.a.info(\"TRIDENT TEXT (\" + this.B + \"): \" + a ? \"success\" : \"failure\"), V(this), this.F = a, this.b.la(this), this.b.H(sd));\n};\nf.nc = function() {\n  md(this);\n  this.b.la(this);\n};\nf.cancel = function() {\n  this.$ = !0;\n  V(this);\n};\nfunction id(a) {\n  a.xb = q() + a.qa;\n  td(a, a.qa);\n}\nfunction td(a, b) {\n  if (null != a.ua) {\n    throw Error(\"WatchDog timer not null\");\n  }\n  a.ua = Y(p(a.zc, a), b);\n}\nfunction md(a) {\n  a.ua && (l.clearTimeout(a.ua), a.ua = null);\n}\nf.zc = function() {\n  this.ua = null;\n  var a = q();\n  0 <= a - this.xb ? (this.F && this.a.J(\"Received watchdog timeout even though request loaded successfully\"), this.a.info(\"TIMEOUT: \" + this.w), 2 != this.sa && this.b.H(kd), V(this), this.q = 2, W(), pd(this)) : (this.a.Z(\"WatchDog timer called too early\"), td(this, this.xb - a));\n};\nfunction pd(a) {\n  a.b.Lb() || a.$ || a.b.la(a);\n}\nfunction V(a) {\n  md(a);\n  var b = a.Va;\n  b && \"function\" == typeof b.Ja && b.Ja();\n  a.Va = null;\n  a.Ta.stop();\n  a.ob.Xa();\n  a.k && (b = a.k, a.k = null, b.abort(), b.Ja());\n  a.K && (a.K = null);\n}\nf.Ib = function() {\n  return this.q;\n};\nfunction od(a, b) {\n  try {\n    a.b.Rb(a, b), a.b.H(sd);\n  } catch (c) {\n    Wb(a.a, c, \"Error in httprequest callback\");\n  }\n}\n;function ud(a, b, c, d, e) {\n  (new N).debug(\"TestLoadImageWithRetries: \" + e);\n  if (0 == d) {\n    c(!1);\n  } else {\n    var g = e || 0;\n    d--;\n    vd(a, b, function(e) {\n      e ? c(!0) : l.setTimeout(function() {\n        ud(a, b, c, d, g);\n      }, g);\n    });\n  }\n}\nfunction vd(a, b, c) {\n  function d(a, b) {\n    return function() {\n      try {\n        e.debug(\"TestLoadImage: \" + b), g.onload = null, g.onerror = null, g.onabort = null, g.ontimeout = null, l.clearTimeout(h), c(a);\n      } catch (d) {\n        Wb(e, d);\n      }\n    };\n  }\n  var e = new N;\n  e.debug(\"TestLoadImage: loading \" + a);\n  var g = new Image, h = null;\n  g.onload = d(!0, \"loaded\");\n  g.onerror = d(!1, \"error\");\n  g.onabort = d(!1, \"abort\");\n  g.ontimeout = d(!1, \"timeout\");\n  h = l.setTimeout(function() {\n    if (g.ontimeout) {\n      g.ontimeout();\n    }\n  }, b);\n  g.src = a;\n}\n;function wd(a, b) {\n  this.b = a;\n  this.a = b;\n  this.P = new Yb(0, !0);\n}\nf = wd.prototype;\nf.v = null;\nf.A = null;\nf.Wa = !1;\nf.cc = null;\nf.La = null;\nf.rb = null;\nf.I = null;\nf.c = null;\nf.g = -1;\nf.L = null;\nf.va = null;\nf.S = function(a) {\n  this.v = a;\n};\nf.ac = function(a) {\n  this.P = a;\n};\nf.kb = function(a) {\n  this.I = a;\n  a = xd(this.b, this.I);\n  W();\n  this.cc = q();\n  var b = this.b.Gb;\n  null != b ? (this.L = this.b.correctHostPrefix(b[0]), (this.va = b[1]) ? (this.c = 1, yd(this)) : (this.c = 2, zd(this))) : (rb(a, \"MODE\", \"init\"), this.A = new U(this, this.a, void 0, void 0, void 0), this.A.S(this.v), hd(this.A, a, !1, null, !0), this.c = 0);\n};\nfunction yd(a) {\n  var b = Ad(a.b, a.va, \"/mail/images/cleardot.gif\");\n  H(b);\n  ud(b.toString(), 5E3, p(a.kc, a), 3, 2E3);\n  a.H(jd);\n}\nf.kc = function(a) {\n  if (a) {\n    this.c = 2, zd(this);\n  } else {\n    W();\n    var b = this.b;\n    b.a.debug(\"Test Connection Blocked\");\n    b.g = b.V.g;\n    Z(b, 9);\n  }\n  a && this.H(ld);\n};\nfunction zd(a) {\n  a.a.debug(\"TestConnection: starting stage 2\");\n  var b = a.b.Dc;\n  if (null != b) {\n    a.a.debug(\"TestConnection: skipping stage 2, precomputed result is \" + b ? \"Buffered\" : \"Unbuffered\"), W(), b ? (W(), Bd(a.b, a, !1)) : (W(), Bd(a.b, a, !0));\n  } else {\n    if (a.A = new U(a, a.a, void 0, void 0, void 0), a.A.S(a.v), b = Cd(a.b, a.L, a.I), W(), ed()) {\n      rb(b, \"TYPE\", \"xmlhttp\"), hd(a.A, b, !1, a.L, !1);\n    } else {\n      rb(b, \"TYPE\", \"html\");\n      var c = a.A;\n      a = Boolean(a.L);\n      c.sa = 3;\n      c.U = H(b.n());\n      rd(c, a);\n    }\n  }\n}\nf.lb = function(a) {\n  return this.b.lb(a);\n};\nf.abort = function() {\n  this.A && (this.A.cancel(), this.A = null);\n  this.g = -1;\n};\nf.Lb = function() {\n  return!1;\n};\nf.Rb = function(a, b) {\n  this.g = a.g;\n  if (0 == this.c) {\n    if (this.a.debug(\"TestConnection: Got data for stage 1\"), b) {\n      try {\n        var c = this.P.parse(b);\n      } catch (d) {\n        Wb(this.a, d);\n        Dd(this.b, this);\n        return;\n      }\n      this.L = this.b.correctHostPrefix(c[0]);\n      this.va = c[1];\n    } else {\n      this.a.debug(\"TestConnection: Null responseText\"), Dd(this.b, this);\n    }\n  } else {\n    if (2 == this.c) {\n      if (this.Wa) {\n        W(), this.rb = q();\n      } else {\n        if (\"11111\" == b) {\n          if (W(), this.Wa = !0, this.La = q(), c = this.La - this.cc, ed() || 500 > c) {\n            this.g = 200, this.A.cancel(), this.a.debug(\"Test connection succeeded; using streaming connection\"), W(), Bd(this.b, this, !0);\n          }\n        } else {\n          W(), this.La = this.rb = q(), this.Wa = !1;\n        }\n      }\n    }\n  }\n};\nf.la = function() {\n  this.g = this.A.g;\n  if (!this.A.F) {\n    this.a.debug(\"TestConnection: request failed, in state \" + this.c), 0 == this.c ? W() : 2 == this.c && W(), Dd(this.b, this);\n  } else {\n    if (0 == this.c) {\n      this.a.debug(\"TestConnection: request complete for initial check\"), this.va ? (this.c = 1, yd(this)) : (this.c = 2, zd(this));\n    } else {\n      if (2 == this.c) {\n        this.a.debug(\"TestConnection: request complete for stage 2\");\n        var a = !1;\n        (a = ed() ? this.Wa : 200 > this.rb - this.La ? !1 : !0) ? (this.a.debug(\"Test connection succeeded; using streaming connection\"), W(), Bd(this.b, this, !0)) : (this.a.debug(\"Test connection failed; not using streaming\"), W(), Bd(this.b, this, !1));\n      }\n    }\n  }\n};\nf.$a = function() {\n  return this.b.$a();\n};\nf.isActive = function() {\n  return this.b.isActive();\n};\nf.H = function(a) {\n  this.b.H(a);\n};\nfunction Ed(a, b, c) {\n  this.Bb = a || null;\n  this.c = Fd;\n  this.t = [];\n  this.Q = [];\n  this.a = new N;\n  this.P = new Yb(0, !0);\n  this.Gb = b || null;\n  this.Dc = null != c ? c : null;\n}\nfunction Gd(a, b) {\n  this.Ob = a;\n  this.map = b;\n}\nf = Ed.prototype;\nf.v = null;\nf.xa = null;\nf.p = null;\nf.i = null;\nf.I = null;\nf.Ma = null;\nf.zb = null;\nf.L = null;\nf.hc = !0;\nf.Ba = 0;\nf.sc = 0;\nf.Ka = !1;\nf.e = null;\nf.G = null;\nf.M = null;\nf.aa = null;\nf.V = null;\nf.wb = null;\nf.gc = !0;\nf.za = -1;\nf.Nb = -1;\nf.g = -1;\nf.ba = 0;\nf.ha = 0;\nf.ic = 5E3;\nf.Cc = 1E4;\nf.pb = 2;\nf.Hb = 2E4;\nf.ma = 0;\nf.ab = !1;\nf.ia = 8;\nvar Fd = 1, Hd = new R;\nfunction Id(a) {\n  Q.call(this, \"statevent\", a);\n}\ns(Id, Q);\nfunction Jd(a, b) {\n  Q.call(this, \"timingevent\", a);\n  this.size = b;\n}\ns(Jd, Q);\nvar jd = 1, ld = 2, kd = 3, sd = 4;\nfunction Kd(a) {\n  Q.call(this, \"serverreachability\", a);\n}\ns(Kd, Q);\nvar Xb = \"y2f%\";\nf = Ed.prototype;\nf.kb = function(a, b, c, d, e) {\n  this.a.debug(\"connect()\");\n  W();\n  this.I = b;\n  this.xa = c || {};\n  d && void 0 !== e && (this.xa.OSID = d, this.xa.OAID = e);\n  this.a.debug(\"connectTest_()\");\n  Ld(this) && (this.V = new wd(this, this.a), this.V.S(this.v), this.V.ac(this.P), this.V.kb(a));\n};\nf.disconnect = function() {\n  this.a.debug(\"disconnect()\");\n  Md(this);\n  if (3 == this.c) {\n    var a = this.Ba++, b = this.Ma.n();\n    G(b, \"SID\", this.Y);\n    G(b, \"RID\", a);\n    G(b, \"TYPE\", \"terminate\");\n    Nd(this, b);\n    a = new U(this, this.a, this.Y, a, void 0);\n    a.sa = 2;\n    a.U = H(b.n());\n    b = new Image;\n    b.src = a.U;\n    b.onload = b.onerror = p(a.nc, a);\n    a.Da = q();\n    id(a);\n  }\n  Od(this);\n};\nfunction Md(a) {\n  a.V && (a.V.abort(), a.V = null);\n  a.i && (a.i.cancel(), a.i = null);\n  a.M && (l.clearTimeout(a.M), a.M = null);\n  Pd(a);\n  a.p && (a.p.cancel(), a.p = null);\n  a.G && (l.clearTimeout(a.G), a.G = null);\n}\nf.S = function(a) {\n  this.v = a;\n};\nf.bc = function(a) {\n  this.ma = a;\n};\nf.Lb = function() {\n  return 0 == this.c;\n};\nf.ac = function(a) {\n  this.P = a;\n};\nfunction Qd(a) {\n  a.p || a.G || (a.G = Y(p(a.Tb, a), 0), a.ba = 0);\n}\nf.Tb = function(a) {\n  this.G = null;\n  this.a.debug(\"startForwardChannel_\");\n  if (Ld(this)) {\n    if (this.c == Fd) {\n      if (a) {\n        this.a.J(\"Not supposed to retry the open\");\n      } else {\n        this.a.debug(\"open_()\");\n        this.Ba = Math.floor(1E5 * Math.random());\n        a = this.Ba++;\n        var b = new U(this, this.a, \"\", a, void 0);\n        b.S(this.v);\n        var c = Rd(this), d = this.Ma.n();\n        G(d, \"RID\", a);\n        this.Bb && G(d, \"CVER\", this.Bb);\n        Nd(this, d);\n        fd(b, d, c);\n        this.p = b;\n        this.c = 2;\n      }\n    } else {\n      3 == this.c && (a ? Sd(this, a) : 0 == this.t.length ? this.a.debug(\"startForwardChannel_ returned: nothing to send\") : this.p ? this.a.J(\"startForwardChannel_ returned: connection already in progress\") : (Sd(this), this.a.debug(\"startForwardChannel_ finished, sent request\")));\n    }\n  }\n};\nfunction Sd(a, b) {\n  var c, d;\n  b ? 6 < a.ia ? (a.t = a.Q.concat(a.t), a.Q.length = 0, c = a.Ba - 1, d = Rd(a)) : (c = b.B, d = b.X) : (c = a.Ba++, d = Rd(a));\n  var e = a.Ma.n();\n  G(e, \"SID\", a.Y);\n  G(e, \"RID\", c);\n  G(e, \"AID\", a.za);\n  Nd(a, e);\n  c = new U(a, a.a, a.Y, c, a.ba + 1);\n  c.S(a.v);\n  c.setTimeout(Math.round(0.5 * a.Hb) + Math.round(0.5 * a.Hb * Math.random()));\n  a.p = c;\n  fd(c, e, d);\n}\nfunction Nd(a, b) {\n  if (a.e) {\n    var c = a.e.getAdditionalParams(a);\n    c && D(c, function(a, c) {\n      G(b, c, a);\n    });\n  }\n}\nfunction Rd(a) {\n  var b = Math.min(a.t.length, 1E3), c = [\"count=\" + b], d;\n  6 < a.ia && 0 < b ? (d = a.t[0].Ob, c.push(\"ofs=\" + d)) : d = 0;\n  for (var e = 0;e < b;e++) {\n    var g = a.t[e].Ob, h = a.t[e].map, g = 6 >= a.ia ? e : g - d;\n    try {\n      D(h, function(a, b) {\n        c.push(\"req\" + g + \"_\" + b + \"=\" + encodeURIComponent(a));\n      });\n    } catch (k) {\n      c.push(\"req\" + g + \"_type=\" + encodeURIComponent(\"_badmap\")), a.e && a.e.badMapError(a, h);\n    }\n  }\n  a.Q = a.Q.concat(a.t.splice(0, b));\n  return c.join(\"&\");\n}\nfunction Td(a) {\n  a.i || a.M || (a.yb = 1, a.M = Y(p(a.Sb, a), 0), a.ha = 0);\n}\nfunction Ud(a) {\n  if (a.i || a.M) {\n    return a.a.J(\"Request already in progress\"), !1;\n  }\n  if (3 <= a.ha) {\n    return!1;\n  }\n  a.a.debug(\"Going to retry GET\");\n  a.yb++;\n  a.M = Y(p(a.Sb, a), Vd(a, a.ha));\n  a.ha++;\n  return!0;\n}\nf.Sb = function() {\n  this.M = null;\n  if (Ld(this)) {\n    this.a.debug(\"Creating new HttpRequest\");\n    this.i = new U(this, this.a, this.Y, \"rpc\", this.yb);\n    this.i.S(this.v);\n    this.i.bc(this.ma);\n    var a = this.zb.n();\n    G(a, \"RID\", \"rpc\");\n    G(a, \"SID\", this.Y);\n    G(a, \"CI\", this.wb ? \"0\" : \"1\");\n    G(a, \"AID\", this.za);\n    Nd(this, a);\n    if (ed()) {\n      G(a, \"TYPE\", \"xmlhttp\"), hd(this.i, a, !0, this.L, !1);\n    } else {\n      G(a, \"TYPE\", \"html\");\n      var b = this.i, c = Boolean(this.L);\n      b.sa = 3;\n      b.U = H(a.n());\n      rd(b, c);\n    }\n    this.a.debug(\"New Request created\");\n  }\n};\nfunction Ld(a) {\n  if (a.e) {\n    var b = a.e.okToMakeRequest(a);\n    if (0 != b) {\n      return a.a.debug(\"Handler returned error code from okToMakeRequest\"), Z(a, b), !1;\n    }\n  }\n  return!0;\n}\nfunction Bd(a, b, c) {\n  a.a.debug(\"Test Connection Finished\");\n  a.wb = a.gc && c;\n  a.g = b.g;\n  a.a.debug(\"connectChannel_()\");\n  a.lc(Fd, 0);\n  a.Ma = xd(a, a.I);\n  Qd(a);\n}\nfunction Dd(a, b) {\n  a.a.debug(\"Test Connection Failed\");\n  a.g = b.g;\n  Z(a, 2);\n}\nf.Rb = function(a, b) {\n  if (0 != this.c && (this.i == a || this.p == a)) {\n    if (this.g = a.g, this.p == a && 3 == this.c) {\n      if (7 < this.ia) {\n        var c;\n        try {\n          c = this.P.parse(b);\n        } catch (d) {\n          c = null;\n        }\n        if (m(c) && 3 == c.length) {\n          var e = c;\n          if (0 == e[0]) {\n            a: {\n              if (this.a.debug(\"Server claims our backchannel is missing.\"), this.M) {\n                this.a.debug(\"But we are currently starting the request.\");\n              } else {\n                if (this.i) {\n                  if (this.i.Da + 3E3 < this.p.Da) {\n                    Pd(this), this.i.cancel(), this.i = null;\n                  } else {\n                    break a;\n                  }\n                } else {\n                  this.a.Z(\"We do not have a BackChannel established\");\n                }\n                Ud(this);\n                W();\n              }\n            }\n          } else {\n            this.Nb = e[1], c = this.Nb - this.za, 0 < c && (e = e[2], this.a.debug(e + \" bytes (in \" + c + \" arrays) are outstanding on the BackChannel\"), 37500 > e && this.wb && 0 == this.ha && !this.aa && (this.aa = Y(p(this.tc, this), 6E3)));\n          }\n        } else {\n          this.a.debug(\"Bad POST response data returned\"), Z(this, 11);\n        }\n      } else {\n        b != Xb && (this.a.debug(\"Bad data returned - missing/invald magic cookie\"), Z(this, 11));\n      }\n    } else {\n      if (this.i == a && Pd(this), !/^[\\s\\xa0]*$/.test(b)) {\n        c = this.P.parse(b);\n        for (var e = this.e && this.e.channelHandleMultipleArrays ? [] : null, g = 0;g < c.length;g++) {\n          var h = c[g];\n          this.za = h[0];\n          h = h[1];\n          2 == this.c ? \"c\" == h[0] ? (this.Y = h[1], this.L = this.correctHostPrefix(h[2]), h = h[3], this.ia = null != h ? h : 6, this.c = 3, this.e && this.e.channelOpened(this), this.zb = Cd(this, this.L, this.I), Td(this)) : \"stop\" == h[0] && Z(this, 7) : 3 == this.c && (\"stop\" == h[0] ? (e && 0 != e.length && (this.e.channelHandleMultipleArrays(this, e), e.length = 0), Z(this, 7)) : \"noop\" != h[0] && (e ? e.push(h) : this.e && this.e.channelHandleArray(this, h)), this.ha = 0);\n        }\n        e && 0 != e.length && this.e.channelHandleMultipleArrays(this, e);\n      }\n    }\n  }\n};\nf.correctHostPrefix = function(a) {\n  return this.hc ? this.e ? this.e.correctHostPrefix(a) : a : null;\n};\nf.tc = function() {\n  null != this.aa && (this.aa = null, this.i.cancel(), this.i = null, Ud(this), W());\n};\nfunction Pd(a) {\n  null != a.aa && (l.clearTimeout(a.aa), a.aa = null);\n}\nf.la = function(a) {\n  this.a.debug(\"Request complete\");\n  var b;\n  if (this.i == a) {\n    Pd(this), this.i = null, b = 2;\n  } else {\n    if (this.p == a) {\n      this.p = null, b = 1;\n    } else {\n      return;\n    }\n  }\n  this.g = a.g;\n  if (0 != this.c) {\n    if (a.F) {\n      1 == b ? (q(), Hd.dispatchEvent(new Jd(Hd, a.X ? a.X.length : 0)), Qd(this), this.Q.length = 0) : Td(this);\n    } else {\n      var c = a.Ib();\n      if (3 == c || 7 == c || 0 == c && 0 < this.g) {\n        this.a.debug(\"Not retrying due to error type\");\n      } else {\n        this.a.debug(\"Maybe retrying, last error: \" + ad(c, this.g));\n        var d;\n        if (d = 1 == b) {\n          this.p || this.G ? (this.a.J(\"Request already in progress\"), d = !1) : this.c == Fd || this.ba >= (this.Ka ? 0 : this.pb) ? d = !1 : (this.a.debug(\"Going to retry POST\"), this.G = Y(p(this.Tb, this, a), Vd(this, this.ba)), this.ba++, d = !0);\n        }\n        if (d || 2 == b && Ud(this)) {\n          return;\n        }\n        this.a.debug(\"Exceeded max number of retries\");\n      }\n      this.a.debug(\"Error: HTTP request failed\");\n      switch(c) {\n        case 1:\n          Z(this, 5);\n          break;\n        case 4:\n          Z(this, 10);\n          break;\n        case 3:\n          Z(this, 6);\n          break;\n        case 7:\n          Z(this, 12);\n          break;\n        default:\n          Z(this, 2);\n      }\n    }\n  }\n};\nfunction Vd(a, b) {\n  var c = a.ic + Math.floor(Math.random() * a.Cc);\n  a.isActive() || (a.a.debug(\"Inactive channel\"), c *= 2);\n  return c * b;\n}\nf.lc = function(a) {\n  if (!(0 <= Xa(arguments, this.c))) {\n    throw Error(\"Unexpected channel state: \" + this.c);\n  }\n};\nfunction Z(a, b) {\n  a.a.info(\"Error code \" + b);\n  if (2 == b || 9 == b) {\n    var c = null;\n    a.e && (c = a.e.getNetworkTestImageUri(a));\n    var d = p(a.Fc, a);\n    c || (c = new E(\"//www.google.com/images/cleardot.gif\"), H(c));\n    vd(c.toString(), 1E4, d);\n  } else {\n    W();\n  }\n  Wd(a, b);\n}\nf.Fc = function(a) {\n  a ? (this.a.info(\"Successfully pinged google.com\"), W()) : (this.a.info(\"Failed to ping google.com\"), W(), Wd(this, 8));\n};\nfunction Wd(a, b) {\n  a.a.debug(\"HttpChannel: error - \" + b);\n  a.c = 0;\n  a.e && a.e.channelError(a, b);\n  Od(a);\n  Md(a);\n}\nfunction Od(a) {\n  a.c = 0;\n  a.g = -1;\n  if (a.e) {\n    if (0 == a.Q.length && 0 == a.t.length) {\n      a.e.channelClosed(a);\n    } else {\n      a.a.debug(\"Number of undelivered maps, pending: \" + a.Q.length + \", outgoing: \" + a.t.length);\n      var b = bb(a.Q), c = bb(a.t);\n      a.Q.length = 0;\n      a.t.length = 0;\n      a.e.channelClosed(a, b, c);\n    }\n  }\n}\nfunction xd(a, b) {\n  var c = Ad(a, null, b);\n  a.a.debug(\"GetForwardChannelUri: \" + c);\n  return c;\n}\nfunction Cd(a, b, c) {\n  b = Ad(a, a.$a() ? b : null, c);\n  a.a.debug(\"GetBackChannelUri: \" + b);\n  return b;\n}\nfunction Ad(a, b, c) {\n  var d = tb(c);\n  if (\"\" != d.ja) {\n    b && gb(d, b + \".\" + d.ja), hb(d, d.Ca);\n  } else {\n    var e = window.location, d = ub(e.protocol, b ? b + \".\" + e.hostname : e.hostname, e.port, c)\n  }\n  a.xa && D(a.xa, function(a, b) {\n    G(d, b, a);\n  });\n  G(d, \"VER\", a.ia);\n  Nd(a, d);\n  return d;\n}\nf.lb = function(a) {\n  if (a && !this.ab) {\n    throw Error(\"Can't create secondary domain capable XhrIo object.\");\n  }\n  a = new Ic;\n  a.dc = this.ab;\n  return a;\n};\nf.isActive = function() {\n  return!!this.e && this.e.isActive(this);\n};\nfunction Y(a, b) {\n  if (!fa(a)) {\n    throw Error(\"Fn must not be null and must be a function\");\n  }\n  return l.setTimeout(function() {\n    a();\n  }, b);\n}\nf.H = function() {\n  Hd.dispatchEvent(new Kd(Hd));\n};\nfunction W() {\n  Hd.dispatchEvent(new Id(Hd));\n}\nf.$a = function() {\n  return this.ab || !ed();\n};\nfunction Xd() {\n}\nf = Xd.prototype;\nf.channelHandleMultipleArrays = null;\nf.okToMakeRequest = function() {\n  return 0;\n};\nf.channelOpened = function() {\n};\nf.channelHandleArray = function() {\n};\nf.channelError = function() {\n};\nf.channelClosed = function() {\n};\nf.getAdditionalParams = function() {\n  return{};\n};\nf.getNetworkTestImageUri = function() {\n  return null;\n};\nf.isActive = function() {\n  return!0;\n};\nf.badMapError = function() {\n};\nf.correctHostPrefix = function(a) {\n  return a;\n};\nvar $, Yd;\nYd = {0:\"Ok\", 4:\"User is logging out\", 6:\"Unknown session ID\", 7:\"Stopped by server\", 8:\"General network error\", 2:\"Request failed\", 9:\"Blocked by a network administrator\", 5:\"No data from server\", 10:\"Got bad data from the server\", 11:\"Got a bad response from the server\"};\n$ = function(a, b) {\n  var c, d, e, g, h, k, u, K, v, r, Ka, w, X, cd;\n  if (!(this instanceof $)) {\n    return new $(a, b);\n  }\n  r = this;\n  a || (a = \"channel\");\n  a.match(/:\\/\\//) && a.replace(/^ws/, \"http\");\n  b || (b = {});\n  m(b || \"string\" === typeof b) && (b = {});\n  K = b.reconnectTime || 3E3;\n  c = b.extraHeaders || null;\n  d = b.extraParams || null;\n  null !== b.affinity && (d || (d = {}), b.affinityParam || (b.affinityParam = \"a\"), this.affinity = b.affinity || sa(), d[b.affinityParam] = this.affinity);\n  X = function(a) {\n    r.readyState = r.readyState = a;\n  };\n  X(this.CLOSED);\n  w = null;\n  k = null != (cd = b.prev) ? cd.Ec : void 0;\n  e = function(a, b, c, d, e) {\n    try {\n      return \"function\" === typeof r[a] ? r[a](c, d, e) : void 0;\n    } catch (g) {\n      throw \"undefined\" !== typeof console && null !== console && console.error(g.stack), g;\n    }\n  };\n  g = new Xd;\n  g.channelOpened = function() {\n    k = w;\n    X($.OPEN);\n    return e(\"onopen\");\n  };\n  h = null;\n  g.channelError = function(a, b) {\n    var c;\n    c = Yd[b];\n    h = b;\n    r.readyState !== $.CLOSED && X($.hb);\n    return e(\"onerror\", 0, c, b);\n  };\n  v = null;\n  g.channelClosed = function(a, c, d) {\n    var g;\n    if (r.readyState !== $.CLOSED) {\n      return w = null, a = h ? Yd[h] : \"Closed\", X($.CLOSED), b.reconnect && 7 !== h && 0 !== h && (g = 6 === h ? 0 : K, clearTimeout(v), v = setTimeout(u, g)), e(\"onclose\", 0, a, c, d), h = null;\n    }\n  };\n  g.channelHandleArray = function(a, b) {\n    return e(\"onmessage\", 0, {type:\"message\", data:b});\n  };\n  u = function() {\n    if (w) {\n      throw Error(\"Reconnect() called from invalid state\");\n    }\n    X($.CONNECTING);\n    e(\"onconnecting\");\n    clearTimeout(v);\n    r.Ec = w = new Ed(b.appVersion, null != k ? k.Gb : void 0);\n    b.crossDomainXhr && (w.ab = !0);\n    w.e = g;\n    c && w.S(c);\n    h = null;\n    if (b.failFast) {\n      var t = w;\n      t.Ka = !0;\n      t.a.info(\"setFailFast: true\");\n      (t.p || t.G) && t.ba > (t.Ka ? 0 : t.pb) && (t.a.info(\"Retry count \" + t.ba + \" > new maxRetries \" + (t.Ka ? 0 : t.pb) + \". Fail immediately!\"), t.p ? (t.p.cancel(), t.la(t.p)) : (l.clearTimeout(t.G), t.G = null, Z(t, 2)));\n    }\n    return w.kb(\"\" + a + \"/test\", \"\" + a + \"/bind\", d, null != k ? k.Y : void 0, null != k ? k.za : void 0);\n  };\n  this.open = function() {\n    if (r.readyState !== r.CLOSED) {\n      throw Error(\"Already open\");\n    }\n    return u();\n  };\n  this.close = function() {\n    clearTimeout(v);\n    h = 0;\n    if (r.readyState !== $.CLOSED) {\n      return X($.hb), w.disconnect();\n    }\n  };\n  this.sendMap = Ka = function(a) {\n    var b;\n    if ((b = r.readyState) !== $.hb && b !== $.CLOSED) {\n      b = w;\n      if (0 == b.c) {\n        throw Error(\"Invalid operation: sending map when state is closed\");\n      }\n      1E3 == b.t.length && b.a.J(\"Already have 1000 queued maps upon queueing \" + yb(a));\n      b.t.push(new Gd(b.sc++, a));\n      2 != b.c && 3 != b.c || Qd(b);\n    }\n  };\n  this.send = function(a) {\n    return \"string\" === typeof a ? Ka({_S:a}) : Ka({JSON:yb(a)});\n  };\n  u();\n};\n$.prototype.canSendWhileConnecting = $.canSendWhileConnecting = !0;\n$.prototype.canSendJSON = $.canSendJSON = !0;\n$.prototype.CONNECTING = $.CONNECTING = $.CONNECTING = 0;\n$.prototype.OPEN = $.OPEN = $.OPEN = 1;\n$.prototype.CLOSING = $.CLOSING = $.hb = 2;\n$.prototype.CLOSED = $.CLOSED = $.CLOSED = 3;\n(\"undefined\" !== typeof exports && null !== exports ? exports : window).BCSocket = $;\n\n})();\n","var pSlice = Array.prototype.slice;\nvar Object_keys = typeof Object.keys === 'function'\n    ? Object.keys\n    : function (obj) {\n        var keys = [];\n        for (var key in obj) keys.push(key);\n        return keys;\n    }\n;\n\nvar deepEqual = module.exports = function (actual, expected) {\n  // enforce Object.is +0 !== -0\n  if (actual === 0 && expected === 0) {\n    return areZerosEqual(actual, expected);\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  } else if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  } else if (isNumberNaN(actual)) {\n    return isNumberNaN(expected);\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object') {\n    return actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n};\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction isNumberNaN(value) {\n  // NaN === NaN -> false\n  return typeof value == 'number' && value !== value;\n}\n\nfunction areZerosEqual(zeroA, zeroB) {\n  // (1 / +0|0) -> Infinity, but (1 / -0) -> -Infinity and (Infinity !== -Infinity)\n  return (1 / zeroA) === (1 / zeroB);\n}\n\nfunction objEquiv(a, b) {\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b);\n  }\n  try {\n    var ka = Object_keys(a),\n        kb = Object_keys(b),\n        key, i;\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n","exports.contexts = require('./lib/contexts');\nexports.expressions = require('./lib/expressions');\nexports.operatorFns = require('./lib/operatorFns');\nexports.templates = require('./lib/templates');\n","exports.ContextMeta = ContextMeta;\nexports.Context = Context;\n\nfunction noop() {}\n\n// TODO:\n// Implement removeItemContext\n\nfunction ContextMeta() {\n  this.addBinding = noop;\n  this.removeBinding = noop;\n  this.removeNode = noop;\n  this.addItemContext = noop;\n  this.removeItemContext = noop;\n  this.views = null;\n  this.idNamespace = '';\n  this.idCount = 0;\n  this.pending = [];\n  this.pauseCount = 0;\n}\n\nfunction Context(meta, controller, parent, unbound, expression, item, view, attributes, hooks, initHooks) {\n  // Required properties //\n\n  // Properties which are globally inherited for the entire page\n  this.meta = meta;\n  // The page or component. Must have a `model` property with a `data` property\n  this.controller = controller;\n\n  // Optional properties //\n\n  // Containing context\n  this.parent = parent;\n  // Boolean set to true when bindings should be ignored\n  this.unbound = unbound;\n  // The expression for a block\n  this.expression = expression;\n  // Alias name for the given expression\n  this.alias = expression && expression.meta && expression.meta.as;\n  // Alias name for the index or iterated key\n  this.keyAlias = expression && expression.meta && expression.meta.keyAs;\n\n  // For Context::eachChild\n  // The index of the each at render time\n  this.item = item;\n\n  // For Context::viewChild\n  // Reference to the current view\n  this.view = view;\n  // Attribute values passed to the view instance\n  this.attributes = attributes;\n  // MarkupHooks to be called after insert into DOM of component\n  this.hooks = hooks;\n  // MarkupHooks to be called immediately before init of component\n  this.initHooks = initHooks;\n\n  // Used in EventModel\n  this._id = null;\n}\n\nContext.prototype.id = function() {\n  var count = ++this.meta.idCount;\n  return this.meta.idNamespace + '_' + count.toString(36);\n};\n\nContext.prototype.addBinding = function(binding) {\n  // Don't add bindings that wrap list items. Only their outer range is needed\n  if (binding.itemFor) return;\n  var expression = binding.template.expression;\n  // Don't rerender in unbound sections\n  if (expression ? expression.isUnbound(this) : this.unbound) return;\n  // Don't rerender to changes in a with expression\n  if (expression && expression.meta && expression.meta.blockType === 'with') return;\n  this.meta.addBinding(binding);\n};\nContext.prototype.removeBinding = function(binding) {\n  this.meta.removeBinding(binding);\n};\nContext.prototype.removeNode = function(node) {\n  this.meta.removeNode(node);\n};\n\nContext.prototype.child = function(expression) {\n  // Set or inherit the binding mode\n  var blockType = expression.meta && expression.meta.blockType;\n  var unbound = (blockType === 'unbound') ? true :\n    (blockType === 'bound') ? false :\n    this.unbound;\n  return new Context(this.meta, this.controller, this, unbound, expression);\n};\n\nContext.prototype.componentChild = function(component) {\n  return new Context(this.meta, component, this, this.unbound);\n};\n\n// Make a context for an item in an each block\nContext.prototype.eachChild = function(expression, index) {\n  var context = new Context(this.meta, this.controller, this, this.unbound, expression, index);\n  this.meta.addItemContext(context);\n  return context;\n};\n\nContext.prototype.viewChild = function(view, attributes, hooks, initHooks) {\n  return new Context(this.meta, this.controller, this, this.unbound, null, null, view, attributes, hooks, initHooks);\n};\n\nContext.prototype.forRelative = function(expression) {\n  var context = this;\n  while (context && context.expression === expression || context.view) {\n    context = context.parent;\n  }\n  return context;\n};\n\n// Returns the closest context which defined the named alias\nContext.prototype.forAlias = function(alias) {\n  var context = this;\n  while (context) {\n    if (context.alias === alias || context.keyAlias === alias) return context;\n    context = context.parent;\n  }\n};\n\n// Returns the closest containing context for a view attribute name or nothing\nContext.prototype.forAttribute = function(attribute) {\n  var context = this;\n  while (context) {\n    // Find the closest context associated with a view\n    if (context.view) {\n      var attributes = context.attributes;\n      if (!attributes) return;\n      if (attributes.hasOwnProperty(attribute)) return context;\n      // If the attribute isn't found, but the attributes inherit, continue\n      // looking in the next closest view context\n      if (!attributes.inherit && !attributes.extend) return;\n    }\n    context = context.parent;\n  }\n};\n\nContext.prototype.forViewParent = function() {\n  var context = this;\n  while (context) {\n    // Find the closest view\n    if (context.view) return context.parent;\n    context = context.parent;\n  }\n};\n\nContext.prototype.getView = function() {\n  var context = this;\n  while (context) {\n    // Find the closest view\n    if (context.view) return context.view;\n    context = context.parent;\n  }\n};\n\n// Returns the `this` value for a context\nContext.prototype.get = function() {\n  return (this.expression) ? this.expression.get(this) : this.controller.model.data;\n};\n\nContext.prototype.pause = function() {\n  this.meta.pauseCount++;\n};\n\nContext.prototype.unpause = function() {\n  if (--this.meta.pauseCount) return;\n  this.flush();\n};\n\nContext.prototype.flush = function() {\n  var pending = this.meta.pending;\n  var len = pending.length;\n  if (!len) return;\n  this.meta.pending = [];\n  for (var i = 0; i < len; i++) {\n    pending[i]();\n  }\n};\n\nContext.prototype.queue = function(cb) {\n  this.meta.pending.push(cb);\n};\n","var serializeObject = require('serialize-object');\nvar operatorFns = require('./operatorFns');\nvar templates = require('./templates');\n\nexports.lookup = lookup;\nexports.templateTruthy = templateTruthy;\nexports.pathSegments = pathSegments;\nexports.renderValue = renderValue;\nexports._outerDependency = outerDependency;\nexports.ExpressionMeta = ExpressionMeta;\n\nexports.Expression = Expression;\nexports.LiteralExpression = LiteralExpression;\nexports.PathExpression = PathExpression;\nexports.RelativePathExpression = RelativePathExpression;\nexports.AliasPathExpression = AliasPathExpression;\nexports.AttributePathExpression = AttributePathExpression;\nexports.BracketsExpression = BracketsExpression;\nexports.FnExpression = FnExpression;\nexports.OperatorExpression = OperatorExpression;\nexports.NewExpression = NewExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ScopedModelExpression = ScopedModelExpression;\n\nfunction lookup(segments, value) {\n  if (!segments) return value;\n\n  for (var i = 0, len = segments.length; i < len; i++) {\n    if (value == null) return value;\n    value = value[segments[i]];\n  }\n  return value;\n}\n\n// Unlike JS, `[]` is falsey. Otherwise, truthiness is the same as JS\nfunction templateTruthy(value) {\n  return (Array.isArray(value)) ? value.length > 0 : !!value;\n}\n\nfunction pathSegments(segments) {\n  var result = [];\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    result[i] = (typeof segment === 'object') ? segment.item : segment;\n  }\n  return result;\n}\n\nfunction renderValue(value, context) {\n  return (typeof value !== 'object') ? value :\n    (value instanceof templates.Template) ? renderTemplate(value, context) :\n    (Array.isArray(value)) ? renderArray(value, context) :\n    renderObject(value, context);\n}\nfunction renderTemplate(value, context) {\n  var i = 1000;\n  while (value instanceof templates.Template) {\n    if (--i < 0) throw new Error('Maximum template render passes exceeded');\n    value = value.get(context, true);\n  }\n  return value;\n}\nfunction renderArray(array, context) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasTemplateProperty(array[i])) {\n      return renderArrayProperties(array, context);\n    }\n  }\n  return array;\n}\nfunction renderObject(object, context) {\n  return (hasTemplateProperty(object)) ?\n    renderObjectProperties(object, context) : object;\n}\nfunction hasTemplateProperty(object) {\n  if (!object) return false;\n  if (global.Node && object instanceof global.Node) return false;\n  for (var key in object) {\n    if (object[key] instanceof templates.Template) return true;\n  }\n  return false;\n}\nfunction renderArrayProperties(array, context) {\n  var out = [];\n  for (var i = 0, len = array.length; i < len; i++) {\n    var item = renderObject(array[i], context);\n    out.push(item);\n  }\n  return out;\n}\nfunction renderObjectProperties(object, context) {\n  var out = {};\n  for (var key in object) {\n    var value = object[key];\n    out[key] = renderTemplate(value, context);\n  }\n  return out;\n}\n\nfunction ExpressionMeta(source, blockType, isEnd, as, keyAs, unescaped, bindType, valueType) {\n  this.source = source;\n  this.blockType = blockType;\n  this.isEnd = isEnd;\n  this.as = as;\n  this.keyAs = keyAs;\n  this.unescaped = unescaped;\n  this.bindType = bindType;\n  this.valueType = valueType;\n}\nExpressionMeta.prototype.module = 'expressions';\nExpressionMeta.prototype.type = 'ExpressionMeta';\nExpressionMeta.prototype.serialize = function() {\n  return serializeObject.instance(\n    this\n  , this.source\n  , this.blockType\n  , this.isEnd\n  , this.as\n  , this.keyAs\n  , this.unescaped\n  , this.bindType\n  , this.valueType\n  );\n};\n\nfunction Expression(meta) {\n  this.meta = meta;\n}\nExpression.prototype.module = 'expressions';\nExpression.prototype.type = 'Expression';\nExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.meta);\n};\nExpression.prototype.toString = function() {\n  return this.meta && this.meta.source;\n};\nExpression.prototype.truthy = function(context) {\n  var blockType = this.meta.blockType;\n  if (blockType === 'else') return true;\n  var value = this.get(context, true);\n  var truthy = templateTruthy(value);\n  return (blockType === 'unless') ? !truthy : truthy;\n};\nExpression.prototype.get = function() {};\n// Return the expression's segment list with context objects\nExpression.prototype.resolve = function() {};\n// Return a list of segment lists or null\nExpression.prototype.dependencies = function() {};\n// Return the pathSegments that the expression currently resolves to or null\nExpression.prototype.pathSegments = function(context) {\n  var segments = this.resolve(context);\n  return segments && pathSegments(segments);\n};\nExpression.prototype.set = function(context, value) {\n  var segments = this.pathSegments(context);\n  if (!segments) throw new Error('Expression does not support setting');\n  context.controller.model._set(segments, value);\n};\nExpression.prototype._getPatch = function(context, value) {\n  if (this.meta && this.meta.blockType) {\n    value = renderTemplate(value, context);\n  }\n  return (context && context.expression === this && context.item != null) ?\n    value && value[context.item] : value;\n};\nExpression.prototype._resolvePatch = function(context, segments) {\n  return (context && context.expression === this && context.item != null) ?\n    segments.concat(context) : segments;\n};\nExpression.prototype.isUnbound = function(context) {\n  // If the template being rendered has an explicit bindType keyword, such as:\n  // {{unbound #item.text}}\n  var bindType = this.meta && this.meta.bindType;\n  if (bindType === 'unbound') return true;\n  if (bindType === 'bound') return false;\n  // Otherwise, inherit from the context\n  return context.unbound;\n};\n\n\nfunction LiteralExpression(value, meta) {\n  this.value = value;\n  this.meta = meta;\n}\nLiteralExpression.prototype = new Expression();\nLiteralExpression.prototype.type = 'LiteralExpression';\nLiteralExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.value, this.meta);\n};\nLiteralExpression.prototype.get = function(context) {\n  return this._getPatch(context, this.value);\n};\n\nfunction PathExpression(segments, meta) {\n  this.segments = segments;\n  this.meta = meta;\n}\nPathExpression.prototype = new Expression();\nPathExpression.prototype.type = 'PathExpression';\nPathExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.segments, this.meta);\n};\nPathExpression.prototype.get = function(context) {\n  var value = lookup(this.segments, context.controller.model.data);\n  return this._getPatch(context, value);\n};\nPathExpression.prototype.resolve = function(context) {\n  var segments = concat(context.controller._scope, this.segments);\n  return this._resolvePatch(context, segments);\n};\nPathExpression.prototype.dependencies = function(context, forInnerPath) {\n  return outerDependency(this, context, forInnerPath);\n};\n\nfunction RelativePathExpression(segments, meta) {\n  this.segments = segments;\n  this.meta = meta;\n}\nRelativePathExpression.prototype = new Expression();\nRelativePathExpression.prototype.type = 'RelativePathExpression';\nRelativePathExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.segments, this.meta);\n};\nRelativePathExpression.prototype.get = function(context) {\n  var relativeContext = context.forRelative(this);\n  var value = relativeContext.get();\n  if (this.segments.length) {\n    value = renderTemplate(value, relativeContext);\n    value = lookup(this.segments, value);\n  }\n  return this._getPatch(context, value);\n};\nRelativePathExpression.prototype.resolve = function(context) {\n  var relativeContext = context.forRelative(this);\n  var base = (relativeContext.expression) ?\n    relativeContext.expression.resolve(relativeContext) :\n    [];\n  if (!base) return;\n  var segments = base.concat(this.segments);\n  return this._resolvePatch(context, segments);\n};\nRelativePathExpression.prototype.dependencies = function(context, forInnerPath) {\n  // Return inner dependencies from our ancestor\n  // (e.g., {{ with foo[bar] }} ... {{ this.x }} has 'bar' as a dependency.)\n  var relativeContext = context.forRelative(this);\n  var inner = relativeContext.expression &&\n    relativeContext.expression.dependencies(relativeContext, true);\n  var outer = outerDependency(this, context, forInnerPath);\n  return concat(outer, inner);\n};\n\nfunction AliasPathExpression(alias, segments, meta) {\n  this.alias = alias;\n  this.segments = segments;\n  this.meta = meta;\n}\nAliasPathExpression.prototype = new Expression();\nAliasPathExpression.prototype.type = 'AliasPathExpression';\nAliasPathExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.alias, this.segments, this.meta);\n};\nAliasPathExpression.prototype.get = function(context) {\n  var aliasContext = context.forAlias(this.alias);\n  if (!aliasContext) return;\n  if (aliasContext.keyAlias === this.alias) {\n    return aliasContext.item;\n  }\n  var value = aliasContext.get();\n  if (this.segments.length) {\n    value = renderTemplate(value, aliasContext);\n    value = lookup(this.segments, value);\n  }\n  return this._getPatch(context, value);\n};\nAliasPathExpression.prototype.resolve = function(context) {\n  var aliasContext = context.forAlias(this.alias);\n  if (!aliasContext) return;\n  if (aliasContext.keyAlias === this.alias) return;\n  var base = aliasContext.expression.resolve(aliasContext);\n  if (!base) return;\n  var segments = base.concat(this.segments);\n  return this._resolvePatch(context, segments);\n};\nAliasPathExpression.prototype.dependencies = function(context, forInnerPath) {\n  var aliasContext = context.forAlias(this.alias);\n  if (!aliasContext) return;\n  if (aliasContext.keyAlias === this.alias) {\n    // For keyAliases, use a dependency of the entire list, so that it will\n    // always update when the list changes in any way. This is over-binding,\n    // but would otherwise be much more complex\n    var base = aliasContext.expression.resolve(aliasContext.parent);\n    return [base];\n  }\n  var inner = aliasContext.expression.dependencies(aliasContext, true);\n  var outer = outerDependency(this, context, forInnerPath);\n  return concat(outer, inner);\n};\n\nfunction AttributePathExpression(attribute, segments, meta) {\n  this.attribute = attribute;\n  this.segments = segments;\n  this.meta = meta;\n}\nAttributePathExpression.prototype = new Expression();\nAttributePathExpression.prototype.type = 'AttributePathExpression';\nAttributePathExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.attribute, this.segments, this.meta);\n};\nAttributePathExpression.prototype.get = function(context) {\n  var attributeContext = context.forAttribute(this.attribute);\n  if (!attributeContext) return;\n  var value = attributeContext.attributes[this.attribute];\n  if (this.segments.length) {\n    value = renderTemplate(value, attributeContext);\n    value = lookup(this.segments, value);\n  }\n  return this._getPatch(context, value);\n};\nAttributePathExpression.prototype.resolve = function(context) {\n  var attributeContext = context.forAttribute(this.attribute);\n  // Attributes are either a ParentWrapper or a literal value\n  var value = attributeContext && attributeContext.attributes[this.attribute];\n  var base = value && (typeof value.resolve === 'function') &&\n    value.resolve(attributeContext);\n  if (!base) return;\n  var segments = base.concat(this.segments);\n  return this._resolvePatch(context, segments);\n};\nAttributePathExpression.prototype.dependencies = function(context, forInnerPath) {\n  var attributeContext = context.forAttribute(this.attribute);\n  // Attributes are either a ParentWrapper or a literal value\n  var value = attributeContext && attributeContext.attributes[this.attribute];\n  var inner = value && (typeof value.dependencies === 'function') &&\n    value.dependencies(attributeContext, true);\n  var outer = outerDependency(this, context, forInnerPath);\n  return concat(outer, inner);\n};\n\nfunction BracketsExpression(before, inside, afterSegments, meta) {\n  this.before = before;\n  this.inside = inside;\n  this.afterSegments = afterSegments;\n  this.meta = meta;\n}\nBracketsExpression.prototype = new Expression();\nBracketsExpression.prototype.type = 'BracketsExpression';\nBracketsExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.before, this.inside, this.afterSegments, this.meta);\n};\nBracketsExpression.prototype.get = function(context) {\n  var inside = this.inside.get(context);\n  if (inside == null) return;\n  var before = this.before.get(context);\n  if (!before) return;\n  var base = before[inside];\n  var value = (this.afterSegments) ? lookup(this.afterSegments, base) : base;\n  return this._getPatch(context, value);\n};\nBracketsExpression.prototype.resolve = function(context) {\n  // Get and split the current value of the expression inside the brackets\n  var inside = this.inside.get(context);\n  if (inside == null) return;\n\n  // Concat the before, inside, and optional after segments\n  var base = this.before.resolve(context);\n  if (!base) return;\n  var segments = (this.afterSegments) ?\n    base.concat(inside, this.afterSegments) :\n    base.concat(inside);\n  return this._resolvePatch(context, segments);\n};\nBracketsExpression.prototype.dependencies = function(context, forInnerPath) {\n  var before = this.before.dependencies(context, true);\n  var inner = this.inside.dependencies(context);\n  var outer = outerDependency(this, context, forInnerPath);\n  return concat(concat(outer, inner), before);\n};\n\nfunction FnExpression(segments, args, afterSegments, meta) {\n  this.segments = segments;\n  this.args = args;\n  this.afterSegments = afterSegments;\n  this.meta = meta;\n  var parentSegments = segments && segments.slice();\n  this.lastSegment = parentSegments && parentSegments.pop();\n  this.parentSegments = (parentSegments && parentSegments.length) ? parentSegments : null;\n}\nFnExpression.prototype = new Expression();\nFnExpression.prototype.type = 'FnExpression';\nFnExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.segments, this.args, this.afterSegments, this.meta);\n};\nFnExpression.prototype.get = function(context) {\n  var value = this.apply(context);\n  // Lookup property underneath computed value if needed\n  if (this.afterSegments) {\n    value = lookup(this.afterSegments, value);\n  }\n  return this._getPatch(context, value);\n};\nFnExpression.prototype.apply = function(context, extraInputs) {\n  var parent = this._lookupParent(context);\n  var fn = parent[this.lastSegment];\n  var getFn = fn.get || fn;\n  var out = this._applyFn(getFn, context, extraInputs, parent);\n  return out;\n};\nFnExpression.prototype._lookupParent = function(context) {\n  // Lookup function on current controller\n  var controller = context.controller;\n  var segments = this.parentSegments;\n  var parent = (segments) ? lookup(segments, controller) : controller;\n  if (parent && parent[this.lastSegment]) return parent;\n  // Otherwise lookup function on page\n  var page = controller.page;\n  if (controller !== page) {\n    parent = (segments) ? lookup(segments, page) : page;\n    if (parent && parent[this.lastSegment]) return parent;\n  }\n  // Otherwise lookup function on global\n  parent = (segments) ? lookup(segments, global) : global;\n  if (parent && parent[this.lastSegment]) return parent;\n  // Throw if not found\n  throw new Error('Function not found for: ' + this.segments.join('.'));\n};\nFnExpression.prototype._getInputs = function(context) {\n  var inputs = [];\n  for (var i = 0, len = this.args.length; i < len; i++) {\n    var value = this.args[i].get(context);\n    inputs.push(renderValue(value, context));\n  }\n  return inputs;\n};\nFnExpression.prototype._applyFn = function(fn, context, extraInputs, thisArg) {\n  // Apply if there are no path inputs\n  if (!this.args) {\n    return (extraInputs) ?\n      fn.apply(thisArg, extraInputs) :\n      fn.call(thisArg);\n  }\n  // Otherwise, get the current value for path inputs and apply\n  var inputs = this._getInputs(context);\n  if (extraInputs) {\n    for (var i = 0, len = extraInputs.length; i < len; i++) {\n      inputs.push(extraInputs[i]);\n    }\n  }\n  return fn.apply(thisArg, inputs);\n};\nFnExpression.prototype.dependencies = function(context) {\n  var dependencies = [];\n  if (!this.args) return dependencies;\n  for (var i = 0, len = this.args.length; i < len; i++) {\n    var argDependencies = this.args[i].dependencies(context);\n    var firstDependency = argDependencies && argDependencies[0];\n    if (!firstDependency) continue;\n    if (firstDependency[firstDependency.length - 1] !== '*') {\n      argDependencies[0] = argDependencies[0].concat('*');\n    }\n    for (var j = 0, jLen = argDependencies.length; j < jLen; j++) {\n      dependencies.push(argDependencies[j]);\n    }\n  }\n  return dependencies;\n};\nFnExpression.prototype.set = function(context, value) {\n  var controller = context.controller;\n  var fn, parent;\n  while (controller) {\n    parent = (this.parentSegments) ?\n      lookup(this.parentSegments, controller) :\n      controller;\n    fn = parent && parent[this.lastSegment];\n    if (fn) break;\n    controller = controller.parent;\n  }\n  var setFn = fn && fn.set;\n  if (!setFn) throw new Error('No setter function for: ' + this.segments.join('.'));\n  var inputs = this._getInputs(context);\n  inputs.unshift(value);\n  var out = setFn.apply(parent, inputs);\n  for (var i in out) {\n    this.args[i].set(context, out[i]);\n  }\n};\n\nfunction NewExpression(segments, args, afterSegments, meta) {\n  FnExpression.call(this, segments, args, afterSegments, meta);\n}\nNewExpression.prototype = new FnExpression();\nNewExpression.prototype.type = 'NewExpression';\nNewExpression.prototype._applyFn = function(Fn, context) {\n  // Apply if there are no path inputs\n  if (!this.args) return new Fn();\n  // Otherwise, get the current value for path inputs and apply\n  var inputs = this._getInputs(context);\n  inputs.unshift(null);\n  return new (Fn.bind.apply(Fn, inputs))();\n};\n\nfunction OperatorExpression(name, args, afterSegments, meta) {\n  this.name = name;\n  this.args = args;\n  this.afterSegments = afterSegments;\n  this.meta = meta;\n  this.getFn = operatorFns.get[name];\n  this.setFn = operatorFns.set[name];\n}\nOperatorExpression.prototype = new FnExpression();\nOperatorExpression.prototype.type = 'OperatorExpression';\nOperatorExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.name, this.args, this.afterSegments, this.meta);\n};\nOperatorExpression.prototype.apply = function(context) {\n  var inputs = this._getInputs(context);\n  return this.getFn.apply(null, inputs);\n};\nOperatorExpression.prototype.set = function(context, value) {\n  var inputs = this._getInputs(context);\n  inputs.unshift(value);\n  var out = this.setFn.apply(null, inputs);\n  for (var i in out) {\n    this.args[i].set(context, out[i]);\n  }\n};\n\nfunction SequenceExpression(args, afterSegments, meta) {\n  this.args = args;\n  this.afterSegments = afterSegments;\n  this.meta = meta;\n}\nSequenceExpression.prototype = new OperatorExpression();\nSequenceExpression.prototype.type = 'SequenceExpression';\nSequenceExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.args, this.afterSegments, this.meta);\n};\nSequenceExpression.prototype.name = ',';\nSequenceExpression.prototype.getFn = operatorFns.get[','];\nSequenceExpression.prototype.resolve = function(context) {\n  var last = this.args[this.args.length - 1];\n  return last.resolve(context);\n};\nSequenceExpression.prototype.dependencies = function(context, forInnerPath) {\n  var dependencies = [];\n  for (var i = 0, len = this.args.length; i < len; i++) {\n    var argDependencies = this.args[i].dependencies(context, forInnerPath);\n    for (var j = 0, jLen = argDependencies.length; j < jLen; j++) {\n      dependencies.push(argDependencies[j]);\n    }\n  }\n  return dependencies;\n};\n\nfunction ScopedModelExpression(expression, meta) {\n  this.expression = expression;\n  this.meta = meta;\n}\nScopedModelExpression.prototype = new Expression();\nScopedModelExpression.prototype.type = 'ScopedModelExpression';\nScopedModelExpression.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression, this.meta);\n};\n// Return a scoped model instead of the value\nScopedModelExpression.prototype.get = function(context) {\n  var segments = this.pathSegments(context);\n  if (!segments) return;\n  return context.controller.model.scope(segments.join('.'));\n};\n// Delegate other methods to the inner expression\nScopedModelExpression.prototype.resolve = function(context) {\n  return this.expression.resolve(context);\n};\nScopedModelExpression.prototype.dependencies = function(context, forInnerPath) {\n  return this.expression.dependencies(context, forInnerPath);\n};\nScopedModelExpression.prototype.pathSegments = function(context) {\n  return this.expression.pathSegments(context);\n};\nScopedModelExpression.prototype.set = function(context, value) {\n  return this.expression.set(context, value);\n};\n\nfunction outerDependency(expression, context, forInnerPath) {\n  if (forInnerPath) return;\n  var val = expression.resolve(context);\n  if (typeof val === 'undefined') return;\n  return [val];\n}\n\nfunction concat(a, b) {\n  if (!a) return b;\n  if (!b) return a;\n  return a.concat(b);\n}\n","// `-` and `+` can be either unary or binary, so all unary operators are\n// postfixed with `U` to differentiate\n\nexports.get = {\n  // Unary operators\n  '!U': function(value) {\n    return !value;\n  }\n, '-U': function(value) {\n    return -value;\n  }\n, '+U': function(value) {\n    return +value;\n  }\n, '~U': function(value) {\n    return ~value;\n  }\n, 'typeofU': function(value) {\n    return typeof value;\n  }\n  // Binary operators\n, '||': function(left, right) {\n    return left || right;\n  }\n, '&&': function(left, right) {\n    return left && right;\n  }\n, '|': function(left, right) {\n    return left | right;\n  }\n, '^': function(left, right) {\n    return left ^ right;\n  }\n, '&': function(left, right) {\n    return left & right;\n  }\n, '==': function(left, right) {\n    return left == right; // jshint ignore:line\n  }\n, '!=': function(left, right) {\n    return left != right; // jshint ignore:line\n  }\n, '===': function(left, right) {\n    return left === right;\n  }\n, '!==': function(left, right) {\n    return left !== right;\n  }\n, '<': function(left, right) {\n    return left < right;\n  }\n, '>': function(left, right) {\n    return left > right;\n  }\n, '<=': function(left, right) {\n    return left <= right;\n  }\n, '>=': function(left, right) {\n    return left >= right;\n  }\n, 'instanceof': function(left, right) {\n    return left instanceof right;\n  }\n, 'in': function(left, right) {\n    return left in right;\n  }\n, '<<': function(left, right) {\n    return left << right;\n  }\n, '>>': function(left, right) {\n    return left >> right;\n  }\n, '>>>': function(left, right) {\n    return left >>> right;\n  }\n, '+': function(left, right) {\n    return left + right;\n  }\n, '-': function(left, right) {\n    return left - right;\n  }\n, '*': function(left, right) {\n    return left * right;\n  }\n, '/': function(left, right) {\n    return left / right;\n  }\n, '%': function(left, right) {\n    return left % right;\n  }\n  // Conditional operator\n, '?': function(test, consequent, alternate) {\n    return (test) ? consequent : alternate;\n  }\n, // Sequence\n  ',': function() {\n    return arguments[arguments.length - 1];\n  }\n  // Array literal\n, '[]': function() {\n    return Array.prototype.slice.call(arguments);\n  }\n  // Object literal\n, '{}': function() {\n    var value = {};\n    for (var i = 0, len = arguments.length; i < len; i += 2) {\n      var key = arguments[i];\n      value[key] = arguments[i + 1];\n    }\n    return value;\n  }\n};\n\nexports.set = {\n  // Unary operators\n  '!U': function(value) {\n    return [!value];\n  }\n, '-U': function(value) {\n    return [-value];\n  }\n  // Binary operators\n, '==': function(value, left, right) {\n    if (value) return [right];\n  }\n, '===': function(value, left, right) {\n    if (value) return [right];\n  }\n, 'in': function(value, left, right) {\n    right[left] = true;\n    return {1: right};\n  }\n, '+': function(value, left, right) {\n    return [value - right];\n  }\n, '-': function(value, left, right) {\n    return [value + right];\n  }\n, '*': function(value, left, right) {\n    return [value / right];\n  }\n, '/': function(value, left, right) {\n    return [value * right];\n  }\n};\n","var saddle = require('saddle');\nvar serializeObject = require('serialize-object');\n\n(function() {\n  for (var key in saddle) {\n    exports[key] = saddle[key];\n  }\n})();\n\nexports.Marker = Marker;\nexports.View = View;\nexports.ViewInstance = ViewInstance;\nexports.DynamicViewInstance = DynamicViewInstance;\nexports.ParentWrapper = ParentWrapper;\n\nexports.Views = Views;\n\nexports.MarkupHook = MarkupHook;\nexports.ElementOn = ElementOn;\nexports.ComponentOn = ComponentOn;\nexports.AsProperty = AsProperty;\nexports.AsObject = AsObject;\nexports.AsObjectComponent = AsObjectComponent;\nexports.AsArray = AsArray;\nexports.AsArrayComponent = AsArrayComponent;\n\nexports.emptyTemplate = new saddle.Template([]);\n\n// Add ::isUnbound to Template && Binding\nsaddle.Template.prototype.isUnbound = function(context) {\n  return context.unbound;\n};\nsaddle.Binding.prototype.isUnbound = function() {\n  return this.template.expression.isUnbound(this.context);\n};\n\n// Add Template::resolve\nsaddle.Template.prototype.resolve = function() {};\n\n// The Template::dependencies method is specific to how Derby bindings work,\n// so extend all of the Saddle Template types here\nsaddle.Template.prototype.dependencies = function(context) {\n  return getArrayDependencies(this.content, context);\n};\nsaddle.Doctype.prototype.dependencies = function() {};\nsaddle.Text.prototype.dependencies = function() {};\nsaddle.DynamicText.prototype.dependencies = function(context) {\n  return getDependencies(this.expression, context);\n};\nsaddle.Comment.prototype.dependencies = function() {};\nsaddle.DynamicComment.prototype.dependencies = function(context) {\n  return getDependencies(this.expression, context);\n};\nsaddle.Element.prototype.dependencies = function(context) {\n  var items = getMapDependencies(this.attributes, context);\n  return getArrayDependencies(this.content, context, items);\n};\nsaddle.Block.prototype.dependencies = function(context) {\n  var items = getDependencies(this.expression, context);\n  return getArrayDependencies(this.content, context, items);\n};\nsaddle.ConditionalBlock.prototype.dependencies = function(context) {\n  var items = getArrayDependencies(this.expressions, context);\n  return getArrayOfArrayDependencies(this.contents, context, items);\n};\nsaddle.EachBlock.prototype.dependencies = function(context) {\n  var items = getDependencies(this.expression, context);\n  items = getArrayDependencies(this.content, context, items);\n  return getArrayDependencies(this.elseContent, context, items);\n};\nsaddle.Attribute.prototype.dependencies = function() {};\nsaddle.DynamicAttribute.prototype.dependencies = function(context) {\n  return getDependencies(this.expression, context);\n};\n\nfunction getArrayOfArrayDependencies(expressions, context, items) {\n  if (!expressions) return items;\n  for (var i = 0, len = expressions.length; i < len; i++) {\n    items = getArrayDependencies(expressions[i], context, items);\n  }\n  return items;\n}\nfunction getArrayDependencies(expressions, context, items) {\n  if (!expressions) return items;\n  for (var i = 0, len = expressions.length; i < len; i++) {\n    items = getDependencies(expressions[i], context, items);\n  }\n  return items;\n}\nfunction getMapDependencies(expressions, context, items) {\n  if (!expressions) return items;\n  for (var key in expressions) {\n    items = getDependencies(expressions[key], context, items);\n  }\n  return items;\n}\nfunction getDependencies(expression, context, items) {\n  var dependencies = expression && expression.dependencies(context);\n  if (!dependencies) return items;\n  for (var i = 0, len = dependencies.length; i < len; i++) {\n    items || (items = []);\n    items.push(dependencies[i]);\n  }\n  return items;\n}\n\nvar markerHooks = [{\n  emit: function(context, node) {\n    node.$component = context.controller;\n    context.controller.markerNode = node;\n  }\n}];\nfunction Marker(data) {\n  saddle.Comment.call(this, data, markerHooks);\n}\nMarker.prototype = Object.create(saddle.Comment.prototype);\nMarker.prototype.type = 'Marker';\nMarker.prototype.serialize = function() {\n  return serializeObject.instance(this, this.data);\n};\nMarker.prototype.get = function() {\n  return '';\n};\n\nfunction ViewAttributesMap(source) {\n  var items = source.split(/\\s+/);\n  for (var i = 0, len = items.length; i < len; i++) {\n    this[items[i]] = true;\n  }\n}\nfunction ViewArraysMap(source) {\n  var items = source.split(/\\s+/);\n  for (var i = 0, len = items.length; i < len; i++) {\n    var item = items[i].split('/');\n    this[item[0]] = item[1] || item[0];\n  }\n}\nfunction View(views, name, source, options) {\n  this.views = views;\n  this.name = name;\n  this.source = source;\n  this.options = options;\n\n  var nameSegments = (this.name || '').split(':');\n  var lastSegment = nameSegments.pop();\n  this.namespace = nameSegments.join(':');\n  this.registeredName = (lastSegment === 'index') ? this.namespace : this.name;\n\n  this.attributesMap = options && options.attributes &&\n    new ViewAttributesMap(options.attributes);\n  this.arraysMap = options && options.arrays &&\n    new ViewArraysMap(options.arrays);\n  // The empty string is considered true for easier HTML attribute parsing\n  this.unminified = options && (options.unminified || options.unminified === '');\n  this.string = options && (options.string || options.string === '');\n  this.literal = options && (options.literal || options.literal === '');\n  this.template = null;\n  this.componentFactory = null;\n}\nView.prototype = Object.create(saddle.Template.prototype);\nView.prototype.type = 'View';\nView.prototype.serialize = function() {\n  return null;\n};\nView.prototype._isComponent = function(context) {\n  if (!this.componentFactory) return false;\n  if (context.attributes && context.attributes.extend) return false;\n  return true;\n};\nView.prototype._initComponent = function(context) {\n  return (this._isComponent(context)) ?\n    this.componentFactory.init(context) : context;\n};\nView.prototype._queueCreate = function(context, viewContext) {\n  if (this._isComponent(context)) {\n    var componentFactory = this.componentFactory;\n    context.queue(function queuedCreate() {\n      componentFactory.create(viewContext);\n    });\n\n    if (!context.hooks) return;\n    context.queue(function queuedComponentHooks() {\n      // Kick off hooks if view instance specified `on` or `as` attributes\n      for (var i = 0, len = context.hooks.length; i < len; i++) {\n        context.hooks[i].emit(context, viewContext.controller);\n      }\n    });\n  }\n};\nView.prototype.get = function(context, unescaped) {\n  var viewContext = this._initComponent(context);\n  var template = this.template || this.parse();\n  return template.get(viewContext, unescaped);\n};\nView.prototype.getFragment = function(context, binding) {\n  var viewContext = this._initComponent(context);\n  var template = this.template || this.parse();\n  var fragment = template.getFragment(viewContext, binding);\n  this._queueCreate(context, viewContext);\n  return fragment;\n};\nView.prototype.appendTo = function(parent, context) {\n  var viewContext = this._initComponent(context);\n  var template = this.template || this.parse();\n  template.appendTo(parent, viewContext);\n  this._queueCreate(context, viewContext);\n};\nView.prototype.attachTo = function(parent, node, context) {\n  var viewContext = this._initComponent(context);\n  var template = this.template || this.parse();\n  var node = template.attachTo(parent, node, viewContext);\n  this._queueCreate(context, viewContext);\n  return node;\n};\nView.prototype.dependencies = function(context) {\n  var template = this.template || this.parse();\n  return template.dependencies(context);\n};\nView.prototype.parse = function() {\n  this._parse();\n  if (this.componentFactory) {\n    var marker = new Marker(this.name);\n    this.template.content.unshift(marker);\n  }\n  return this.template;\n};\n// View.prototype._parse is defined in parsing.js, so that it doesn't have to\n// be included in the client if templates are all parsed server-side\nView.prototype._parse = function() {\n  throw new Error('View parsing not available');\n};\n\nfunction ViewInstance(name, attributes, hooks, initHooks) {\n  this.name = name;\n  this.attributes = attributes;\n  this.hooks = hooks;\n  this.initHooks = initHooks;\n  this.view = null;\n}\nViewInstance.prototype = Object.create(saddle.Template.prototype);\nViewInstance.prototype.type = 'ViewInstance';\nViewInstance.prototype.serialize = function() {\n  return serializeObject.instance(this, this.name, this.attributes, this.hooks, this.initHooks);\n};\nViewInstance.prototype.get = function(context, unescaped) {\n  var view = this._find(context);\n  var viewContext = context.viewChild(view, this.attributes, this.hooks, this.initHooks);\n  return view.get(viewContext, unescaped);\n};\nViewInstance.prototype.getFragment = function(context, binding) {\n  var view = this._find(context);\n  var viewContext = context.viewChild(view, this.attributes, this.hooks, this.initHooks);\n  return view.getFragment(viewContext, binding);\n};\nViewInstance.prototype.appendTo = function(parent, context) {\n  var view = this._find(context);\n  var viewContext = context.viewChild(view, this.attributes, this.hooks, this.initHooks);\n  view.appendTo(parent, viewContext);\n};\nViewInstance.prototype.attachTo = function(parent, node, context) {\n  var view = this._find(context);\n  var viewContext = context.viewChild(view, this.attributes, this.hooks, this.initHooks);\n  return view.attachTo(parent, node, viewContext);\n};\nViewInstance.prototype.dependencies = function(context) {\n  var view = this._find(context);\n  var viewContext = context.viewChild(view, this.attributes, this.hooks, this.initHooks);\n  return view.dependencies(viewContext);\n};\nViewInstance.prototype._find = function(context) {\n  if (this.view) return this.view;\n  var contextView = context.getView();\n  var namespace = contextView && contextView.namespace;\n  this.view = context.meta.views.find(this.name, namespace);\n  if (!this.view) {\n    var message = context.meta.views.findErrorMessage(this.name, contextView);\n    throw new Error(message);\n  }\n  return this.view;\n};\n\nfunction DynamicViewInstance(nameExpression, attributes, hooks, initHooks) {\n  this.nameExpression = nameExpression;\n  this.attributes = attributes;\n  this.hooks = hooks;\n  this.initHooks = initHooks;\n}\nDynamicViewInstance.prototype = Object.create(ViewInstance.prototype);\nDynamicViewInstance.prototype.type = 'DynamicViewInstance';\nDynamicViewInstance.prototype.serialize = function() {\n  return serializeObject.instance(this, this.nameExpression, this.attributes, this.hooks, this.initHooks);\n};\nDynamicViewInstance.prototype._find = function(context) {\n  var name = this.nameExpression.get(context);\n  var contextView = context.getView();\n  var namespace = contextView && contextView.namespace;\n  var view = name && context.meta.views.find(name, namespace);\n  return view || exports.emptyTemplate;\n};\n\nfunction ParentWrapper(template, expression) {\n  this.template = template;\n  this.expression = expression;\n}\nParentWrapper.prototype = Object.create(saddle.Template.prototype);\nParentWrapper.prototype.type = 'ParentWrapper';\nParentWrapper.prototype.serialize = function() {\n  return serializeObject.instance(this, this.template, this.expression);\n};\nParentWrapper.prototype.get = function(context, unescaped) {\n  return (this.expression || this.template).get(context.forViewParent(), unescaped);\n};\nParentWrapper.prototype.getFragment = function(context, binding) {\n  return this.template.getFragment(context.forViewParent(), binding);\n};\nParentWrapper.prototype.appendTo = function(parent, context) {\n  this.template.appendTo(parent, context.forViewParent());\n};\nParentWrapper.prototype.attachTo = function(parent, node, context) {\n  return this.template.attachTo(parent, node, context.forViewParent());\n};\nParentWrapper.prototype.resolve = function(context) {\n  return this.expression && this.expression.resolve(context.forViewParent());\n};\nParentWrapper.prototype.dependencies = function(context, forInnerPath) {\n  return (this.expression || this.template).dependencies(context.forViewParent(), forInnerPath);\n};\n\nfunction ViewsMap() {}\nfunction Views() {\n  this.nameMap = new ViewsMap();\n  this.tagMap = new ViewsMap();\n  // TODO: elementMap is deprecated and should be removed with Derby 0.6.0\n  this.elementMap = this.tagMap;\n}\nViews.prototype.find = function(name, namespace) {\n  var map = this.nameMap;\n\n  // Exact match lookup\n  var exactName = (namespace) ? namespace + ':' + name : name;\n  var match = map[exactName];\n  if (match) return match;\n\n  // Relative lookup\n  var segments = name.split(':');\n  var segmentsDepth = segments.length;\n  if (namespace) segments = namespace.split(':').concat(segments);\n  // Iterate through segments, leaving the `segmentsDepth` segments and\n  // removing the second to `segmentsDepth` segment to traverse up the\n  // namespaces. Decrease `segmentsDepth` if not found and repeat again.\n  while (segmentsDepth > 0) {\n    var testSegments = segments.slice();\n    while (testSegments.length > segmentsDepth) {\n      testSegments.splice(-1 - segmentsDepth, 1);\n      var testName = testSegments.join(':');\n      var match = map[testName];\n      if (match) return match;\n    }\n    segmentsDepth--;\n  }\n};\nViews.prototype.register = function(name, source, options) {\n  var mapName = name.replace(/:index$/, '');\n  var view = this.nameMap[mapName];\n  if (view) {\n    // Recreate the view if it already exists. We re-apply the constructor\n    // instead of creating a new view object so that references to object\n    // can be cached after finding the first time\n    var componentFactory = view.componentFactory;\n    View.call(view, this, name, source, options);\n    view.componentFactory = componentFactory;\n  } else {\n    view = new View(this, name, source, options);\n  }\n  this.nameMap[mapName] = view;\n  // TODO: element is deprecated and should be removed with Derby 0.6.0\n  var tagName = options && (options.tag || options.element);\n  if (tagName) this.tagMap[tagName] = view;\n  return view;\n};\nViews.prototype.serialize = function(options) {\n  var out = 'function(derbyTemplates, views) {' +\n    'var expressions = derbyTemplates.expressions;' +\n    'var templates = derbyTemplates.templates;';\n  var forServer = options && options.server;\n  var minify = options && options.minify;\n  for (var name in this.nameMap) {\n    var view = this.nameMap[name];\n    var template = view.template || view.parse();\n    if (!forServer && view.options) {\n      // Do not serialize views with the `serverOnly` option, except when\n      // serializing for a server script\n      if (view.options.serverOnly) continue;\n      // For views with the `server` option, serialize them with a blank\n      // template body. This allows them to be used from other views on the\n      // browser, but they will output nothing on the browser\n      if (view.options.server) template = exports.emptyTemplate;\n    }\n    out += 'views.register(' + serializeObject.args([\n      view.name\n    , (minify) ? null : view.source\n    , (hasKeys(view.options)) ? view.options : null\n    ]) + ').parse = function() {return this.template = ' + template.serialize() + '};';\n  }\n  return out + '}';\n};\nViews.prototype.findErrorMessage = function(name, contextView) {\n  var names = Object.keys(this.nameMap);\n  var message = 'Cannot find view \"' + name + '\" in' +\n    [''].concat(names).join('\\n  ') + '\\n';\n  if (contextView) {\n    message += '\\nWithin template \"' + contextView.name + '\":\\n' + contextView.source;\n  }\n  return message;\n};\n\n\nfunction MarkupHook() {}\nMarkupHook.prototype.module = saddle.Template.prototype.module;\n\nfunction ElementOn(name, expression) {\n  this.name = name;\n  this.expression = expression;\n}\nElementOn.prototype = Object.create(MarkupHook.prototype);\nElementOn.prototype.type = 'ElementOn';\nElementOn.prototype.serialize = function() {\n  return serializeObject.instance(this, this.name, this.expression);\n};\nElementOn.prototype.emit = function(context, element) {\n  var elementOn = this;\n  if (this.name === 'create') {\n    this.apply(context, element);\n\n  } else if (this.name === 'destroy') {\n    var destroyListeners = element.$destroyListeners || (element.$destroyListeners = []);\n    destroyListeners.push(function elementOnDestroy() {\n      elementOn.apply(context, element);\n    });\n\n  } else {\n    element.addEventListener(this.name, function elementOnListener(event) {\n      return elementOn.apply(context, element, event);\n    }, false);\n  }\n};\nElementOn.prototype.apply = function(context, element, event) {\n  var modelData = context.controller.model.data;\n  modelData.$event = event;\n  modelData.$element = element;\n  var out = this.expression.apply(context);\n  delete modelData.$event;\n  delete modelData.$element;\n  return out;\n};\n\nfunction ComponentOn(name, expression) {\n  this.name = name;\n  this.expression = expression;\n}\nComponentOn.prototype = Object.create(MarkupHook.prototype);\nComponentOn.prototype.type = 'ComponentOn';\nComponentOn.prototype.serialize = function() {\n  return serializeObject.instance(this, this.name, this.expression);\n};\nComponentOn.prototype.emit = function(context, component) {\n  var expression = this.expression;\n  component.on(this.name, function componentOnListener() {\n    var args = arguments.length && Array.prototype.slice.call(arguments);\n    return expression.apply(context, args);\n  });\n};\n\nfunction AsProperty(segments) {\n  this.segments = segments;\n  this.lastSegment = segments.pop();\n}\nAsProperty.prototype = Object.create(MarkupHook.prototype);\nAsProperty.prototype.type = 'AsProperty';\nAsProperty.prototype.serialize = function() {\n  var segments = this.segments.concat(this.lastSegment);\n  return serializeObject.instance(this, segments);\n};\nAsProperty.prototype.emit = function(context, target) {\n  var node = traverseAndCreate(context.controller, this.segments);\n  node[this.lastSegment] = target;\n};\n\nfunction AsObject(segments, keyExpression) {\n  AsProperty.call(this, segments);\n  this.keyExpression = keyExpression;\n}\nAsObject.prototype = Object.create(AsProperty.prototype);\nAsObject.prototype.type = 'AsObject';\nAsObject.prototype.serialize = function() {\n  var segments = this.segments.concat(this.lastSegment);\n  return serializeObject.instance(this, segments, this.keyExpression);\n};\nAsObject.prototype.emit = function(context, target) {\n  var node = traverseAndCreate(context.controller, this.segments);\n  var object = node[this.lastSegment] || (node[this.lastSegment] = {});\n  var key = this.keyExpression.get(context);\n  object[key] = target;\n  this.addListeners(target, object, key);\n};\nAsObject.prototype.addListeners = function(target, object, key) {\n  this.addDestroyListener(target, function asObjectDestroy() {\n    delete object[key];\n  });\n};\nAsObject.prototype.addDestroyListener = function(target, listener) {\n  var listeners = target.$destroyListeners || (target.$destroyListeners = []);\n  listeners.push(listener);\n};\n\nfunction AsObjectComponent(segments, keyExpression) {\n  AsObject.call(this, segments, keyExpression);\n}\nAsObjectComponent.prototype = Object.create(AsObject.prototype);\nAsObjectComponent.prototype.type = 'AsObjectComponent';\nAsObjectComponent.prototype.addDestroyListener = function(target, listener) {\n  target.on('destroy', listener);\n};\n\nfunction AsArray(segments) {\n  AsProperty.call(this, segments);\n}\nAsArray.prototype = Object.create(AsProperty.prototype);\nAsArray.prototype.type = 'AsArray';\nAsArray.prototype.emit = function(context, target) {\n  var node = traverseAndCreate(context.controller, this.segments);\n  var array = node[this.lastSegment] || (node[this.lastSegment] = []);\n\n  // Iterate backwards, since rendering will usually append\n  for (var i = array.length; i--;) {\n    var item = array[i];\n    // Don't add an item if already in the array\n    if (item === target) return;\n    var mask = this.comparePosition(target, item);\n    // If the emitted target is after the current item in the document,\n    // insert it next in the array\n    // Node.DOCUMENT_POSITION_FOLLOWING = 4\n    if (mask & 4) {\n      array.splice(i + 1, 0, target);\n      this.addListeners(target, array);\n      return;\n    }\n  }\n  // Add to the beginning if before all items\n  array.unshift(target);\n  this.addListeners(target, array);\n};\nAsArray.prototype.addListeners = function(target, array) {\n  this.addDestroyListener(target, function asArrayDestroy() {\n    var index = array.indexOf(target);\n    if (index !== -1) array.splice(index, 1);\n  });\n};\nAsArray.prototype.comparePosition = function(target, item) {\n  return item.compareDocumentPosition(target);\n};\nAsArray.prototype.addDestroyListener = AsObject.prototype.addDestroyListener;\n\nfunction AsArrayComponent(segments) {\n  AsArray.call(this, segments);\n}\nAsArrayComponent.prototype = Object.create(AsArray.prototype);\nAsArrayComponent.prototype.type = 'AsArrayComponent';\nAsArrayComponent.prototype.comparePosition = function(target, item) {\n  return item.markerNode.compareDocumentPosition(target.markerNode);\n};\nAsArrayComponent.prototype.addDestroyListener = AsObjectComponent.prototype.addDestroyListener;\n\nfunction traverseAndCreate(node, segments) {\n  var len = segments.length;\n  if (!len) return node;\n  for (var i = 0; i < len; i++) {\n    var segment = segments[i];\n    node = node[segment] || (node[segment] = {});\n  }\n  return node;\n}\n\nfunction hasKeys(value) {\n  if (!value) return false;\n  for (var key in value) {\n    return true;\n  }\n  return false;\n}\n","/*\n * App.js\n *\n * Provides the glue between views, controllers, and routes for an\n * application's functionality. Apps are responsible for creating pages.\n *\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar tracks = require('tracks');\nvar util = require('racer/lib/util');\nvar derbyTemplates = require('derby-templates');\nvar documentListeners = require('./documentListeners');\nvar Page = require('./Page');\nvar serializedViews = require('./_views');\n\nmodule.exports = App;\n\nfunction App(derby, name, filename, options) {\n  EventEmitter.call(this);\n  this.derby = derby;\n  this.name = name;\n  this.filename = filename;\n  this.scriptHash = '{{DERBY_SCRIPT_HASH}}';\n  this.bundledAt = '{{DERBY_BUNDLED_AT}}';\n  this.Page = createAppPage();\n  this.proto = this.Page.prototype;\n  this.views = new derbyTemplates.templates.Views();\n  this.tracksRoutes = tracks.setup(this);\n  this.model = null;\n  this.page = null;\n  this._init(options);\n}\n\nfunction createAppPage() {\n  // Inherit from Page so that we can add controller functions as prototype\n  // methods on this app's pages\n  function AppPage() {\n    Page.apply(this, arguments);\n  }\n  AppPage.prototype = Object.create(Page.prototype);\n  return AppPage;\n}\n\nutil.mergeInto(App.prototype, EventEmitter.prototype);\n\n// Overriden on server\nApp.prototype._init = function() {\n  this._waitForAttach = true;\n  this._cancelAttach = false;\n  this.model = new this.derby.Model();\n  serializedViews(derbyTemplates, this.views);\n  // Must init async so that app.on('model') listeners can be added.\n  // Must also wait for content ready so that bundle is fully downloaded.\n  this._contentReady();\n};\nApp.prototype._finishInit = function() {\n  var script = this._getScript();\n  var data = JSON.parse(script.nextSibling.innerHTML);\n  this.model.createConnection(data);\n  this.emit('model', this.model);\n  util.isProduction = data.nodeEnv === 'production';\n  if (!util.isProduction) this._autoRefresh();\n  this.model.unbundle(data);\n  var page = this.createPage();\n  page.params = this.model.get('$render.params');\n  this.emit('ready', page);\n  this._waitForAttach = false;\n  // Instead of attaching, do a route and render if a link was clicked before\n  // the page finished attaching\n  if (this._cancelAttach) {\n    this.history.refresh();\n    return;\n  }\n  // Since an attachment failure is *fatal* and could happen as a result of a\n  // browser extension like AdBlock, an invalid template, or a small bug in\n  // Derby or Saddle, re-render from scratch on production failures\n  if (util.isProduction) {\n    try {\n      page.attach();\n    } catch (err) {\n      this.history.refresh();\n      console.warn('attachment error', err.stack);\n    }\n  } else {\n    page.attach();\n  }\n  this.emit('load', page);\n};\n// Modified from: https://github.com/addyosmani/jquery.parts/blob/master/jquery.documentReady.js\nApp.prototype._contentReady = function() {\n  // Is the DOM ready to be used? Set to true once it occurs.\n  var isReady = false;\n  var app = this;\n\n  // The ready event handler\n  function onDOMContentLoaded() {\n    if (document.addEventListener) {\n      document.removeEventListener('DOMContentLoaded', onDOMContentLoaded, false);\n    } else {\n      // we're here because readyState !== 'loading' in oldIE\n      // which is good enough for us to call the dom ready!\n      document.detachEvent('onreadystatechange', onDOMContentLoaded);\n    }\n    onDOMReady();\n  }\n\n  // Handle when the DOM is ready\n  function onDOMReady() {\n    // Make sure that the DOM is not already loaded\n    if (isReady) return;\n    // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).\n    if (!document.body) return setTimeout(onDOMReady, 0);\n    // Remember that the DOM is ready\n    isReady = true;\n    // Make sure this is always async and then finishin init\n    setTimeout(function() {\n      app._finishInit();\n    }, 0);\n  }\n\n  // The DOM ready check for Internet Explorer\n  function doScrollCheck() {\n    if (isReady) return;\n    try {\n      // If IE is used, use the trick by Diego Perini\n      // http://javascript.nwbox.com/IEContentLoaded/\n      document.documentElement.doScroll('left');\n    } catch (err) {\n      setTimeout(doScrollCheck, 0);\n      return;\n    }\n    // and execute any waiting functions\n    onDOMReady();\n  }\n\n  // Catch cases where called after the browser event has already occurred.\n  if (document.readyState !== 'loading') return onDOMReady();\n\n  // Mozilla, Opera and webkit nightlies currently support this event\n  if (document.addEventListener) {\n    // Use the handy event callback\n    document.addEventListener('DOMContentLoaded', onDOMContentLoaded, false);\n    // A fallback to window.onload, that will always work\n    window.addEventListener('load', onDOMContentLoaded, false);\n    // If IE event model is used\n  } else if (document.attachEvent) {\n    // ensure firing before onload,\n    // maybe late but safe also for iframes\n    document.attachEvent('onreadystatechange', onDOMContentLoaded);\n    // A fallback to window.onload, that will always work\n    window.attachEvent('onload', onDOMContentLoaded);\n    // If IE and not a frame\n    // continually check to see if the document is ready\n    var toplevel;\n    try {\n      toplevel = window.frameElement == null;\n    } catch (err) {}\n    if (document.documentElement.doScroll && toplevel) {\n      doScrollCheck();\n    }\n  }\n};\n\nApp.prototype._getScript = function() {\n  return document.querySelector('script[data-derby-app]');\n};\n\nApp.prototype.use = util.use;\nApp.prototype.serverUse = util.serverUse;\n\nApp.prototype.loadViews = function() {};\n\nApp.prototype.loadStyles = function() {};\n\nApp.prototype.createPage = function() {\n  if (this.page) {\n    this.emit('destroyPage', this.page);\n    this.page.destroy();\n  }\n  var page = new this.Page(this, this.model);\n  this.page = page;\n  return page;\n};\n\nApp.prototype.onRoute = function(callback, page, next, done) {\n  if (this._waitForAttach) {\n    // Cancel any routing before the initial page attachment. Instead, do a\n    // render once derby is ready\n    this._cancelAttach = true;\n    return;\n  }\n  this.emit('route', page);\n  // HACK: To update render in transitional routes\n  page.model.set('$render.params', page.params);\n  page.model.set('$render.url', page.params.url);\n  page.model.set('$render.query', page.params.query);\n  // If transitional\n  if (done) {\n    var app = this;\n    var _done = function() {\n      app.emit('routeDone', page, 'transition');\n      done();\n    };\n    callback.call(page, page, page.model, page.params, next, _done);\n    return;\n  }\n  callback.call(page, page, page.model, page.params, next);\n};\n\nApp.prototype._autoRefresh = function() {\n  var app = this;\n  var connection = this.model.connection;\n  connection.on('connected', function() {\n    connection.send({\n      derby: 'app',\n      name: app.name,\n      hash: app.scriptHash\n    });\n  });\n  connection.on('receive', function(request) {\n    if (request.data.derby) {\n      var message = request.data;\n      request.data = null;\n      app._handleMessage(message.derby, message);\n    }\n  });\n};\n\nApp.prototype._handleMessage = function(action, message) {\n  if (action === 'refreshViews') {\n    var fn = new Function('return ' + message.views)(); // jshint ignore:line\n    fn(derbyTemplates, this.views);\n    var ns = this.model.get('$render.ns');\n    this.page.render(ns);\n\n  } else if (action === 'refreshStyles') {\n    var styleElement = document.querySelector('style[data-filename=\"' +\n      message.filename + '\"]');\n    if (styleElement) styleElement.innerHTML = message.css;\n\n  } else if (action === 'reload') {\n    this.model.whenNothingPending(function() {\n      window.location = window.location;\n    });\n  }\n};\n\nutil.serverRequire(module, './App.server');\n","var EventEmitter = require('events').EventEmitter;\nvar util = require('racer/lib/util');\nvar Dom = require('./Dom');\n\nmodule.exports = Controller;\n\nfunction Controller(app, page, model) {\n  EventEmitter.call(this);\n  this.dom = new Dom(this);\n  this.app = app;\n  this.page = page;\n  this.model = model;\n  model.data.$controller = this;\n}\n\nutil.mergeInto(Controller.prototype, EventEmitter.prototype);\n\nController.prototype.emitCancellable = function() {\n  var cancelled = false;\n  function cancel() {\n    cancelled = true;\n  }\n\n  var args = Array.prototype.slice.call(arguments);\n  args.push(cancel);\n  this.emit.apply(this, args);\n\n  return cancelled;\n};\n\nController.prototype.emitDelayable = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var callback = args.pop();\n\n  var delayed = false;\n  function delay() {\n    delayed = true;\n    return callback;\n  }\n\n  args.push(delay);\n  this.emit.apply(this, args);\n  if (!delayed) callback();\n\n  return delayed;\n};\n","/*\n * Derby.js\n * Meant to be the entry point for the framework.\n *\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar racer = require('racer');\nvar App = require('./App');\nvar Page = require('./Page');\nvar components = require('./components');\n\nmodule.exports = Derby;\n\nfunction Derby() {}\nDerby.prototype = racer;\n\nDerby.prototype.App = App;\nDerby.prototype.Page = Page;\nDerby.prototype.Component = components.Component;\n\nDerby.prototype.createApp = function(name, filename, options) {\n  return new App(this, name, filename, options);\n};\n\nif (!racer.util.isServer) {\n  require('./documentListeners').add(document);\n}\n\nracer.util.serverRequire(module, './Derby.server');\n","module.exports = Dom;\n\nfunction Dom(controller) {\n  this.controller = controller;\n  this._listeners = null;\n}\n\nDom.prototype._initListeners = function() {\n  var dom = this;\n  this.controller.on('destroy', function domOnDestroy() {\n    var listeners = dom._listeners;\n    if (!listeners) return;\n    for (var i = listeners.length; i--;) {\n      listeners[i].remove();\n    }\n    dom._listeners = null;\n  });\n  return this._listeners = [];\n};\n\nDom.prototype._listenerIndex = function(domListener) {\n  var listeners = this._listeners;\n  if (!listeners) return -1;\n  for (var i = listeners.length; i--;) {\n    if (listeners[i].equals(domListener)) return i;\n  }\n  return -1;\n};\n\nDom.prototype.addListener = function(type, target, listener, useCapture) {\n  if (typeof target === 'function') {\n    useCapture = listener;\n    listener = target;\n    target = document;\n  }\n  var domListener =\n    (type === 'destroy') ? new DestroyListener(target, listener) :\n    new DomListener(type, target, listener, useCapture);\n  if (-1 === this._listenerIndex(domListener)) {\n    var listeners = this._listeners || this._initListeners();\n    listeners.push(domListener);\n  }\n  domListener.add();\n};\nDom.prototype.on = Dom.prototype.addListener;\n\nDom.prototype.once = function(type, target, listener, useCapture) {\n  if (typeof target === 'function') {\n    useCapture = listener;\n    listener = target;\n    target = document;\n  }\n  this.addListener(type, target, wrappedListener, useCapture);\n  var dom = this;\n  function wrappedListener() {\n    dom.removeListener(type, target, wrappedListener, useCapture);\n    return listener.apply(this, arguments);\n  }\n};\n\nDom.prototype.removeListener = function(type, target, listener, useCapture) {\n  if (typeof target === 'function') {\n    useCapture = listener;\n    listener = target;\n    target = document;\n  }\n  var domListener = new DomListener(type, target, listener, useCapture);\n  domListener.remove();\n  var i = this._listenerIndex(domListener);\n  if (i > -1) this._listeners.splice(i, 1);\n};\n\nfunction DomListener(type, target, listener, useCapture) {\n  this.type = type;\n  this.target = target;\n  this.listener = listener;\n  this.useCapture = !!useCapture;\n}\nDomListener.prototype.equals = function(domListener) {\n  return this.listener === domListener.listener &&\n    this.target === domListener.target &&\n    this.type === domListener.type &&\n    this.useCapture === domListener.useCapture;\n};\nDomListener.prototype.add = function() {\n  this.target.addEventListener(this.type, this.listener, this.useCapture);\n};\nDomListener.prototype.remove = function() {\n  this.target.removeEventListener(this.type, this.listener, this.useCapture);\n};\n\nfunction DestroyListener(target, listener) {\n  DomListener.call(this, 'destroy', target, listener);\n}\nDestroyListener.prototype = new DomListener();\nDestroyListener.prototype.add = function() {\n  var listeners = this.target.$destroyListeners || (this.target.$destroyListeners = []);\n  if (listeners.indexOf(this.listener) === -1) {\n    listeners.push(this.listener);\n  }\n};\nDestroyListener.prototype.remove = function() {\n  var listeners = this.target.$destroyListeners;\n  if (!listeners) return;\n  var index = listeners.indexOf(this.listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n};\n","var derbyTemplates = require('derby-templates');\nvar contexts = derbyTemplates.contexts;\nvar expressions = derbyTemplates.expressions;\nvar templates = derbyTemplates.templates;\nvar util = require('racer/lib/util');\nvar EventModel = require('./eventmodel');\nvar textDiff = require('./textDiff');\nvar Controller = require('./Controller');\nvar documentListeners = require('./documentListeners');\n\nmodule.exports = Page;\n\nfunction Page(app, model, req, res) {\n  Controller.call(this, app, this, model);\n  this.req = req;\n  this.res = res;\n  this.params = null;\n  if (this.init) this.init(model);\n  this.context = this._createContext();\n  this._eventModel = null;\n  this._removeModelListeners = null;\n  this._components = {};\n  this._addListeners();\n}\n\nutil.mergeInto(Page.prototype, Controller.prototype);\n\nPage.prototype.$bodyClass = function(ns) {\n  if (!ns) return;\n  var classNames = [];\n  var segments = ns.split(':');\n  for (var i = 0, len = segments.length; i < len; i++) {\n    var className = segments.slice(0, i + 1).join('-');\n    classNames.push(className);\n  }\n  return classNames.join(' ');\n};\n\nPage.prototype.$preventDefault = function(e) {\n  e.preventDefault();\n};\n\nPage.prototype.$stopPropagation = function(e) {\n  e.stopPropagation();\n};\n\nPage.prototype._setRenderParams = function(ns) {\n  this.model.set('$render.ns', ns);\n  this.model.set('$render.params', this.params);\n  this.model.set('$render.url', this.params && this.params.url);\n  this.model.set('$render.query', this.params && this.params.query);\n};\n\nPage.prototype._setRenderPrefix = function(ns) {\n  var prefix = (ns) ? ns + ':' : '';\n  this.model.set('$render.prefix', prefix);\n};\n\nPage.prototype.get = function(viewName, ns, unescaped) {\n  this._setRenderPrefix(ns);\n  var view = this.getView(viewName, ns);\n  return view.get(this.context, unescaped);\n};\n\nPage.prototype.getFragment = function(viewName, ns) {\n  this._setRenderPrefix(ns);\n  var view = this.getView(viewName, ns);\n  return view.getFragment(this.context);\n};\n\nPage.prototype.getView = function(viewName, ns) {\n  return this.app.views.find(viewName, ns);\n};\n\nPage.prototype.render = function(ns) {\n  this.app.emit('render', this);\n  this.context.pause();\n  this._setRenderParams(ns);\n  var titleFragment = this.getFragment('TitleElement', ns);\n  var bodyFragment = this.getFragment('BodyElement', ns);\n  var titleElement = document.getElementsByTagName('title')[0];\n  titleElement.parentNode.replaceChild(titleFragment, titleElement);\n  document.body.parentNode.replaceChild(bodyFragment, document.body);\n  this.context.unpause();\n  if (this.create) this.create(this.model, this.dom);\n  this.app.emit('routeDone', this, 'render');\n};\n\nPage.prototype.attach = function() {\n  this.context.pause();\n  var ns = this.model.get('$render.ns');\n  var titleView = this.getView('TitleElement', ns);\n  var bodyView = this.getView('BodyElement', ns);\n  var titleElement = document.getElementsByTagName('title')[0];\n  titleView.attachTo(titleElement.parentNode, titleElement, this.context);\n  bodyView.attachTo(document.body.parentNode, document.body, this.context);\n  this.context.unpause();\n  if (this.create) this.create(this.model, this.dom);\n};\n\nPage.prototype._createContext = function() {\n  var contextMeta = new contexts.ContextMeta();\n  contextMeta.views = this.app && this.app.views;\n  var context = new contexts.Context(contextMeta, this);\n  context.expression = new expressions.PathExpression([]);\n  context.alias = '#root';\n  return context;\n};\n\nPage.prototype._addListeners = function() {\n  var eventModel = this._eventModel = new EventModel();\n  this._addModelListeners(eventModel);\n  this._addContextListeners(eventModel);\n};\n\nPage.prototype.destroy = function() {\n  this.emit('destroy');\n  this._removeModelListeners();\n  for (var id in this._components) {\n    var component = this._components[id];\n    component.destroy();\n  }\n  // Remove all data, refs, listeners, and reactive functions\n  // for the previous page\n  var silentModel = this.model.silent();\n  silentModel.destroy('_page');\n  silentModel.destroy('$components');\n  // Unfetch and unsubscribe from all queries and documents\n  silentModel.unloadAll && silentModel.unloadAll();\n};\n\nPage.prototype._addModelListeners = function(eventModel) {\n  var model = this.model;\n  if (!model) return;\n\n  var context = this.context;\n  var changeListener = model.on('change', '**', function onChange(path, value, previous, pass) {\n    var segments = util.castSegments(path.split('.'));\n    // The pass parameter is passed in for special handling of updates\n    // resulting from stringInsert or stringRemove\n    eventModel.set(segments, previous, pass);\n  });\n  var loadListener = model.on('load', '**', function onLoad(path) {\n    var segments = util.castSegments(path.split('.'));\n    eventModel.set(segments);\n  });\n  var unloadListener = model.on('unload', '**', function onUnload(path) {\n    var segments = util.castSegments(path.split('.'));\n    eventModel.set(segments);\n  });\n  var insertListener = model.on('insert', '**', function onInsert(path, index, values) {\n    var segments = util.castSegments(path.split('.'));\n    eventModel.insert(segments, index, values.length);\n  });\n  var removeListener = model.on('remove', '**', function onRemove(path, index, values) {\n    var segments = util.castSegments(path.split('.'));\n    eventModel.remove(segments, index, values.length);\n  });\n  var moveListener = model.on('move', '**', function onMove(path, from, to, howMany) {\n    var segments = util.castSegments(path.split('.'));\n    eventModel.move(segments, from, to, howMany);\n  });\n\n  this._removeModelListeners = function() {\n    model.removeListener('change', changeListener);\n    model.removeListener('load', loadListener);\n    model.removeListener('unload', unloadListener);\n    model.removeListener('insert', insertListener);\n    model.removeListener('remove', removeListener);\n    model.removeListener('move', moveListener);\n  };\n};\n\nPage.prototype._addContextListeners = function(eventModel) {\n  this.context.meta.addBinding = addBinding;\n  this.context.meta.removeBinding = removeBinding;\n  this.context.meta.removeNode = removeNode;\n  this.context.meta.addItemContext = addItemContext;\n  this.context.meta.removeItemContext = removeItemContext;\n\n  function addItemContext(context) {\n    var segments = context.expression.resolve(context);\n    eventModel.addItemContext(segments, context);\n  }\n  function removeItemContext(context) {\n    // TODO\n  }\n  function addBinding(binding) {\n    patchTextBinding(binding);\n    var expressions = binding.template.expressions;\n    if (expressions) {\n      for (var i = 0, len = expressions.length; i < len; i++) {\n        addDependencies(eventModel, expressions[i], binding);\n      }\n    } else {\n      var expression = binding.template.expression;\n      addDependencies(eventModel, expression, binding);\n    }\n  }\n  function removeBinding(binding) {\n    var bindingWrappers = binding.meta;\n    if (!bindingWrappers) return;\n    for (var i = bindingWrappers.length; i--;) {\n      eventModel.removeBinding(bindingWrappers[i]);\n    }\n  }\n  function removeNode(node) {\n    var component = node.$component;\n    if (component && !component.singleton) {\n      component.destroy();\n    }\n    var destroyListeners = node.$destroyListeners;\n    if (destroyListeners) {\n      for (var i = 0; i < destroyListeners.length; i++) {\n        destroyListeners[i]();\n      }\n    }\n  }\n};\n\nfunction addDependencies(eventModel, expression, binding) {\n  var bindingWrapper = new BindingWrapper(eventModel, expression, binding);\n  bindingWrapper.updateDependencies();\n}\n\n// The code here uses object-based set pattern where objects are keyed using\n// sequentially generated IDs.\nvar nextId = 1;\nfunction BindingWrapper(eventModel, expression, binding) {\n  this.eventModel = eventModel;\n  this.expression = expression;\n  this.binding = binding;\n  this.id = nextId++;\n  this.eventModels = null;\n  this.dependencies = null;\n  if (binding.meta) {\n    binding.meta.push(this);\n  } else {\n    binding.meta = [this];\n  }\n}\nBindingWrapper.prototype.updateDependencies = function() {\n  var dependencies = this.expression.dependencies(this.binding.context);\n  if (this.dependencies) {\n    // Do nothing if dependencies haven't changed\n    if (equalDependencies(this.dependencies, dependencies)) return;\n    // Otherwise, remove current dependencies\n    this.eventModel.removeBinding(this);\n  }\n  // Add new dependencies\n  if (!dependencies) return;\n  this.dependencies = dependencies;\n  for (var i = 0, len = dependencies.length; i < len; i++) {\n    var dependency = dependencies[i];\n    if (dependency) this.eventModel.addBinding(dependency, this);\n  }\n};\nBindingWrapper.prototype.update = function(previous, pass) {\n  this.binding.update(previous, pass);\n  this.updateDependencies();\n};\nBindingWrapper.prototype.insert = function(index, howMany) {\n  this.binding.insert(index, howMany);\n};\nBindingWrapper.prototype.remove = function(index, howMany) {\n  this.binding.remove(index, howMany);\n};\nBindingWrapper.prototype.move = function(from, to, howMany) {\n  this.binding.move(from, to, howMany);\n};\n\nfunction equalDependencies(a, b) {\n  var lenA = a ? a.length : -1;\n  var lenB = b ? b.length : -1;\n  if (lenA !== lenB) return false;\n  for (var i = 0; i < lenA; i++) {\n    var itemA = a[i];\n    var itemB = b[i];\n    var lenItemA = itemA ? itemA.length : -1;\n    var lenItemB = itemB ? itemB.length : -1;\n    if (lenItemA !== lenItemB) return false;\n    for (var j = 0; j < lenItemB; j++) {\n      if (itemA[j] !== itemB[j]) return false;\n    }\n  }\n  return true;\n}\n\nfunction patchTextBinding(binding) {\n  if (\n    binding instanceof templates.AttributeBinding &&\n    binding.name === 'value' &&\n    (binding.element.tagName === 'INPUT' || binding.element.tagName === 'TEXTAREA') &&\n    documentListeners.inputSupportsSelection(binding.element) &&\n    binding.template.expression.resolve(binding.context)\n  ) {\n    binding.update = textInputUpdate;\n  }\n}\n\nfunction textInputUpdate(previous, pass) {\n  textUpdate(this, this.element, previous, pass);\n}\nfunction textUpdate(binding, element, previous, pass) {\n  if (pass) {\n    if (pass.$event && pass.$event.target === element) {\n      return;\n    } else if (pass.$stringInsert) {\n      return textDiff.onStringInsert(\n        element,\n        previous,\n        pass.$stringInsert.index,\n        pass.$stringInsert.text\n      );\n    } else if (pass.$stringRemove) {\n      return textDiff.onStringRemove(\n        element,\n        previous,\n        pass.$stringRemove.index,\n        pass.$stringRemove.howMany\n      );\n    }\n  }\n  binding.template.update(binding.context, binding);\n}\n\nutil.serverRequire(module, './Page.server');\n","/*DERBY_SERIALIZED_VIEWS*/module.exports = function(derbyTemplates, views) {var expressions = derbyTemplates.expressions;var templates = derbyTemplates.templates;views.register('TitleElement', '<title><view is=\"{{$render.prefix}}Title\"></view></title>').parse = function() {return this.template = new templates.Template([new templates.Element('title', void 0, [new templates.Block(new templates.Template([new templates.DynamicText(new expressions.PathExpression(['$render', 'prefix'], new expressions.ExpressionMeta('$render.prefix'))), new templates.Text('Title')], '{{$render.prefix}}Title'), [new templates.DynamicViewInstance(new templates.Template([new templates.DynamicText(new expressions.PathExpression(['$render', 'prefix'], new expressions.ExpressionMeta('$render.prefix'))), new templates.Text('Title')], '{{$render.prefix}}Title'), {})])], void 0, false)])};views.register('BodyElement', '<body class=\"{{$bodyClass($render.ns)}}\"><view is=\"{{$render.prefix}}Body\"></view>').parse = function() {return this.template = new templates.Template([new templates.Element('body', {'class': new templates.DynamicAttribute(new expressions.FnExpression(['$bodyClass'], [new expressions.PathExpression(['$render', 'ns'])], void 0, new expressions.ExpressionMeta('$bodyClass($render.ns)')))}, [new templates.Block(new templates.Template([new templates.DynamicText(new expressions.PathExpression(['$render', 'prefix'], new expressions.ExpressionMeta('$render.prefix'))), new templates.Text('Body')], '{{$render.prefix}}Body'), [new templates.DynamicViewInstance(new templates.Template([new templates.DynamicText(new expressions.PathExpression(['$render', 'prefix'], new expressions.ExpressionMeta('$render.prefix'))), new templates.Text('Body')], '{{$render.prefix}}Body'), {})])], void 0, false, true)])};views.register('Title', '\\n    SBGNViz Collaborative Editor  ({{count(_page.doc.messages)}})  - {{_page.doc.users[_session.userId].name}}\\n\\n').parse = function() {return this.template = new templates.Template([new templates.Text('SBGNViz Collaborative Editor  ('), new templates.DynamicText(new expressions.FnExpression(['count'], [new expressions.PathExpression(['_page', 'doc', 'messages'])], void 0, new expressions.ExpressionMeta('count(_page.doc.messages)'))), new templates.Text(')  - '), new templates.DynamicText(new expressions.BracketsExpression(new expressions.PathExpression(['_page', 'doc', 'users']), new expressions.PathExpression(['_session', 'userId']), ['name'], new expressions.ExpressionMeta('_page.doc.users[_session.userId].name')))])};views.register('Head', '\\n\\n\\n    <!--<meta charset=\"utf-8\">-->\\n    <!--<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">-->\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n\\n\\n    <link href=\"node_modules/bootstrap/dist/css/bootstrap.css\" rel=\"stylesheet\">\\n    <!--cytoscape.js plugins -->\\n    <link href=\"node_modules/cytoscape-panzoom/cytoscape.js-panzoom.css\" rel=\"stylesheet\" type=\"text/css\" />\\n    <link href=\"node_modules/cytoscape-panzoom/font-awesome-4.0.3/css/font-awesome.css\" rel=\"stylesheet\" type=\"text/css\" />\\n    <link href=\"node_modules/qtip2/dist/jquery.qtip.css\" rel=\"stylesheet\" type=\"text/css\" />\\n    <link href=\"node_modules/cytoscape-context-menus/cytoscape-context-menus.css\" rel=\"stylesheet\" type=\"text/css\" />\\n    <!-- app\\'s style -->\\n    <link href=\"app/css/chise.css\" rel=\"stylesheet\">\\n\\n\\n').parse = function() {return this.template = new templates.Template([new templates.Element('meta', {'name': new templates.Attribute('viewport'), 'content': new templates.Attribute('width=device-width, initial-scale=1.0')}, null, void 0, false), new templates.Element('link', {'href': new templates.Attribute('node_modules/bootstrap/dist/css/bootstrap.css'), 'rel': new templates.Attribute('stylesheet')}, null, void 0, false), new templates.Element('link', {'href': new templates.Attribute('node_modules/cytoscape-panzoom/cytoscape.js-panzoom.css'), 'rel': new templates.Attribute('stylesheet'), 'type': new templates.Attribute('text/css')}, null, void 0, true), new templates.Element('link', {'href': new templates.Attribute('node_modules/cytoscape-panzoom/font-awesome-4.0.3/css/font-awesome.css'), 'rel': new templates.Attribute('stylesheet'), 'type': new templates.Attribute('text/css')}, null, void 0, true), new templates.Element('link', {'href': new templates.Attribute('node_modules/qtip2/dist/jquery.qtip.css'), 'rel': new templates.Attribute('stylesheet'), 'type': new templates.Attribute('text/css')}, null, void 0, true), new templates.Element('link', {'href': new templates.Attribute('node_modules/cytoscape-context-menus/cytoscape-context-menus.css'), 'rel': new templates.Attribute('stylesheet'), 'type': new templates.Attribute('text/css')}, null, void 0, true), new templates.Element('link', {'href': new templates.Attribute('app/css/chise.css'), 'rel': new templates.Attribute('stylesheet')}, null, void 0, false)])};views.register('Body', '\\n\\n    <script src=\"node_modules/ocanvas/build/dist/latest/ocanvas.min.js\"></script>\\n    <script src=\"app/bundle.js\"></script>\\n    <!-- libraries -->\\n    <script src=\"node_modules/qtip2/dist/jquery.qtip.js\"></script>\\n    <!--<script src=\"node_modules/bootstrap/dist/js/bootstrap.js\"></script>-->\\n\\n    <script src=\"lib/js/jquery.noty.packaged.js\"></script>\\n\\n\\n    <!---->\\n    <!--<script src=\"node_modules/ocanvas/build/dist/latest/ocanvas.min.js\"></script>-->\\n    <!--<script src=\"node_modules/jquery/dist/jquery.js\"></script>-->\\n    <!--<script src=\"node_modules/qtip2/dist/jquery.qtip.js\"></script>-->\\n\\n    <!--<script src=\"node_modules/cytoscape-qtip/cytoscape-qtip.js\"></script>-->\\n\\n    <script src=\"lib/js/socket.io.js\"></script>\\n\\n    <!--<body>-->\\n    <div class=\"nav-menu sbgn-nav-menu\">\\n        <nav class=\"navbar navbar-default sbgn-nav-bar\" role=\"navigation\">\\n            <div>\\n                <img class=\"newt-logo\" height=\"25\" width=\"auto\" src=\"app/img/newt-logo.png\"/>\\n                <ul class=\"nav navbar-nav navbar-left\">\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            File\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <input id=\"file-input\" type=\"file\" style=\"display:none\" />\\n                            <li><a href=\"#\" type=\"file\" id=\"new-file\">New</a></li>\\n                            <li><a href=\"#\" type=\"file\" id=\"load-file\">Load...</a></li>\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Samples\\n                                    <!--<b class=\"right-caret\"></b>-->\\n                                </a>\\n                                <ul class=\"dropdown-menu\">\\n                                    <li><a href=\"#\" id=\"load-sample1\">Neuronal muscle signaling</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample2\">CaM-CaMK dependent signaling to the nucleus</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample3\">Activated STAT1alpha induction of the IRF1 gene</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample4\">Glycolysis</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample5\">MAPK cascade</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample6\">PolyQ proteins interference</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample7\">Insulin-like Growth Factor (IGF) signalling</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample8\">ATM mediated phosphorylation of repair proteins</a></li>\\n                                    <li><a href=\"#\" id=\"load-sample9\">Vitamins B6 activation to pyridoxal phosphate</a></li>\\n                                </ul>\\n                            </li>\\n                            <li><a href=\"#\" id=\"save-as-sbgnml\">Save...</a></li>\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Save as Image\\n                                    <!--<b class=\"right-caret\"></b>-->\\n                                </a>\\n                                <ul class=\"dropdown-menu\">\\n                                    <li><a href=\"#\" id=\"save-as-png\">PNG</a></li>\\n                                    <li><a href=\"#\" id=\"save-as-jpg\">JPG</a></li>\\n                                </ul>\\n                            </li>\\n                            <li><a href=\"#\" id=\"general-properties\">Properties...</a></li>\\n                        </ul>\\n                    </li>\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            Edit\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li><a href=\"#\" id=\"add-complex-for-selected\" >Add Complex for Selected</a></li>\\n                            <li><a href=\"#\" id=\"add-compartment-for-selected\" >Add Compartment for Selected</a></li>\\n                            <li><a href=\"#\" id=\"create-reaction-template\" >Add From Template...</a></li>\\n                            <li><a href=\"#\" id=\"clone-selected\" >Clone Selected</a></li>\\n\\n                            <li class=\"divider\"></li>\\n                            <li><a href=\"#\" id=\"delete-selected-simple\">Delete Selected Simple</a></li>\\n                            <li><a href=\"#\" id=\"delete-selected-smart\">Delete Selected Smart</a></li>\\n\\n                            <li class=\"divider\"></li>\\n                            <li class=\"disabled\"><a href=\"#\" id=\"undo-last-action\" >Undo</a></li>\\n                            <li class=\"disabled\"><a href=\"#\" id=\"redo-last-action\" >Redo</a></li>\\n\\n                        </ul>\\n                    </li>\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            View\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Select\\n                                </a>\\n                                <ul class=\"dropdown-menu\">\\n                                    <li><a href=\"#\" id=\"select-all\">All Nodes and Edges</a></li>\\n                                    <li><a href=\"#\" id=\"select-all-nodes\">All Nodes</a></li>\\n                                    <li><a href=\"#\" id=\"select-all-edges\">All Edges</a></li>\\n                                </ul>\\n                            </li>\\n\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Hide/Show\\n                                    <!--<b class=\"right-caret\"></b>-->\\n                                </a>\\n                                <ul class=\"dropdown-menu\">\\n                                    <li><a href=\"#\" id=\"hide-selected\">Hide Selected</a></li>\\n                                    <li><a href=\"#\" id=\"show-selected\">Show Selected</a></li>\\n                                    <li><a href=\"#\" id=\"show-hidden-neighbors-of-selected\">Show Hidden Neighbors of Selected</a></li>\\n                                    <li><a href=\"#\" id=\"show-all\">Show All</a></li>\\n                                </ul>\\n                            </li>\\n\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Collapse/Expand\\n                                    <!--<b class=\"right-caret\"></b>-->\\n                                </a>\\n                                <ul class=\"dropdown-menu\">\\n                                    <li><a href=\"#\" id=\"collapse-selected\">Collapse Selected</a></li>\\n                                    <li><a href=\"#\" id=\"expand-selected\">Expand Selected</a></li>\\n                                    <li><a href=\"#\" id=\"collapse-complexes\">Collapse Complexes</a></li>\\n                                    <li><a href=\"#\" id=\"expand-complexes\">Expand Complexes</a></li>\\n                                    <li><a href=\"#\" id=\"collapse-all\">Collapse All</a></li>\\n                                    <li><a href=\"#\" id=\"expand-all\">Expand All</a></li>\\n                                </ul>\\n                            </li>\\n\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" id=\"add-node-menu-option\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Align\\n                                    <!--<b class=\"right-caret\"></b>-->\\n                                </a>\\n                                <ul class=\"dropdown-menu\" id=\"add-node-submenu\">\\n                                    <li class=\"dropdown-submenu\">\\n                                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                            Horizontal\\n                                            <!--<b class=\"right-caret\"></b>-->\\n                                        </a>\\n                                        <ul class=\"dropdown-menu\">\\n                                            <li><a href=\"#\" id=\"align-horizontal-top\">Top</a></li>\\n                                            <li><a href=\"#\" id=\"align-horizontal-middle\">Middle</a></li>\\n                                            <li><a href=\"#\" id=\"align-horizontal-bottom\">Bottom</a></li>\\n                                        </ul>\\n                                    </li>\\n                                    <li class=\"dropdown-submenu\">\\n                                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                            Vertical\\n                                            <!--<b class=\"right-caret\"></b>-->\\n                                        </a>\\n                                        <ul class=\"dropdown-menu\">\\n                                            <li><a href=\"#\" id=\"align-vertical-left\">Left</a></li>\\n                                            <li><a href=\"#\" id=\"align-vertical-center\">Center</a></li>\\n                                            <li><a href=\"#\" id=\"align-vertical-right\">Right</a></li>\\n                                        </ul>\\n                                    </li>\\n                                </ul>\\n                            </li>\\n                            <li><a href=\"#\" id=\"grid-properties\" style=\"padding-right: 30px;\">Grid and Guidelines...</a></li>\\n                        </ul>\\n                    </li>\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            Highlight\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li><a href=\"#\" id=\"highlight-search-menu-item\">Search ...</a></li>\\n                            <li><a href=\"#\" id=\"highlight-neighbors-of-selected\">Neighbors of Selected</a></li>\\n                            <li><a href=\"#\" id=\"highlight-processes-of-selected\">Processes of Selected</a></li>\\n                            <li><a href=\"#\" id=\"remove-highlights\">Remove Highlights</a></li>\\n                        </ul>\\n                    </li>\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            Layout\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li><a href=\"#\" id=\"perform-layout\">Perform Layout</a></li>\\n                            <li><a href=\"#\" id=\"layout-properties\">Layout Properties...</a></li>\\n                        </ul>\\n                    </li>\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            Query\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li class=\"dropdown-submenu\">\\n                                <a href=\"#\" id=\"query-pathwaycommons\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                                    Pathway Commons\\n                                    <!--<b class=\"right-caret\"></b>-->\\n                                </a>\\n                                <ul class=\"dropdown-menu\">\\n                                    <li><a href=\"#\" id=\"query-pathsbetween\">Paths Between...</a></li>\\n                                </ul>\\n                            </li>\\n                        </ul>\\n                    </li>\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            Legends\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li><a href=\"#\" id=\"node-legend\">Node Legend</a></li>\\n                            <li><a href=\"#\" id=\"edge-legend\">Edge Legend</a></li>\\n                        </ul>\\n                    </li>\\n\\n\\n                    <li class=\"dropdown\">\\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\\n                            Help\\n                            <b class=\"caret\"></b>\\n                        </a>\\n                        <ul class=\"dropdown-menu\">\\n                            <li><a href=\"#\" id=\"quick-help\">Quick Help</a></li>\\n                            <li><a href=\"#\" id=\"about\">About</a></li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n                <span class=\"input-file\" id=\"file-name\"></span>\\n            </div>\\n        </nav>\\n    </div>\\n\\n    <div id=\"sbgn-toolbar\" style=\"margin-top: 10px;\">\\n        <table width=\"100%\" height=\"100%\" align=\"center\" valign=\"center\"> <tbody>\\n            <tr><td>\\n                <div class=\"inside-menu\">\\n                    <img id=\"new-file-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/new.svg\" title=\"New: Create a blank SBGN-PD map\">\\n                    <img id=\"load-file-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/load.svg\" title=\"Load: Load an SBGN-PD map from SBGN-ML file\">\\n                    <img id=\"save-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/save.svg\" title=\"Save: Save current SBGN-PD map to an SBGN-ML file\">\\n                    <img id=\"properties-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/settings.svg\" title=\"Properties: Modify general properties of current SBGN-PD map\" >\\n                </div>\\n\\n                <div class=\"menu-break-large sbgn-toolbar-element\"></div>\\n                <div class=\"inside-menu\">\\n\\n                    <div style=\"padding: 1px;\" class=\"sbgn-toolbar-element\"><img id=\"select-mode-icon\" src=\"app/img/toolbar/select.svg\" title=\"Select / Edit\" ></div>\\n                    <div style=\"padding: 1px;\" class=\"sbgn-toolbar-element\"><img id=\"add-node-mode-icon\" src=\"app/img/nodes/unspecified-entity.svg\" title=\"Create a new Unspecified Entity\" ></div>\\n                    <div style=\"padding: 1px;\" class=\"sbgn-toolbar-element\"><img id=\"add-edge-mode-icon\" src=\"app/img/edges/consumption.svg\" title=\"Create a new Consumption\" ></div>\\n\\n                    <div class=\"menu-break-small sbgn-toolbar-element\"> </div>\\n\\n                    <img id=\"delete-selected-simple-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/delete-simple.svg\" title=\"Delete Selected Simple: Delete selected nodes and edges\" >\\n                    <img id=\"delete-selected-smart-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/delete-smart.svg\" title=\"Delete Selected Smart: Delete selected nodes and any processes they are involved in\" >\\n\\n                    <div class=\"menu-break-small sbgn-toolbar-element\"> </div>\\n                    <img id=\"undo-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/undo.svg\" title=\"Undo: Undo the last operation\" >\\n                    <img id=\"redo-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/redo.svg\" title=\"Redo: Redo the last undone operation\" >\\n\\n                </div>\\n\\n                <div class=\"menu-break-large sbgn-toolbar-element\"> </div>\\n                <div class=\"inside-menu\">\\n                    <img id=\"hide-selected-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/hide-selected.svg\" title=\"Hide Selected: Hide selected nodes and any processes they are involved in\" >\\n                    <img id=\"show-selected-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/show-selected.svg\" title=\"Show Selected: Show selected nodes and any processes they are involved in, hiding the remaining nodes and their edges\" >\\n\\n                    <div class=\"menu-break-small sbgn-toolbar-element\"> </div>\\n                    <img id=\"collapse-selected-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/collapse-selected.svg\" title=\"Collapse Selected: Collapse selected compound node to hide its members\" >\\n                    <img id=\"expand-selected-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/expand-selected.svg\" title=\"Expand Selected: Expand selected collapsed node to show its members\" >\\n\\n                    <div class=\"menu-break-small sbgn-toolbar-element\"> </div>\\n                    <div class=\"btn-group sbgn-toolbar-element sbgn-dd-list\" role=\"group\" id=\"align-list\">\\n                        <button id=\"align-button\" title=\"Align to First Selected: Align positions of selected nodes based on the first (if any) selected node\" type=\"button\" class=\"btn\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n                            <div style=\"height: 16px;\">\\n                                <img style=\"float: left; height: 16px; width: auto;\" id=\"sbgn-align-img\" src=\"app/img/align/align.svg\"/>\\n                                <!--<span style=\"float: right;\" class=\"caret\"></span>-->\\n                            </div>\\n                        </button>\\n                        <button id=\"align-dd-button\" type=\"button\" class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n                            <div style=\"height: 16px;\">\\n                                <span class=\"caret\"></span>\\n                                <span class=\"sr-only\"></span>\\n                            </div>\\n                        </button>\\n                        <ul id=\"align-menu\" class=\"dropdown-menu\" >\\n                            <li><a class=\"dd-list-href\" href=\"#\" id=\"align-horizontal-top-icon\"> <img src=\"app/img/align/align-horizontal-top.svg\"/>  Align Horizontal Top</a></li>\\n                            <li><a class=\"dd-list-href\" href=\"#\" id=\"align-horizontal-middle-icon\"> <img src=\"app/img/align/align-horizontal-middle.svg\"/>  Align Horizontal Middle</a></li>\\n                            <li><a class=\"dd-list-href\" href=\"#\" id=\"align-horizontal-bottom-icon\"> <img src=\"app/img/align/align-horizontal-bottom.svg\"/>  Align Horizontal Bottom</a></li>\\n                            <li><a class=\"dd-list-href\" href=\"#\" id=\"align-vertical-left-icon\"> <img src=\"app/img/align/align-vertical-left.svg\"/>  Align Vertical Left</a></li>\\n                            <li><a class=\"dd-list-href\" href=\"#\" id=\"align-vertical-center-icon\"> <img src=\"app/img/align/align-vertical-center.svg\"/>  Align Vertical Center</a></li>\\n                            <li><a class=\"dd-list-href\" href=\"#\" id=\"align-vertical-right-icon\"> <img src=\"app/img/align/align-vertical-right.svg\"/>  Align Vertical Right</a></li>\\n                        </ul>\\n                    </div>\\n\\n                    <div class=\"menu-break-small sbgn-toolbar-element\"> </div>\\n                    <img id=\"toggle-grid-snapping-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/grid.svg\" title=\"Enable Grid: Show and snap to grid on mouse release\" >\\n\\n                    <img id=\"toggle-guidelines-snapping-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/guidelines.svg\" title=\"Enable Guidelines: Enable and snap to alignment guidelines on mouse release\" >\\n\\n                </div>\\n\\n                <div class=\"menu-break-large sbgn-toolbar-element\"> </div>\\n                <div class=\"inside-menu\">\\n                    <img id=\"search-by-label-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/search.svg\" title=\"Search: Search and find (case insensitive) all nodes with specified label text, selecting them and highlighting them along with their processes\" >\\n                    <input id=\"search-by-label-text-box\" class=\"sbgn-toolbar-element\" type=\"label\">\\n                    <img id=\"highlight-neighbors-of-selected-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/highlight-neighbors-of-selected.svg\" title=\"Highlight Neighbors of Selected: Highlight selected nodes and their neighbors by ghosting remaining nodes\" >\\n                    <img id=\"remove-highlights-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/remove-highlights.svg\" title=\"Remove Highlights: Remove any highlights\" >\\n                </div>\\n\\n                <div class=\"menu-break-large sbgn-toolbar-element\"> </div>\\n                <div class=\"inside-menu\">\\n                    <img id=\"perform-layout-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/layout-cose.svg\" title=\"Perform Layout: Perform a force-directed layout of current map, maintaining compound structures\" >\\n                    <img id=\"layout-properties-icon\" class=\"sbgn-toolbar-element\" src=\"app/img/toolbar/layout-properties.svg\" title=\"Layout Properties: Modify parameters used during layout\" >\\n                </div>\\n            </td>\\n            </tr>\\n        </tbody>\\n        </table>\\n    </div>\\n\\n    <table id=\"sbgn-inspector-and-canvas\">\\n        <tbody>\\n        <tr>\\n            <td>\\n                <!--focus should be here add tabindex -->\\n                <div id=\"sbgn-network-container\" tabindex=\"0\">\\n                </div>\\n            </td>\\n\\n            <td>\\n                <view is=\\'inspector-view\\'></view>                    <!--<div id=\"sbgn-inspector\">-->\\n                <!--</div>-->\\n            </td>\\n        </tr>\\n        </tbody>\\n    </table>\\n\\n    <div id=\"layout-properties-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- sbgn layout table will be shown here -->\\n    </div>\\n\\n    <div id=\"general-properties-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- sbgn properties table will be shown here-->\\n    </div>\\n\\n    <div id=\"biogene-container\" style=\"display: none\">\\n    </div>\\n\\n\\n    <div id=\"query-pathsbetween-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- paths between query table will be shown here-->\\n    </div>\\n\\n    <div id=\"prompt-save-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- sbgn properties table will be shown here-->\\n    </div>\\n\\n    <div id=\"file-save-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- save dialog will be shown here-->\\n    </div>\\n\\n    <div id=\"prompt-confirmation-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- confirmation dialog will be shown here-->\\n    </div>\\n\\n    <div id=\"reaction-template-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- paths between query table will be shown here -->\\n    </div>\\n\\n    <div id=\"grid-properties-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- grid properties table will be shown here -->\\n    </div>\\n\\n    <div id=\"font-properties-table\" tabindex=\"-1\" class=\"modal fade\" role=\"dialog\">\\n        <!-- sbgn properties table will be shown here -->\\n    </div>\\n\\n    <div id=\"box\">\\n    </div>\\n    <!--<input id=\"node-label-textbox\" type=\"text\"></input>-->\\n\\n    <!-- templates -->\\n    <!-- templates -->\\n    <div id=\\'node_legend_modal\\' class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 504px; height: 325px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\">\\n                    <div class=\"sbgn-frame\">\\n                        <h2 class=\"sbgn-text\">Node Legend</h2>\\n                        <img src=\"app/img/node_legend_sbgn.png\" alt=\"\" class=\"centered img-responsive sbgn-legend\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div id=\\'edge_legend_modal\\' class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 325px; height: 285px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\">\\n                    <div class=\"sbgn-frame\">\\n                        <h2 class=\"sbgn-text\">Edge Legend</h2>\\n                        <img src=\"app/img/interaction_legend_sbgn.png\" alt=\"\" class=\"centered img-responsive sbgn-legend\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div id=\\'about_modal\\' class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\\n        <div class=\"modal-dialog modal-sm sbgn-modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\">\\n                    <div class=\"sbgn-frame\">\\n                        <h2 class=\"sbgn-text\">About</h2>\\n\\n                        <table width=\"100%\" height=\"100%\" align=\"center\" valign=\"center\">\\n                            <tbody>\\n\\n                            <tr><td>\\n                                <p id=\"about-newt-version\" class=\"sbgn-text\">Newt Editor version 0.1</p>\\n                            </td></tr>\\n\\n                            <tr><td>\\n                                <img src=\"app/img/newt-logo.png\" alt=\"\" class=\"centered img-responsive\" style=\"margin-bottom: 10px;\">\\n                            </td></tr>\\n\\n                            <tr><td>\\n                                <p class=\"address-text marg\">i-Vis Information Visualization Group</p>\\n                                <p class=\"address-text\">Bilkent University, Ankara, Turkey</p>\\n                            </td></tr>\\n\\n                            <tr><td>\\n                                <p class=\"address-text marg\">\\n                                    <a href=\"mailto:ivis@cs.bilkent.edu.tr\" target=\"_top\">ivis@cs.bilkent.edu.tr</a>\\n                                </p>\\n                                <p class=\"address-text\">\\n                                    <a href=\"https://github.com/iVis-at-Bilkent/chise.js\" target=\"_blank\">https://github.com/iVis-at-Bilkent/newt</a>\\n                                </p>\\n                            </td></tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div id=\\'quick_help_modal\\' class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 420px\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-body\">\\n                    <div class=\"sbgn-frame quick-help\">\\n                        <h2 class=\"sbgn-text\">Quick Help</h2>\\n                        <div class=\"quick-help-content\">\\n                            <table align=\"center\" valign=\"center\"> <tbody>\\n                                <tr>\\n                                    <td><b>File | Samples | &lt;sample file&gt;</b>:\\n                                        Load a sample model from file in SBGN-ML</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><b>File | Load</b>:\\n                                        Load a model from file in SBGN-ML</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><b>Left-click</b>:\\n                                        Full label of the node</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><b>Right-click</b>:\\n                                        Context menu for associated object</td>\\n                                </tr>\\n                                <tr>\\n                                    <td><b>Ctrl + drag</b>:\\n                                        Transfer a node in and out of a compound node</td>\\n                                </tr>\\n                            </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <script type=\"text/template\" id=\"loading-small-template\">\\n        <p class=\"sbgn-text\"> <%= name %> </p>\\n        <img class=\"centered\" src=\"app/img/loading-small.gif\" height=\"auto\" width=\"auto\" align=\"middle\">\\n    </script>\\n\\n    <script type=\"text/template\" id=\"layout-settings-template\">\\n        <div class=\"modal-dialog modal-sm sbgn-modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Layout Properties</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table\"> <tbody>\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Node Repulsion </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"node-repulsion\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= nodeRepulsion %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Ideal Edge Length </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"ideal-edge-length\" type=\"text\" min=\"5\" class=\"sbgn-input-small layout-text float-input\" value= <%= idealEdgeLength %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Edge Elasticity </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"edge-elasticity\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= edgeElasticity %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Nesting Factor </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"nesting-factor\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= nestingFactor %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Gravity </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"gravity\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravity %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Gravity Range   </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"gravity-range\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravityRange %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Compound Gravity  </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"gravity-compound\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravityCompound %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Compound Gravity Range </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"gravity-range-compound\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravityRangeCompound %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Number of Iterations </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"num-iter\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text integer-input\" value= <%= numIter %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Tiling Vertical Padding </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"tiling-padding-vertical\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text integer-input\" value= <%= tilingPaddingVertical %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Tiling Horizontal Padding </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"tiling-padding-horizontal\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text integer-input\" value= <%= tilingPaddingHorizontal %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Tile Disconnected </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"tile\" type=\"checkbox\" class=\"layout-text\" <% if (tile){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Animate </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"animate\" type=\"checkbox\" class=\"layout-text\" <% if (animate === \\'during\\'){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Incremental </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"incremental\" type=\"checkbox\" class=\"layout-text\" <% if (!randomize){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"save-layout\" class=\"btn btn-default\"  >Save</button>\\n                    <button id=\"default-layout\" class=\"btn btn-default\">Default</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"general-properties-template\">\\n        <div class=\"modal-dialog modal-sm sbgn-modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Properties</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table\"> <tbody>\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Compound Padding </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"compound-padding\" type=\"text\" class=\"sbgn-input-small layout-text integer-input\" min=\"0\" max=\"100\" value= <%= compoundPadding %> > %\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Label Size </span>\\n                            </td>\\n\\n                            <td>\\n                                <select id=\"dynamic-label-size-select\"  class=\"sbgn-input-medium\" name=\"dynamic-label-size\">\\n                                    <option id=\"dynamic-label-size_small\" value=\"small\" <% if (dynamicLabelSize == \\'small\\'){ %> selected<%}%> > Small </option>\\n                                    <option id=\"dynamic-label-size_regular\" value=\"regular\" <% if (dynamicLabelSize == \\'regular\\'){ %> selected<%}%> > Regular </option>\\n                                    <option id=\"dynamic-label-size_large\" value=\"large\" <% if (dynamicLabelSize == \\'large\\'){ %> selected<%}%> > Large </option>\\n                                </select>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Fit Labels To Nodes </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"fit-labels-to-nodes\" type=\"checkbox\" class=\"layout-text\" <% if (fitLabelsToNodes){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Rearrange After Expand-Collapse </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"rearrange-after-expand-collapse\" type=\"checkbox\" class=\"layout-text\" <% if (rearrangeAfterExpandCollapse){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Animate on Drawing Changes </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"animate-on-drawing-changes\" type=\"checkbox\" class=\"layout-text\" <% if (animateOnDrawingChanges){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Adjust Node Label Font Size Automatically </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"adjust-node-label-font-size-automatically\" type=\"checkbox\"  class=\"layout-text\" <% if (adjustNodeLabelFontSizeAutomatically){ %> checked<%}%>>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Map Color Scheme </span>\\n                            </td>\\n\\n                            <td>\\n                                <select id=\"map-color-scheme-select\" name=\"map-color-scheme\">\\n                                    <% var i=0; for( var scheme_id in mapColorSchemes) { %>\\n                                    <option id=\"map-color-scheme_<%= i %>\" value=\"<%= scheme_id %>\" <% if (mapColorScheme == scheme_id){ %> selected<%}%> > <%= mapColorSchemes[scheme_id][\\'name\\'] %> </option>\\n                                    <% i++;} %>\\n                                </select>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"save-sbgn\" class=\"btn btn-default\" >Save</button>\\n                    <button id=\"default-sbgn\" class=\"btn btn-default\">Default</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"query-pathsbetween-template\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 500px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Paths Between Query</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table\"> <tbody>\\n                        <tr>\\n                            <th colspan=2 style=\"padding-left: 0px;\" align=\"left\">\\n                                <span class=\"add-on layout-text\"> Find all paths of specified length limit between any two entities of the specified set </span>\\n                            </th>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Gene Symbols: </span><br>\\n                                <textarea id=\"query-pathsbetween-gene-symbols\" rows=\"4\" cols=\"86\" style=\"width: 206px;\"><%= geneSymbols %></textarea>\\n                            </td>\\n\\n                            <td>\\n                                <table frame=\"box\" style=\"border-color: rgb(204, 204, 204)\">\\n                                    <caption style=\"text-align: left;\">Stop Distance</caption>\\n                                    <tr>\\n                                        <td colspan=2>Length limit</td>\\n                                        <td style=\"padding: 10px;\"><input id=\"query-pathsbetween-length-limit\" type=\"text\" min=\"1\" class=\"sbgn-input-small layout-text integer-input\" style=\"width: 90px;\" value= <%= lengthLimit %> > </td>\\n                                    </tr>\\n                                </table>\\n                            </td>\\n\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"save-query-pathsbetween\" class=\"btn btn-default\" >OK</button>\\n                    <button id=\"cancel-query-pathsbetween\" class=\"btn btn-default\">Cancel</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"prompt-save-template\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 350px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Save</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table\"> <tbody>\\n                        <tr>\\n                            <th style=\"padding-left: 0px;\" align=\"left\">\\n                                <span class=\"add-on layout-text\"> Do you want to save any change(s) to the map? </span>\\n                            </th>\\n                        </tr>\\n\\n                        <tr id=\"prompt-save-buttons\" style=\"padding-bottom: 0px; margin-bottom: 0px;\">\\n                            <td>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"prompt-save-accept\" class=\"btn btn-default\" >Save</button>\\n                    <button id=\"prompt-save-reject\" class=\"btn btn-default\">Don\\'t Save</button>\\n                    <button id=\"prompt-save-cancel\" class=\"btn btn-default\">Cancel</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"file-save-template\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 350px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Save</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table\" style=\"margin: auto;\"> <tbody>\\n                        <tr>\\n                            <td style=\"padding-left: 0px;\" align=\"left\">\\n                                <span class=\"add-on layout-text\"> Filename </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"file-save-filename\" type=\"text\" />\\n                            </td>\\n                        </tr>\\n\\n                        <tr id=\"file-save-buttons\" style=\"padding-bottom: 0px; margin-bottom: 0px;\">\\n                            <td>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"file-save-accept\" class=\"btn btn-default\">Save</button>\\n                    <button id=\"file-save-cancel\" class=\"btn btn-default\">Cancel</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"prompt-confirmation-template\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 400px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Confirmation</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table\" style=\"margin: auto;\"> <tbody>\\n                        <tr>\\n                            <th style=\"padding-left: 0px;\" align=\"left\">\\n                                <span class=\"add-on layout-text\">All unsaved changes will be lost. Do you want to continue?</span>\\n                            </th>\\n                        </tr>\\n\\n                        <tr id=\"prompt-confirmation-buttons\" style=\"padding-bottom: 0px; margin-bottom: 0px;\">\\n                            <td>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"prompt-confirmation-accept\" class=\"btn btn-default\">Yes</button>\\n                    <button id=\"prompt-confirmation-cancel\" class=\"btn btn-default\">No</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"reaction-template-template\">\\n        <div class=\"modal-dialog modal-sm sbgn-modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Template</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table\"><tbody>\\n\\n                        <tr>\\n                            <td style=\"padding-bottom: 10px;\" align=\"right\" valign=\"middle\">\\n                                <span class=\"add-on layout-text\"> <b> Type </b> </span>\\n                            </td>\\n\\n                            <td>\\n                                <select id=\"reaction-template-type-select\" class=\\'sbgn-input-medium layout-text\\' name=\"reaction-template-type\">\\n                                    <option id=\"reaction-template-type-association\" value=\"association\" <% if (templateType == \\'association\\'){ %> selected<%}%> > Association </option>\\n                                    <option id=\"reaction-template-type-dissociation\" value=\"dissociation\" <% if (templateType == \\'dissociation\\'){ %> selected<%}%> > Dissociation </option>\\n                                </select>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td align=\"center\" valign=\"middle\" style=\"margin-left: 5px;\">\\n                                <span class=\"add-on layout-text\"> <b> Input </b> </span>\\n                            </td>\\n\\n                            <td align=\"center\" valign=\"middle\" style=\"margin-right: 5px;\">\\n                                <span class=\"add-on layout-text\"> <b> Output </b> </span>\\n                            </td>\\n                        </tr>\\n\\n\\n                        <tr>\\n                            <td>\\n                                <%= getInputHtml() %>\\n                            </td>\\n\\n                            <td>\\n                                <%= getOutputHtml() %>\\n                            </td>\\n\\n                        </tr>\\n                    </tbody>\\n\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"create-template\" class=\"btn btn-default\" >Create</button>\\n                    <button id=\"cancel-template\" class=\"btn btn-default\">Cancel</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"grid-properties-template\">\\n        <div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 573px;\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Grid  and Guidelines Properties</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table dialog-table property-table\" style=\"padding-bottom: 4px;\"> <tbody>\\n                        <tr> <th> Grid </th> </tr>\\n                        <tr>\\n                            <td style=\"padding-right: 20px;\">\\n                                <input id=\"show-grid\" type=\"checkbox\" class=\"layout-text\" <% if (showGrid){ %> checked<%}%>>\\n                                <span class=\"add-on layout-text\"> Show Grid </span>\\n                            </td>\\n                            <td style=\"padding-right: 25px;\">\\n                                <span class=\"add-on layout-text\"> Grid Size </span>\\n                                <input id=\"grid-size\" type=\"text\" min=\"5\" class=\"sbgn-input-small layout-text integer-input\" value= <%= gridSize %> >\\n                            </td>\\n                            <td>\\n                                <input id=\"auto-resize-nodes\" type=\"checkbox\" class=\"layout-text\" <% if (autoResizeNodes){ %> checked<%}%>>\\n                                <span class=\"add-on layout-text\"> Auto  Resize Nodes </span>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                    <table class=\"table-condensed layout-table dialog-table property-table\" style=\"padding-bottom: 4px;\"><tbody>\\n                        <tr> <th> Snap Policy </th> </tr>\\n                        <tr>\\n                            <td>\\n                                <input id=\"no-snap\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (!discreteDrag && !snapToGrid && ! snapToAlignmentLocation){ %> checked<%}%>>\\n                                <span class=\"add-on layout-text\"> No Snap </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"discrete-drag\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (discreteDrag){ %> checked<%}%>>\\n                                <span class=\"add-on layout-text\"> Discrete Drag </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"snap-to-grid\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (snapToGrid){ %> checked<%}%>>\\n                                <span class=\"add-on layout-text\"> Snap to Grid </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"snap-to-alignment-location\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (snapToAlignmentLocation){ %> checked<%}%>>\\n                                <span class=\"add-on layout-text\"> Snap to Alignment Location </span>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                    <table class=\"table-condensed layout-table dialog-table property-table\" style=\"padding-bottom: 4px !important;\"><tbody>\\n                        <tr> <th colspan=\"100%\"> Alignment Guidelines </th> </tr>\\n                        <tr>\\n                            <td style=\"padding-bottom: 20px !important; width: 140px;\">\\n                                <span class=\"add-on layout-text\"> Reference Guideline</span>\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <input id=\"show-init-Pos-Alignment\" type=\"checkbox\" class=\"layout-text\" <% if (showInitPosAlignment){ %> checked<%}%>>\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important; padding-left: 0px;\">\\n                                Style\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <input id=\"init-Pos-Alignment-Color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= initPosAlignmentColor %> >\\n                            </td>\\n\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <select name=\"init-Pos-Alignment-Line\">\\n                                    <option value=\"0,0\" <% if (initPosAlignmentLine[0] == 0 && initPosAlignmentLine[1] == 0){ %> selected<% }%> > Solid </option>\\n                                    <option value=\"3,5\" <% if (initPosAlignmentLine[0] != 0 || initPosAlignmentLine[1] != 0){ %> selected<% }%> > Dashed </option>\\n                                </select>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td style=\"padding-bottom: 20px !important; width: 140px;\">\\n                                <span class=\"add-on layout-text\"> Geometric Guidelines </span>\\n                            </td>\\n\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <input id=\"show-geometric-guidelines\" type=\"checkbox\" class=\"layout-text\" <% if (showGeometricGuidelines){ %> checked<%}%>>\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important; padding-left: 0px;\">\\n                                Style\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <input id=\"geometric-guideline-color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= guidelineColor %> >\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <select id=\"geometric-Alignment-Line\">\\n                                    <option value=\"0,0\" <% if (lineDash[0] == 0 && lineDash[1] == 0){ %> selected<% }%> > Solid </option>\\n                                    <option value=\"3,5\" <% if (lineDash[0] != 0 || lineDash[1] != 0){ %> selected<% }%> > Dashed </option>\\n                                </select>\\n                            </td>\\n                            <td style=\"padding-bottom: 20px !important; padding-left: 35px;\">\\n                                <span class=\"add-on layout-text\"> Range </span>\\n                            </td>\\n\\n                            <td style=\"padding-bottom: 20px !important;\">\\n                                <input id=\"geometric-alignment-range\" type=\"text\" class=\"sbgn-input-small layout-text float-input\" value= <%= geometricAlignmentRange %> >\\n                            </td>\\n\\n                        </tr>\\n\\n                        <tr>\\n                            <td rowspan=\"2\">\\n                                <span class=\"add-on layout-text\"> Distribution Guidelines </span>\\n                            </td>\\n\\n                            <td rowspan=\"2\">\\n                                <input id=\"show-distribution-guidelines\" type=\"checkbox\" class=\"layout-text\" <% if (showDistributionGuidelines){ %> checked<%}%>>\\n                            </td>\\n                            <td style=\"padding-left: 0px;\">\\n                                <span class=\"add-on layout-text\"> Horizontal </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"horizontal-guideline-color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= horizontalGuidelineColor %> >\\n                            </td>\\n                            <td>\\n                                <select name=\"horizontal-Dist-Alignment-Line\">\\n                                    <option value=\"0,0\" <% if (horizontalDistLine[0] == 0 && horizontalDistLine[1] == 0){ %> selected<% }%> > Solid </option>\\n                                    <option value=\"3,5\" <% if (horizontalDistLine[0] != 0 || horizontalDistLine[1] != 0){ %> selected<% }%> > Dashed </option>\\n                                </select>\\n                            </td>\\n                            <td rowspan=\"2\" style=\"padding-left: 35px;\">\\n                                <span class=\"add-on layout-text\"> Range </span>\\n                            </td>\\n\\n                            <td rowspan=\"2\">\\n                                <input id=\"distribution-alignment-range\" type=\"text\" class=\"sbgn-input-small layout-text float-input\" value= <%= distributionAlignmentRange %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td style=\"padding-left: 0px;>\\n            <span class=\"add-on layout-text\"> Vertical </span>\\n                            </td>\\n\\n                            <td>\\n                                <input id=\"vertical-guideline-color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= verticalGuidelineColor %> >\\n                            </td>\\n                            <td>\\n                                <select name=\"vertical-Dist-Alignment-Line\">\\n                                    <option value=\"0,0\" <% if (verticalDistLine[0] == 0 && verticalDistLine[1] == 0){ %> selected<% }%> > Solid </option>\\n                                    <option value=\"3,5\" <% if (verticalDistLine[0] != 0 || verticalDistLine[1] != 0){ %> selected<% }%> > Dashed </option>\\n                                </select>\\n                            </td>\\n\\n                        <tr>\\n                            <td style=\"padding-top: 20px !important; width: 140px;\">\\n                                <span class=\"add-on layout-text\"> Guideline Tolerance </span>\\n                            </td>\\n\\n                            <td style=\"padding-top: 20px !important;\">\\n                                <input id=\"guideline-tolerance\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= guidelineTolerance %> >\\n                            </td>\\n                        </tr>\\n\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"save-grid\" class=\"btn btn-default\" >Save</button>\\n                    <button id=\"default-grid\" class=\"btn btn-default\">Default</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"font-properties-template\">\\n        <div class=\"modal-dialog modal-sm sbgn-modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\\n                    <h4 class=\"modal-title\">Font Properties</h4>\\n                </div>\\n                <div class=\"modal-body\">\\n                    <table class=\"table-condensed layout-table\"> <tbody>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Font Family </span>\\n                            </td>\\n\\n                            <td>\\n                                <%= getFontFamilyHtml() %>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Font Size </span>\\n                            </td>\\n                            <td>\\n                                <input id=\"font-properties-font-size\" type=\"text\" min=\"1\" class=\"sbgn-input-small layout-text integer-input\" value= <%= fontSize %> >\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Font Weight </span>\\n                            </td>\\n\\n                            <td>\\n                                <select id=\"font-properties-select-font-weight\" class=\\'input-medium layout-text\\' name=\"font-weight-select\">\\n                                    <option id=\"font-properties-font-weight-none\" value=\"\" <% if (fontWeight == \\'\\'){ %> selected<%}%> >  </option>\\n                                    <option id=\"font-properties-font-weight-lighter\" value=\"lighter\" <% if (fontWeight == \\'lighter\\'){ %> selected<%}%> > Lighter </option>\\n                                    <option id=\"font-properties-font-weight-normal\" value=\"normal\" <% if (fontWeight == \\'normal\\'){ %> selected<%}%> > Normal </option>\\n                                    <option id=\"font-properties-font-weight-bold\" value=\"bold\" <% if (fontWeight == \\'bold\\'){ %> selected<%}%> > Bold </option>\\n                                    <option id=\"font-properties-font-weight-bolder\" value=\"bolder\" <% if (fontWeight == \\'bolder\\'){ %> selected<%}%> > Bolder </option>\\n                                </select>\\n                            </td>\\n                        </tr>\\n\\n                        <tr>\\n                            <td>\\n                                <span class=\"add-on layout-text\"> Font Type </span>\\n                            </td>\\n\\n                            <td>\\n                                <select id=\"font-properties-select-font-style\" class=\\'input-medium layout-text\\' name=\"font-style-select\">\\n                                    <option id=\"font-properties-font-style-none\" value=\"\" <% if (fontStyle == \\'\\'){ %> selected<%}%> >  </option>\\n                                    <option id=\"font-properties-font-style-normal\" value=\"normal\" <% if (fontStyle == \\'normal\\'){ %> selected<%}%> > Normal </option>\\n                                    <option id=\"font-properties-font-style-italic\" value=\"italic\" <% if (fontStyle == \\'italic\\'){ %> selected<%}%> > Italic </option>\\n                                    <option id=\"font-properties-font-style-oblique\" value=\"oblique\" <% if (fontStyle == \\'oblique\\'){ %> selected<%}%> > Oblique </option>\\n                                </select>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    </table>\\n                </div>\\n                <div class=\"modal-footer\" style=\"text-align: center\">\\n                    <button id=\"set-font-properties\" class=\"btn btn-default\" >Set</button>\\n                </div>\\n            </div>\\n        </div>\\n    </script>\\n\\n    <!-- BioGeneView template for backbone.js -->\\n    <script type=\"text/template\" id=\"biogene-template\">\\n        <div class=\\'node-details-text\\'>\\n            <table class=\"table table-condensed table-striped\" cellspacing=\"10\"> <tbody>\\n                <tr class=\"biogene-info biogene-description node-details-summary\">\\n                    <th valign=\"top\">Gene Summary:</th>\\n                    <td colspan=\"2\" class=\"expandable\">\\n                        <%=geneSummary %>\\n                    </td>\\n                </tr>\\n                <tr class=\"biogene-info biogene-aliases\">\\n                    <th valign=\"top\">Aliases:</th>\\n                    <td>\\n                        <%=geneAliases %>\\n                    </td>\\n                </tr>\\n                <tr class=\"biogene-info biogene-description\">\\n                    <th>Description:</th>\\n                    <td class=\"expandable\">\\n                        <%=geneDescription %>\\n                    </td>\\n                </tr>\\n                <tr class=\"biogene-info biogene-location\">\\n                    <th valign=\"top\">Chromosome Location:</th>\\n                    <td>\\n                        <%=geneLocation %>\\n                    </td>\\n                </tr>\\n                <tr class=\"biogene-info biogene-uniprot-links\">\\n                    <th valign=\"top\">UniProt ID:</th>\\n                    <td>\\n                        <a href=\\'http://www.uniprot.org/uniprot/<%= geneUniprotId %>\\' target=\\'blank\\'>\\n                            <%=geneUniprotId %>\\n                        </a>\\n                        <span class=\\'biogene-uniprot-links-extra\\'>\\n            <%= geneUniprotLinks %>\\n            </span>\\n                    </td>\\n                </tr>\\n                <tr class=\"biogene-info biogene-id\">\\n                    <th valign=\"top\">Gene ID:</th>\\n                    <td>\\n                        <a href=\\'http://www.ncbi.nlm.nih.gov/gene?term=<%= geneId %>\\' target=\\'blank\\'>\\n                            <%=geneId %>\\n                        </a>\\n                    </td>\\n                </tr>\\n            </tbody>\\n            </table>\\n        </div>\\n    </script>\\n\\n    <script type=\"text/template\" id=\"uniprot-link-template\">\\n        <a href=\"http://www.uniprot.org/uniprot/<%= id %>\" target=\"_blank\">\\n            <%=id %>\\n        </a>\\n    </script>\\n\\n\\n\\n\\n').parse = function() {return this.template = new templates.Template([new templates.Element('script', {'src': new templates.Attribute('node_modules/ocanvas/build/dist/latest/ocanvas.min.js')}, [], void 0, false), new templates.Element('script', {'src': new templates.Attribute('app/bundle.js')}, [], void 0, false), new templates.Element('script', {'src': new templates.Attribute('node_modules/qtip2/dist/jquery.qtip.js')}, [], void 0, false), new templates.Element('script', {'src': new templates.Attribute('lib/js/jquery.noty.packaged.js')}, [], void 0, false), new templates.Element('script', {'src': new templates.Attribute('lib/js/socket.io.js')}, [], void 0, false), new templates.Element('div', {'class': new templates.Attribute('nav-menu sbgn-nav-menu')}, [new templates.Element('nav', {'class': new templates.Attribute('navbar navbar-default sbgn-nav-bar'), 'role': new templates.Attribute('navigation')}, [new templates.Element('div', void 0, [new templates.Element('img', {'class': new templates.Attribute('newt-logo'), 'height': new templates.Attribute('25'), 'width': new templates.Attribute('auto'), 'src': new templates.Attribute('app/img/newt-logo.png')}, null, void 0, true), new templates.Element('ul', {'class': new templates.Attribute('nav navbar-nav navbar-left')}, [new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('File'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('input', {'id': new templates.Attribute('file-input'), 'type': new templates.Attribute('file'), 'style': new templates.Attribute('display:none')}, null, void 0, true), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'type': new templates.Attribute('file'), 'id': new templates.Attribute('new-file')}, [new templates.Text('New')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'type': new templates.Attribute('file'), 'id': new templates.Attribute('load-file')}, [new templates.Text('Load...')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Samples')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample1')}, [new templates.Text('Neuronal muscle signaling')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample2')}, [new templates.Text('CaM-CaMK dependent signaling to the nucleus')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample3')}, [new templates.Text('Activated STAT1alpha induction of the IRF1 gene')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample4')}, [new templates.Text('Glycolysis')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample5')}, [new templates.Text('MAPK cascade')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample6')}, [new templates.Text('PolyQ proteins interference')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample7')}, [new templates.Text('Insulin-like Growth Factor (IGF) signalling')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample8')}, [new templates.Text('ATM mediated phosphorylation of repair proteins')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('load-sample9')}, [new templates.Text('Vitamins B6 activation to pyridoxal phosphate')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('save-as-sbgnml')}, [new templates.Text('Save...')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Save as Image')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('save-as-png')}, [new templates.Text('PNG')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('save-as-jpg')}, [new templates.Text('JPG')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('general-properties')}, [new templates.Text('Properties...')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Edit'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('add-complex-for-selected')}, [new templates.Text('Add Complex for Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('add-compartment-for-selected')}, [new templates.Text('Add Compartment for Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('create-reaction-template')}, [new templates.Text('Add From Template...')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('clone-selected')}, [new templates.Text('Clone Selected')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('divider')}, [], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('delete-selected-simple')}, [new templates.Text('Delete Selected Simple')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('delete-selected-smart')}, [new templates.Text('Delete Selected Smart')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('divider')}, [], void 0, false), new templates.Element('li', {'class': new templates.Attribute('disabled')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('undo-last-action')}, [new templates.Text('Undo')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('disabled')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('redo-last-action')}, [new templates.Text('Redo')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('View'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Select')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('select-all')}, [new templates.Text('All Nodes and Edges')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('select-all-nodes')}, [new templates.Text('All Nodes')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('select-all-edges')}, [new templates.Text('All Edges')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Hide/Show')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('hide-selected')}, [new templates.Text('Hide Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('show-selected')}, [new templates.Text('Show Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('show-hidden-neighbors-of-selected')}, [new templates.Text('Show Hidden Neighbors of Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('show-all')}, [new templates.Text('Show All')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Collapse/Expand')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('collapse-selected')}, [new templates.Text('Collapse Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('expand-selected')}, [new templates.Text('Expand Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('collapse-complexes')}, [new templates.Text('Collapse Complexes')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('expand-complexes')}, [new templates.Text('Expand Complexes')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('collapse-all')}, [new templates.Text('Collapse All')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('expand-all')}, [new templates.Text('Expand All')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('add-node-menu-option'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Align')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu'), 'id': new templates.Attribute('add-node-submenu')}, [new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Horizontal')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-horizontal-top')}, [new templates.Text('Top')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-horizontal-middle')}, [new templates.Text('Middle')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-horizontal-bottom')}, [new templates.Text('Bottom')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Vertical')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-vertical-left')}, [new templates.Text('Left')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-vertical-center')}, [new templates.Text('Center')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-vertical-right')}, [new templates.Text('Right')], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('grid-properties'), 'style': new templates.Attribute('padding-right: 30px;')}, [new templates.Text('Grid and Guidelines...')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Highlight'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('highlight-search-menu-item')}, [new templates.Text('Search ...')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('highlight-neighbors-of-selected')}, [new templates.Text('Neighbors of Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('highlight-processes-of-selected')}, [new templates.Text('Processes of Selected')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('remove-highlights')}, [new templates.Text('Remove Highlights')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Layout'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('perform-layout')}, [new templates.Text('Perform Layout')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('layout-properties')}, [new templates.Text('Layout Properties...')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Query'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', {'class': new templates.Attribute('dropdown-submenu')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('query-pathwaycommons'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Pathway Commons')], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('query-pathsbetween')}, [new templates.Text('Paths Between...')], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Legends'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('node-legend')}, [new templates.Text('Node Legend')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('edge-legend')}, [new templates.Text('Edge Legend')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('dropdown')}, [new templates.Element('a', {'href': new templates.Attribute('#'), 'class': new templates.Attribute('dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown')}, [new templates.Text('Help'), new templates.Element('b', {'class': new templates.Attribute('caret')}, [], void 0, false)], void 0, false), new templates.Element('ul', {'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('quick-help')}, [new templates.Text('Quick Help')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'href': new templates.Attribute('#'), 'id': new templates.Attribute('about')}, [new templates.Text('About')], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('span', {'class': new templates.Attribute('input-file'), 'id': new templates.Attribute('file-name')}, [], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('sbgn-toolbar'), 'style': new templates.Attribute('margin-top: 10px;')}, [new templates.Element('table', {'width': new templates.Attribute('100%'), 'height': new templates.Attribute('100%'), 'align': new templates.Attribute('center'), 'valign': new templates.Attribute('center')}, [new templates.Text(' '), new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', {'class': new templates.Attribute('inside-menu')}, [new templates.Element('img', {'id': new templates.Attribute('new-file-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/new.svg'), 'title': new templates.Attribute('New: Create a blank SBGN-PD map')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('load-file-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/load.svg'), 'title': new templates.Attribute('Load: Load an SBGN-PD map from SBGN-ML file')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('save-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/save.svg'), 'title': new templates.Attribute('Save: Save current SBGN-PD map to an SBGN-ML file')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('properties-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/settings.svg'), 'title': new templates.Attribute('Properties: Modify general properties of current SBGN-PD map')}, null, void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-large sbgn-toolbar-element')}, [], void 0, false), new templates.Element('div', {'class': new templates.Attribute('inside-menu')}, [new templates.Element('div', {'style': new templates.Attribute('padding: 1px;'), 'class': new templates.Attribute('sbgn-toolbar-element')}, [new templates.Element('img', {'id': new templates.Attribute('select-mode-icon'), 'src': new templates.Attribute('app/img/toolbar/select.svg'), 'title': new templates.Attribute('Select / Edit')}, null, void 0, false)], void 0, false), new templates.Element('div', {'style': new templates.Attribute('padding: 1px;'), 'class': new templates.Attribute('sbgn-toolbar-element')}, [new templates.Element('img', {'id': new templates.Attribute('add-node-mode-icon'), 'src': new templates.Attribute('app/img/nodes/unspecified-entity.svg'), 'title': new templates.Attribute('Create a new Unspecified Entity')}, null, void 0, false)], void 0, false), new templates.Element('div', {'style': new templates.Attribute('padding: 1px;'), 'class': new templates.Attribute('sbgn-toolbar-element')}, [new templates.Element('img', {'id': new templates.Attribute('add-edge-mode-icon'), 'src': new templates.Attribute('app/img/edges/consumption.svg'), 'title': new templates.Attribute('Create a new Consumption')}, null, void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-small sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('img', {'id': new templates.Attribute('delete-selected-simple-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/delete-simple.svg'), 'title': new templates.Attribute('Delete Selected Simple: Delete selected nodes and edges')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('delete-selected-smart-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/delete-smart.svg'), 'title': new templates.Attribute('Delete Selected Smart: Delete selected nodes and any processes they are involved in')}, null, void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-small sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('img', {'id': new templates.Attribute('undo-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/undo.svg'), 'title': new templates.Attribute('Undo: Undo the last operation')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('redo-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/redo.svg'), 'title': new templates.Attribute('Redo: Redo the last undone operation')}, null, void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-large sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('div', {'class': new templates.Attribute('inside-menu')}, [new templates.Element('img', {'id': new templates.Attribute('hide-selected-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/hide-selected.svg'), 'title': new templates.Attribute('Hide Selected: Hide selected nodes and any processes they are involved in')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('show-selected-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/show-selected.svg'), 'title': new templates.Attribute('Show Selected: Show selected nodes and any processes they are involved in, hiding the remaining nodes and their edges')}, null, void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-small sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('img', {'id': new templates.Attribute('collapse-selected-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/collapse-selected.svg'), 'title': new templates.Attribute('Collapse Selected: Collapse selected compound node to hide its members')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('expand-selected-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/expand-selected.svg'), 'title': new templates.Attribute('Expand Selected: Expand selected collapsed node to show its members')}, null, void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-small sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('div', {'class': new templates.Attribute('btn-group sbgn-toolbar-element sbgn-dd-list'), 'role': new templates.Attribute('group'), 'id': new templates.Attribute('align-list')}, [new templates.Element('button', {'id': new templates.Attribute('align-button'), 'title': new templates.Attribute('Align to First Selected: Align positions of selected nodes based on the first (if any) selected node'), 'type': new templates.Attribute('button'), 'class': new templates.Attribute('btn'), 'aria-haspopup': new templates.Attribute('true'), 'aria-expanded': new templates.Attribute('false')}, [new templates.Element('div', {'style': new templates.Attribute('height: 16px;')}, [new templates.Element('img', {'style': new templates.Attribute('float: left; height: 16px; width: auto;'), 'id': new templates.Attribute('sbgn-align-img'), 'src': new templates.Attribute('app/img/align/align.svg')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('button', {'id': new templates.Attribute('align-dd-button'), 'type': new templates.Attribute('button'), 'class': new templates.Attribute('btn dropdown-toggle'), 'data-toggle': new templates.Attribute('dropdown'), 'aria-haspopup': new templates.Attribute('true'), 'aria-expanded': new templates.Attribute('false')}, [new templates.Element('div', {'style': new templates.Attribute('height: 16px;')}, [new templates.Element('span', {'class': new templates.Attribute('caret')}, [], void 0, false), new templates.Element('span', {'class': new templates.Attribute('sr-only')}, [], void 0, false)], void 0, false)], void 0, false), new templates.Element('ul', {'id': new templates.Attribute('align-menu'), 'class': new templates.Attribute('dropdown-menu')}, [new templates.Element('li', void 0, [new templates.Element('a', {'class': new templates.Attribute('dd-list-href'), 'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-horizontal-top-icon')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.Attribute('app/img/align/align-horizontal-top.svg')}, null, void 0, true), new templates.Text('  Align Horizontal Top')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'class': new templates.Attribute('dd-list-href'), 'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-horizontal-middle-icon')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.Attribute('app/img/align/align-horizontal-middle.svg')}, null, void 0, true), new templates.Text('  Align Horizontal Middle')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'class': new templates.Attribute('dd-list-href'), 'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-horizontal-bottom-icon')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.Attribute('app/img/align/align-horizontal-bottom.svg')}, null, void 0, true), new templates.Text('  Align Horizontal Bottom')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'class': new templates.Attribute('dd-list-href'), 'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-vertical-left-icon')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.Attribute('app/img/align/align-vertical-left.svg')}, null, void 0, true), new templates.Text('  Align Vertical Left')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'class': new templates.Attribute('dd-list-href'), 'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-vertical-center-icon')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.Attribute('app/img/align/align-vertical-center.svg')}, null, void 0, true), new templates.Text('  Align Vertical Center')], void 0, false)], void 0, false), new templates.Element('li', void 0, [new templates.Element('a', {'class': new templates.Attribute('dd-list-href'), 'href': new templates.Attribute('#'), 'id': new templates.Attribute('align-vertical-right-icon')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.Attribute('app/img/align/align-vertical-right.svg')}, null, void 0, true), new templates.Text('  Align Vertical Right')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-small sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('img', {'id': new templates.Attribute('toggle-grid-snapping-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/grid.svg'), 'title': new templates.Attribute('Enable Grid: Show and snap to grid on mouse release')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('toggle-guidelines-snapping-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/guidelines.svg'), 'title': new templates.Attribute('Enable Guidelines: Enable and snap to alignment guidelines on mouse release')}, null, void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-large sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('div', {'class': new templates.Attribute('inside-menu')}, [new templates.Element('img', {'id': new templates.Attribute('search-by-label-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/search.svg'), 'title': new templates.Attribute('Search: Search and find (case insensitive) all nodes with specified label text, selecting them and highlighting them along with their processes')}, null, void 0, false), new templates.Element('input', {'id': new templates.Attribute('search-by-label-text-box'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'type': new templates.Attribute('label')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('highlight-neighbors-of-selected-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/highlight-neighbors-of-selected.svg'), 'title': new templates.Attribute('Highlight Neighbors of Selected: Highlight selected nodes and their neighbors by ghosting remaining nodes')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('remove-highlights-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/remove-highlights.svg'), 'title': new templates.Attribute('Remove Highlights: Remove any highlights')}, null, void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('menu-break-large sbgn-toolbar-element')}, [new templates.Text(' ')], void 0, false), new templates.Element('div', {'class': new templates.Attribute('inside-menu')}, [new templates.Element('img', {'id': new templates.Attribute('perform-layout-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/layout-cose.svg'), 'title': new templates.Attribute('Perform Layout: Perform a force-directed layout of current map, maintaining compound structures')}, null, void 0, false), new templates.Element('img', {'id': new templates.Attribute('layout-properties-icon'), 'class': new templates.Attribute('sbgn-toolbar-element'), 'src': new templates.Attribute('app/img/toolbar/layout-properties.svg'), 'title': new templates.Attribute('Layout Properties: Modify parameters used during layout')}, null, void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('table', {'id': new templates.Attribute('sbgn-inspector-and-canvas')}, [new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', {'id': new templates.Attribute('sbgn-network-container'), 'tabindex': new templates.Attribute('0')}, [], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.ViewInstance('inspector-view', {}), new templates.Text('                    ')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('layout-properties-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('general-properties-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('biogene-container'), 'style': new templates.Attribute('display: none')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('query-pathsbetween-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('prompt-save-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('file-save-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('prompt-confirmation-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('reaction-template-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('grid-properties-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('font-properties-table'), 'tabindex': new templates.Attribute('-1'), 'class': new templates.Attribute('modal fade'), 'role': new templates.Attribute('dialog')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('box')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('node_legend_modal'), 'class': new templates.Attribute('modal fade'), 'tabindex': new templates.Attribute('-1'), 'role': new templates.Attribute('dialog')}, [new templates.Element('div', {'class': new templates.Attribute('modal-dialog sbgn-modal-dialog'), 'style': new templates.Attribute('width: 504px; height: 325px;')}, [new templates.Element('div', {'class': new templates.Attribute('modal-content')}, [new templates.Element('div', {'class': new templates.Attribute('modal-body')}, [new templates.Element('div', {'class': new templates.Attribute('sbgn-frame')}, [new templates.Element('h2', {'class': new templates.Attribute('sbgn-text')}, [new templates.Text('Node Legend')], void 0, false), new templates.Element('img', {'src': new templates.Attribute('app/img/node_legend_sbgn.png'), 'alt': new templates.Attribute(''), 'class': new templates.Attribute('centered img-responsive sbgn-legend')}, null, void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('edge_legend_modal'), 'class': new templates.Attribute('modal fade'), 'tabindex': new templates.Attribute('-1'), 'role': new templates.Attribute('dialog')}, [new templates.Element('div', {'class': new templates.Attribute('modal-dialog sbgn-modal-dialog'), 'style': new templates.Attribute('width: 325px; height: 285px;')}, [new templates.Element('div', {'class': new templates.Attribute('modal-content')}, [new templates.Element('div', {'class': new templates.Attribute('modal-body')}, [new templates.Element('div', {'class': new templates.Attribute('sbgn-frame')}, [new templates.Element('h2', {'class': new templates.Attribute('sbgn-text')}, [new templates.Text('Edge Legend')], void 0, false), new templates.Element('img', {'src': new templates.Attribute('app/img/interaction_legend_sbgn.png'), 'alt': new templates.Attribute(''), 'class': new templates.Attribute('centered img-responsive sbgn-legend')}, null, void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('about_modal'), 'class': new templates.Attribute('modal fade'), 'tabindex': new templates.Attribute('-1'), 'role': new templates.Attribute('dialog')}, [new templates.Element('div', {'class': new templates.Attribute('modal-dialog modal-sm sbgn-modal-dialog')}, [new templates.Element('div', {'class': new templates.Attribute('modal-content')}, [new templates.Element('div', {'class': new templates.Attribute('modal-body')}, [new templates.Element('div', {'class': new templates.Attribute('sbgn-frame')}, [new templates.Element('h2', {'class': new templates.Attribute('sbgn-text')}, [new templates.Text('About')], void 0, false), new templates.Element('table', {'width': new templates.Attribute('100%'), 'height': new templates.Attribute('100%'), 'align': new templates.Attribute('center'), 'valign': new templates.Attribute('center')}, [new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('p', {'id': new templates.Attribute('about-newt-version'), 'class': new templates.Attribute('sbgn-text')}, [new templates.Text('Newt Editor version 0.1')], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/newt-logo.png'), 'alt': new templates.Attribute(''), 'class': new templates.Attribute('centered img-responsive'), 'style': new templates.Attribute('margin-bottom: 10px;')}, null, void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('p', {'class': new templates.Attribute('address-text marg')}, [new templates.Text('i-Vis Information Visualization Group')], void 0, false), new templates.Element('p', {'class': new templates.Attribute('address-text')}, [new templates.Text('Bilkent University, Ankara, Turkey')], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('p', {'class': new templates.Attribute('address-text marg')}, [new templates.Element('a', {'href': new templates.Attribute('mailto:ivis@cs.bilkent.edu.tr'), 'target': new templates.Attribute('_top')}, [new templates.Text('ivis@cs.bilkent.edu.tr')], void 0, false)], void 0, false), new templates.Element('p', {'class': new templates.Attribute('address-text')}, [new templates.Element('a', {'href': new templates.Attribute('https://github.com/iVis-at-Bilkent/chise.js'), 'target': new templates.Attribute('_blank')}, [new templates.Text('https://github.com/iVis-at-Bilkent/newt')], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('quick_help_modal'), 'class': new templates.Attribute('modal fade'), 'tabindex': new templates.Attribute('-1'), 'role': new templates.Attribute('dialog')}, [new templates.Element('div', {'class': new templates.Attribute('modal-dialog sbgn-modal-dialog'), 'style': new templates.Attribute('width: 420px')}, [new templates.Element('div', {'class': new templates.Attribute('modal-content')}, [new templates.Element('div', {'class': new templates.Attribute('modal-body')}, [new templates.Element('div', {'class': new templates.Attribute('sbgn-frame quick-help')}, [new templates.Element('h2', {'class': new templates.Attribute('sbgn-text')}, [new templates.Text('Quick Help')], void 0, false), new templates.Element('div', {'class': new templates.Attribute('quick-help-content')}, [new templates.Element('table', {'align': new templates.Attribute('center'), 'valign': new templates.Attribute('center')}, [new templates.Text(' '), new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('b', void 0, [new templates.Text('File | Samples | <sample file>')], void 0, false), new templates.Text(':Load a sample model from file in SBGN-ML')], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('b', void 0, [new templates.Text('File | Load')], void 0, false), new templates.Text(':Load a model from file in SBGN-ML')], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('b', void 0, [new templates.Text('Left-click')], void 0, false), new templates.Text(':Full label of the node')], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('b', void 0, [new templates.Text('Right-click')], void 0, false), new templates.Text(':Context menu for associated object')], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('b', void 0, [new templates.Text('Ctrl + drag')], void 0, false), new templates.Text(':Transfer a node in and out of a compound node')], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('loading-small-template')}, [new templates.Text('<p class=\"sbgn-text\"> <%= name %> </p><img class=\"centered\" src=\"app/img/loading-small.gif\" height=\"auto\" width=\"auto\" align=\"middle\">')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('layout-settings-template')}, [new templates.Text('<div class=\"modal-dialog modal-sm sbgn-modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Layout Properties</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table\"> <tbody><tr><td><span class=\"add-on layout-text\"> Node Repulsion </span></td><td><input id=\"node-repulsion\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= nodeRepulsion %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Ideal Edge Length </span></td><td><input id=\"ideal-edge-length\" type=\"text\" min=\"5\" class=\"sbgn-input-small layout-text float-input\" value= <%= idealEdgeLength %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Edge Elasticity </span></td><td><input id=\"edge-elasticity\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= edgeElasticity %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Nesting Factor </span></td><td><input id=\"nesting-factor\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= nestingFactor %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Gravity </span></td><td><input id=\"gravity\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravity %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Gravity Range   </span></td><td><input id=\"gravity-range\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravityRange %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Compound Gravity  </span></td><td><input id=\"gravity-compound\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravityCompound %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Compound Gravity Range </span></td><td><input id=\"gravity-range-compound\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= gravityRangeCompound %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Number of Iterations </span></td><td><input id=\"num-iter\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text integer-input\" value= <%= numIter %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Tiling Vertical Padding </span></td><td><input id=\"tiling-padding-vertical\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text integer-input\" value= <%= tilingPaddingVertical %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Tiling Horizontal Padding </span></td><td><input id=\"tiling-padding-horizontal\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text integer-input\" value= <%= tilingPaddingHorizontal %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Tile Disconnected </span></td><td><input id=\"tile\" type=\"checkbox\" class=\"layout-text\" <% if (tile){ %> checked<%}%>></td></tr><tr><td><span class=\"add-on layout-text\"> Animate </span></td><td><input id=\"animate\" type=\"checkbox\" class=\"layout-text\" <% if (animate === \\'during\\'){ %> checked<%}%>></td></tr><tr><td><span class=\"add-on layout-text\"> Incremental </span></td><td><input id=\"incremental\" type=\"checkbox\" class=\"layout-text\" <% if (!randomize){ %> checked<%}%>></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"save-layout\" class=\"btn btn-default\"  >Save</button><button id=\"default-layout\" class=\"btn btn-default\">Default</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('general-properties-template')}, [new templates.Text('<div class=\"modal-dialog modal-sm sbgn-modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Properties</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table\"> <tbody><tr><td><span class=\"add-on layout-text\"> Compound Padding </span></td><td><input id=\"compound-padding\" type=\"text\" class=\"sbgn-input-small layout-text integer-input\" min=\"0\" max=\"100\" value= <%= compoundPadding %> > %</td></tr><tr><td><span class=\"add-on layout-text\"> Label Size </span></td><td><select id=\"dynamic-label-size-select\"  class=\"sbgn-input-medium\" name=\"dynamic-label-size\"><option id=\"dynamic-label-size_small\" value=\"small\" <% if (dynamicLabelSize == \\'small\\'){ %> selected<%}%> > Small </option><option id=\"dynamic-label-size_regular\" value=\"regular\" <% if (dynamicLabelSize == \\'regular\\'){ %> selected<%}%> > Regular </option><option id=\"dynamic-label-size_large\" value=\"large\" <% if (dynamicLabelSize == \\'large\\'){ %> selected<%}%> > Large </option></select></td></tr><tr><td><span class=\"add-on layout-text\"> Fit Labels To Nodes </span></td><td><input id=\"fit-labels-to-nodes\" type=\"checkbox\" class=\"layout-text\" <% if (fitLabelsToNodes){ %> checked<%}%>></td></tr><tr><td><span class=\"add-on layout-text\"> Rearrange After Expand-Collapse </span></td><td><input id=\"rearrange-after-expand-collapse\" type=\"checkbox\" class=\"layout-text\" <% if (rearrangeAfterExpandCollapse){ %> checked<%}%>></td></tr><tr><td><span class=\"add-on layout-text\"> Animate on Drawing Changes </span></td><td><input id=\"animate-on-drawing-changes\" type=\"checkbox\" class=\"layout-text\" <% if (animateOnDrawingChanges){ %> checked<%}%>></td></tr><tr><td><span class=\"add-on layout-text\"> Adjust Node Label Font Size Automatically </span></td><td><input id=\"adjust-node-label-font-size-automatically\" type=\"checkbox\"  class=\"layout-text\" <% if (adjustNodeLabelFontSizeAutomatically){ %> checked<%}%>></td></tr><tr><td><span class=\"add-on layout-text\"> Map Color Scheme </span></td><td><select id=\"map-color-scheme-select\" name=\"map-color-scheme\"><% var i=0; for( var scheme_id in mapColorSchemes) { %><option id=\"map-color-scheme_<%= i %>\" value=\"<%= scheme_id %>\" <% if (mapColorScheme == scheme_id){ %> selected<%}%> > <%= mapColorSchemes[scheme_id][\\'name\\'] %> </option><% i++;} %></select></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"save-sbgn\" class=\"btn btn-default\" >Save</button><button id=\"default-sbgn\" class=\"btn btn-default\">Default</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('query-pathsbetween-template')}, [new templates.Text('<div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 500px;\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Paths Between Query</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table\"> <tbody><tr><th colspan=2 style=\"padding-left: 0px;\" align=\"left\"><span class=\"add-on layout-text\"> Find all paths of specified length limit between any two entities of the specified set </span></th></tr><tr><td><span class=\"add-on layout-text\"> Gene Symbols: </span><br><textarea id=\"query-pathsbetween-gene-symbols\" rows=\"4\" cols=\"86\" style=\"width: 206px;\"><%= geneSymbols %></textarea></td><td><table frame=\"box\" style=\"border-color: rgb(204, 204, 204)\"><caption style=\"text-align: left;\">Stop Distance</caption><tr><td colspan=2>Length limit</td><td style=\"padding: 10px;\"><input id=\"query-pathsbetween-length-limit\" type=\"text\" min=\"1\" class=\"sbgn-input-small layout-text integer-input\" style=\"width: 90px;\" value= <%= lengthLimit %> > </td></tr></table></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"save-query-pathsbetween\" class=\"btn btn-default\" >OK</button><button id=\"cancel-query-pathsbetween\" class=\"btn btn-default\">Cancel</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('prompt-save-template')}, [new templates.Text('<div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 350px;\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Save</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table\"> <tbody><tr><th style=\"padding-left: 0px;\" align=\"left\"><span class=\"add-on layout-text\"> Do you want to save any change(s) to the map? </span></th></tr><tr id=\"prompt-save-buttons\" style=\"padding-bottom: 0px; margin-bottom: 0px;\"><td></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"prompt-save-accept\" class=\"btn btn-default\" >Save</button><button id=\"prompt-save-reject\" class=\"btn btn-default\">Don\\'t Save</button><button id=\"prompt-save-cancel\" class=\"btn btn-default\">Cancel</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('file-save-template')}, [new templates.Text('<div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 350px;\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Save</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table\" style=\"margin: auto;\"> <tbody><tr><td style=\"padding-left: 0px;\" align=\"left\"><span class=\"add-on layout-text\"> Filename </span></td><td><input id=\"file-save-filename\" type=\"text\" /></td></tr><tr id=\"file-save-buttons\" style=\"padding-bottom: 0px; margin-bottom: 0px;\"><td></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"file-save-accept\" class=\"btn btn-default\">Save</button><button id=\"file-save-cancel\" class=\"btn btn-default\">Cancel</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('prompt-confirmation-template')}, [new templates.Text('<div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 400px;\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Confirmation</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table\" style=\"margin: auto;\"> <tbody><tr><th style=\"padding-left: 0px;\" align=\"left\"><span class=\"add-on layout-text\">All unsaved changes will be lost. Do you want to continue?</span></th></tr><tr id=\"prompt-confirmation-buttons\" style=\"padding-bottom: 0px; margin-bottom: 0px;\"><td></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"prompt-confirmation-accept\" class=\"btn btn-default\">Yes</button><button id=\"prompt-confirmation-cancel\" class=\"btn btn-default\">No</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('reaction-template-template')}, [new templates.Text('<div class=\"modal-dialog modal-sm sbgn-modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Template</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table\"><tbody><tr><td style=\"padding-bottom: 10px;\" align=\"right\" valign=\"middle\"><span class=\"add-on layout-text\"> <b> Type </b> </span></td><td><select id=\"reaction-template-type-select\" class=\\'sbgn-input-medium layout-text\\' name=\"reaction-template-type\"><option id=\"reaction-template-type-association\" value=\"association\" <% if (templateType == \\'association\\'){ %> selected<%}%> > Association </option><option id=\"reaction-template-type-dissociation\" value=\"dissociation\" <% if (templateType == \\'dissociation\\'){ %> selected<%}%> > Dissociation </option></select></td></tr><tr><td align=\"center\" valign=\"middle\" style=\"margin-left: 5px;\"><span class=\"add-on layout-text\"> <b> Input </b> </span></td><td align=\"center\" valign=\"middle\" style=\"margin-right: 5px;\"><span class=\"add-on layout-text\"> <b> Output </b> </span></td></tr><tr><td><%= getInputHtml() %></td><td><%= getOutputHtml() %></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"create-template\" class=\"btn btn-default\" >Create</button><button id=\"cancel-template\" class=\"btn btn-default\">Cancel</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('grid-properties-template')}, [new templates.Text('<div class=\"modal-dialog sbgn-modal-dialog\" style=\"width: 573px;\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Grid  and Guidelines Properties</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table dialog-table property-table\" style=\"padding-bottom: 4px;\"> <tbody><tr> <th> Grid </th> </tr><tr><td style=\"padding-right: 20px;\"><input id=\"show-grid\" type=\"checkbox\" class=\"layout-text\" <% if (showGrid){ %> checked<%}%>><span class=\"add-on layout-text\"> Show Grid </span></td><td style=\"padding-right: 25px;\"><span class=\"add-on layout-text\"> Grid Size </span><input id=\"grid-size\" type=\"text\" min=\"5\" class=\"sbgn-input-small layout-text integer-input\" value= <%= gridSize %> ></td><td><input id=\"auto-resize-nodes\" type=\"checkbox\" class=\"layout-text\" <% if (autoResizeNodes){ %> checked<%}%>><span class=\"add-on layout-text\"> Auto  Resize Nodes </span></td></tr></tbody></table><table class=\"table-condensed layout-table dialog-table property-table\" style=\"padding-bottom: 4px;\"><tbody><tr> <th> Snap Policy </th> </tr><tr><td><input id=\"no-snap\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (!discreteDrag && !snapToGrid && ! snapToAlignmentLocation){ %> checked<%}%>><span class=\"add-on layout-text\"> No Snap </span></td><td><input id=\"discrete-drag\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (discreteDrag){ %> checked<%}%>><span class=\"add-on layout-text\"> Discrete Drag </span></td><td><input id=\"snap-to-grid\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (snapToGrid){ %> checked<%}%>><span class=\"add-on layout-text\"> Snap to Grid </span></td><td><input id=\"snap-to-alignment-location\" type=\"radio\" name=\"snap-policy\" class=\"layout-text\" <% if (snapToAlignmentLocation){ %> checked<%}%>><span class=\"add-on layout-text\"> Snap to Alignment Location </span></td></tr></tbody></table><table class=\"table-condensed layout-table dialog-table property-table\" style=\"padding-bottom: 4px !important;\"><tbody><tr> <th colspan=\"100%\"> Alignment Guidelines </th> </tr><tr><td style=\"padding-bottom: 20px !important; width: 140px;\"><span class=\"add-on layout-text\"> Reference Guideline</span></td><td style=\"padding-bottom: 20px !important;\"><input id=\"show-init-Pos-Alignment\" type=\"checkbox\" class=\"layout-text\" <% if (showInitPosAlignment){ %> checked<%}%>></td><td style=\"padding-bottom: 20px !important; padding-left: 0px;\">Style</td><td style=\"padding-bottom: 20px !important;\"><input id=\"init-Pos-Alignment-Color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= initPosAlignmentColor %> ></td><td style=\"padding-bottom: 20px !important;\"><select name=\"init-Pos-Alignment-Line\"><option value=\"0,0\" <% if (initPosAlignmentLine[0] == 0 && initPosAlignmentLine[1] == 0){ %> selected<% }%> > Solid </option><option value=\"3,5\" <% if (initPosAlignmentLine[0] != 0 || initPosAlignmentLine[1] != 0){ %> selected<% }%> > Dashed </option></select></td></tr><tr><td style=\"padding-bottom: 20px !important; width: 140px;\"><span class=\"add-on layout-text\"> Geometric Guidelines </span></td><td style=\"padding-bottom: 20px !important;\"><input id=\"show-geometric-guidelines\" type=\"checkbox\" class=\"layout-text\" <% if (showGeometricGuidelines){ %> checked<%}%>></td><td style=\"padding-bottom: 20px !important; padding-left: 0px;\">Style</td><td style=\"padding-bottom: 20px !important;\"><input id=\"geometric-guideline-color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= guidelineColor %> ></td><td style=\"padding-bottom: 20px !important;\"><select id=\"geometric-Alignment-Line\"><option value=\"0,0\" <% if (lineDash[0] == 0 && lineDash[1] == 0){ %> selected<% }%> > Solid </option><option value=\"3,5\" <% if (lineDash[0] != 0 || lineDash[1] != 0){ %> selected<% }%> > Dashed </option></select></td><td style=\"padding-bottom: 20px !important; padding-left: 35px;\"><span class=\"add-on layout-text\"> Range </span></td><td style=\"padding-bottom: 20px !important;\"><input id=\"geometric-alignment-range\" type=\"text\" class=\"sbgn-input-small layout-text float-input\" value= <%= geometricAlignmentRange %> ></td></tr><tr><td rowspan=\"2\"><span class=\"add-on layout-text\"> Distribution Guidelines </span></td><td rowspan=\"2\"><input id=\"show-distribution-guidelines\" type=\"checkbox\" class=\"layout-text\" <% if (showDistributionGuidelines){ %> checked<%}%>></td><td style=\"padding-left: 0px;\"><span class=\"add-on layout-text\"> Horizontal </span></td><td><input id=\"horizontal-guideline-color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= horizontalGuidelineColor %> ></td><td><select name=\"horizontal-Dist-Alignment-Line\"><option value=\"0,0\" <% if (horizontalDistLine[0] == 0 && horizontalDistLine[1] == 0){ %> selected<% }%> > Solid </option><option value=\"3,5\" <% if (horizontalDistLine[0] != 0 || horizontalDistLine[1] != 0){ %> selected<% }%> > Dashed </option></select></td><td rowspan=\"2\" style=\"padding-left: 35px;\"><span class=\"add-on layout-text\"> Range </span></td><td rowspan=\"2\"><input id=\"distribution-alignment-range\" type=\"text\" class=\"sbgn-input-small layout-text float-input\" value= <%= distributionAlignmentRange %> ></td></tr><tr><td style=\"padding-left: 0px;><span class=\"add-on layout-text\"> Vertical </span></td><td><input id=\"vertical-guideline-color\" type=\"color\" class=\"sbgn-input-small layout-text\" value= <%= verticalGuidelineColor %> ></td><td><select name=\"vertical-Dist-Alignment-Line\"><option value=\"0,0\" <% if (verticalDistLine[0] == 0 && verticalDistLine[1] == 0){ %> selected<% }%> > Solid </option><option value=\"3,5\" <% if (verticalDistLine[0] != 0 || verticalDistLine[1] != 0){ %> selected<% }%> > Dashed </option></select></td><tr><td style=\"padding-top: 20px !important; width: 140px;\"><span class=\"add-on layout-text\"> Guideline Tolerance </span></td><td style=\"padding-top: 20px !important;\"><input id=\"guideline-tolerance\" type=\"text\" min=\"0\" class=\"sbgn-input-small layout-text float-input\" value= <%= guidelineTolerance %> ></td></tr></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"save-grid\" class=\"btn btn-default\" >Save</button><button id=\"default-grid\" class=\"btn btn-default\">Default</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('font-properties-template')}, [new templates.Text('<div class=\"modal-dialog modal-sm sbgn-modal-dialog\"><div class=\"modal-content\"><div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button><h4 class=\"modal-title\">Font Properties</h4></div><div class=\"modal-body\"><table class=\"table-condensed layout-table\"> <tbody><tr><td><span class=\"add-on layout-text\"> Font Family </span></td><td><%= getFontFamilyHtml() %></td></tr><tr><td><span class=\"add-on layout-text\"> Font Size </span></td><td><input id=\"font-properties-font-size\" type=\"text\" min=\"1\" class=\"sbgn-input-small layout-text integer-input\" value= <%= fontSize %> ></td></tr><tr><td><span class=\"add-on layout-text\"> Font Weight </span></td><td><select id=\"font-properties-select-font-weight\" class=\\'input-medium layout-text\\' name=\"font-weight-select\"><option id=\"font-properties-font-weight-none\" value=\"\" <% if (fontWeight == \\'\\'){ %> selected<%}%> >  </option><option id=\"font-properties-font-weight-lighter\" value=\"lighter\" <% if (fontWeight == \\'lighter\\'){ %> selected<%}%> > Lighter </option><option id=\"font-properties-font-weight-normal\" value=\"normal\" <% if (fontWeight == \\'normal\\'){ %> selected<%}%> > Normal </option><option id=\"font-properties-font-weight-bold\" value=\"bold\" <% if (fontWeight == \\'bold\\'){ %> selected<%}%> > Bold </option><option id=\"font-properties-font-weight-bolder\" value=\"bolder\" <% if (fontWeight == \\'bolder\\'){ %> selected<%}%> > Bolder </option></select></td></tr><tr><td><span class=\"add-on layout-text\"> Font Type </span></td><td><select id=\"font-properties-select-font-style\" class=\\'input-medium layout-text\\' name=\"font-style-select\"><option id=\"font-properties-font-style-none\" value=\"\" <% if (fontStyle == \\'\\'){ %> selected<%}%> >  </option><option id=\"font-properties-font-style-normal\" value=\"normal\" <% if (fontStyle == \\'normal\\'){ %> selected<%}%> > Normal </option><option id=\"font-properties-font-style-italic\" value=\"italic\" <% if (fontStyle == \\'italic\\'){ %> selected<%}%> > Italic </option><option id=\"font-properties-font-style-oblique\" value=\"oblique\" <% if (fontStyle == \\'oblique\\'){ %> selected<%}%> > Oblique </option></select></td></tr></tbody></table></div><div class=\"modal-footer\" style=\"text-align: center\"><button id=\"set-font-properties\" class=\"btn btn-default\" >Set</button></div></div></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('biogene-template')}, [new templates.Text('<div class=\\'node-details-text\\'><table class=\"table table-condensed table-striped\" cellspacing=\"10\"> <tbody><tr class=\"biogene-info biogene-description node-details-summary\"><th valign=\"top\">Gene Summary:</th><td colspan=\"2\" class=\"expandable\"><%=geneSummary %></td></tr><tr class=\"biogene-info biogene-aliases\"><th valign=\"top\">Aliases:</th><td><%=geneAliases %></td></tr><tr class=\"biogene-info biogene-description\"><th>Description:</th><td class=\"expandable\"><%=geneDescription %></td></tr><tr class=\"biogene-info biogene-location\"><th valign=\"top\">Chromosome Location:</th><td><%=geneLocation %></td></tr><tr class=\"biogene-info biogene-uniprot-links\"><th valign=\"top\">UniProt ID:</th><td><a href=\\'http://www.uniprot.org/uniprot/<%= geneUniprotId %>\\' target=\\'blank\\'><%=geneUniprotId %></a><span class=\\'biogene-uniprot-links-extra\\'><%= geneUniprotLinks %></span></td></tr><tr class=\"biogene-info biogene-id\"><th valign=\"top\">Gene ID:</th><td><a href=\\'http://www.ncbi.nlm.nih.gov/gene?term=<%= geneId %>\\' target=\\'blank\\'><%=geneId %></a></td></tr></tbody></table></div>')], void 0, false), new templates.Element('script', {'type': new templates.Attribute('text/template'), 'id': new templates.Attribute('uniprot-link-template')}, [new templates.Text('<a href=\"http://www.uniprot.org/uniprot/<%= id %>\" target=\"_blank\"><%=id %></a>')], void 0, false)])};views.register('Tail', '').parse = function() {return this.template = new templates.Template([])};views.register('inspector-view', '\\n\\n        <div id =\"inspector-tab-area\" tabindex=\"1\">\\n\\n            <div id=\"inspector-tabs\">\\n\\n                <ul class=\"nav nav-tabs\">\\n                    <li class = \"active tab-link\"><a data-toggle=\"tab\"  href=\"#chat-area\">Chat</a></li>\\n                    <li class = \"tab-link\"><a data-toggle=\"tab\" href=\"#image-area\">Image Share</a></li>\\n                    <li class = \"tab-link\"><a data-toggle=\"tab\" href=\"#sbgn-inspector\">Sbgn Inspector</a></li>\\n                    <li class = \"tab-link\"><a data-toggle=\"tab\" href=\"#command-history-area\">Operations</a></li>\\n                    <li class = \"tab-link\"><a data-toggle=\"tab\" href=\"#factoid-area\">Factoid</a></li>\\n                </ul>\\n            </div>\\n            <div class=\"tab-content\">\\n\\n\\n\\n                <!--<div id=\"sbgn-inspector\" class=\"tab-pane\"></div>      -->\\n\\n                <div id=\"sbgn-inspector\" class=\"tab-pane\">\\n                    <ul class=\"nav nav-tabs\">\\n                        <li id=\\'inspector-style-tab\\' class=\"chise-tab\"><a data-toggle=\"tab\" href=\"#sbgn-inspector-style\"><img width=\"18px\" height=\"18px\" src=\"app/img/tabs/properties.svg\"/> ;Properties</a></li>\\n                        <li id=\\'inspector-palette-tab\\' class=\"chise-tab active\"><a data-toggle=\"tab\" href=\"#sbgn-inspector-palette\"><img width=\"18px\" height=\"18px\" src=\"app/img/tabs/palette.svg\"/> ;Palette</a></li>\\n                    </ul>\\n                    <div class=\"tab-content\">\\n                        <div id=\"sbgn-inspector-style\" class=\"tab-pane fade\">\\n                            <div id=\"sbgn-inspector-style-panel-group\" class=\"panel-group\">\\n                            </div>\\n                        </div>\\n                        <div id=\"sbgn-inspector-palette\" class=\"tab-pane fade in active\">\\n                            <div class=\"panel-group\">\\n                                <div class=\"panel\">\\n                                    <div class=\"panel-heading\" data-toggle=\"collapse\" data-target=\"#expand-collapse-pd-nodes-palette\">\\n                                        <p class=\"panel-title accordion-toggle\">\\n                                            Process Description Nodes\\n                                        </p>\\n                                    </div>\\n                                    <div id=\"expand-collapse-pd-nodes-palette\" class=\"panel-collapse collapse in\">\\n                                        <div class=\"panel-body\">\\n                                            <table id=\"pd-node-palette\" class=\"element-palette node-palette\">\\n                                                <tbody>\\n                                                <tr>\\n                                                    <td><div><img src=\"app/img/nodes/unspecified-entity.svg\" value=\"unspecified-entity\" title=\"Unspecified Entity\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/simple-chemical.svg\" value=\"simple-chemical\" title=\"Simple Chemical\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/macromolecule.svg\" value=\"macromolecule\" title=\"Macromolecule\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/nucleic-acid-feature.svg\" value=\"nucleic-acid-feature\" title=\"Nucleic Acid Feature\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/perturbing-agent.svg\" value=\"perturbing-agent\" title=\"Perturbing Agent\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/source-and-sink.svg\" value=\"source-and-sink\" title=\"Source and Sink\"/></div></td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td><div><img src=\"app/img/nodes/complex.svg\" value=\"complex\" title=\"Complex\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/process.svg\" value=\"process\" title=\"Process\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/omitted-process.svg\" value=\"omitted-process\" title=\"Omitted Process\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/uncertain-process.svg\" value=\"uncertain-process\" title=\"Uncertain Process\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/association.svg\" value=\"association\" title=\"Association\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/dissociation.svg\" value=\"dissociation\" title=\"Dissociation\"/></div></td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td><div><img src=\"app/img/nodes/phenotype.svg\" value=\"phenotype\" title=\"Phenotype\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/compartment.svg\" value=\"compartment\" title=\"Compartment\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/tag.svg\" value=\"tag\" title=\"Tag\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/and.svg\" value=\"and\" title=\"AND\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/or.svg\" value=\"or\" title=\"OR\"/></div></td>\\n                                                    <td><div><img src=\"app/img/nodes/not.svg\" value=\"not\" title=\"NOT\"/></div></td>\\n                                                </tr>\\n                                                </tbody>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\"panel\">\\n                                    <div class=\"panel-heading\" data-toggle=\"collapse\" data-target=\"#expand-collapse-pd-edges-palette\">\\n                                        <p class=\"panel-title accordion-toggle\">\\n                                            Process Description Edges\\n                                        </p>\\n                                    </div>\\n                                    <div id=\"expand-collapse-pd-edges-palette\" class=\"panel-collapse collapse in\">\\n                                        <div class=\"panel-body\">\\n                                            <table id=\"pd-edge-palette\" class=\"element-palette edge-palette\">\\n                                                <tbody>\\n                                                <tr>\\n                                                    <td><div><img src=\"app/img/edges/consumption.svg\" value=\"consumption\" title=\"Consumption\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/production.svg\" value=\"production\" title=\"Production\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/modulation.svg\" value=\"modulation\" title=\"Modulation\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/stimulation.svg\" value=\"stimulation\" title=\"Stimulation\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/catalysis.svg\" value=\"catalysis\" title=\"Catalysis\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/inhibition.svg\" value=\"inhibition\" title=\"Inhibition\"/></div></td>\\n                                                </tr>\\n                                                <tr>\\n                                                    <td><div><img src=\"app/img/edges/necessary-stimulation.svg\" value=\"necessary-stimulation\" title=\"Necessary Stimulation\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/consumption.svg\" value=\"logic-arc\" title=\"Logic Arc\"/></div></td>\\n                                                    <td><div><img src=\"app/img/edges/consumption.svg\" value=\"equivalence-arc\" title=\"Equivalance Arc\"/></div></td>\\n                                                </tr>\\n                                                </tbody>\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div id = \"factoid-area\" class = \"tab-pane\">\\n\\n                    <div id= \"factoid-input-container\">\\n\\n\\n                        <table  border=\"0\" cellpadding=\"2\" width=\"100%\" align=\"top\">\\n                            <tbody>\\n\\n\\n                            <tr>\\n                                <td class=\\'instructions\\'>Load a manuscript from file </td>\\n                            </tr>\\n                            <tr>\\n                                <td>\\n                                    <label for=\"factoid-file-input\" class=\"image-file\">\\n                                        <i class=\"fa fa-file-text-o\"></i> Select File\\n                                    </label>\\n\\n                                    <input type=\"file\" id=\"factoid-file-input\" accept=\".txt,.pdf\">\\n                                </td>\\n\\n                            </tr>\\n\\n                            <tr>\\n                                <td align=\"left\" height=\"8\">\\n                                    <b><font color=white  face=\"Verdana\" size=\"2\">Or&nbsp;</font></b>\\n                                </td>\\n                            </tr>\\n\\n                            <!--<tr>-->\\n                            <!--<td  class = \"instructions\"  align=\"left\" height=\"15\">-->\\n                            <!--Enter PMC ID: <input id=\"pmcBox\" type = \"text\" value = <%= pmcID %>></input>-->\\n                            <!--<input type=\"button\" id = \"pmc-id-submit-button\"  value=\"Load\">-->\\n\\n\\n                            <tr>\\n                                <td  class = \"instructions\"  align=\"left\" height=\"15\">\\n                                    Write/paste directly into the text box\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td  valign=\"top\" align=\"left\" >\\n                                    <textarea rows=\"30\" id=\"factoidBox\"> </textarea>\\n                                </td>\\n\\n\\n                            </tr>\\n\\n\\n                            <tr>\\n                                <td><input type=\"button\" id = \"factoid-text-clear-button\"  value=\"Clear\"> &nbsp;&nbsp;&nbsp;\\n\\n                                    <input type=\"button\" id = \"factoid-text-submit-button\"  value=\"Submit\"  class=\\'upload\\'>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n\\n                    </div>\\n\\n                </div>\\n\\n                <div id =\"chat-area\"  class=\"tab-pane fade in active\"\">\\n                    <div id = \"users\" as=\"container\"  on-change = \"onScroll()\">\\n                        <!--<ul id =\"user-list\" as = \"list\">-->\\n                        <form action=\"\"\">\\n                        {{each _page.doc.userIds as #pUserId}}\\n                        <!--<li>-->\\n                        <view is=\"chat-user\"></view>\\n                        <!--</li>-->\\n                        {{/each}}\\n                        </form>\\n                        <!--</ul>-->\\n\\n                    </div>\\n\\n                    <ul id=\"messages\" as=\"list\"  >\\n                        {{each _page.list as #message}}\\n                        <view is=\"chat-message\"></view>\\n                        {{/each}}\\n                    </ul>\\n\\n                    <button id = \"clear-history\" class = \"btn  btn-mini\" on-click =\"clearHistory()\">Clear chat </button>\\n\\n                    <!--</div>-->\\n                    <div id=\"inputs\">\\n                        User name: <input id=\"inputs-name\" value=\"{{_page.doc.users[_session.userId].name}}\">\\n                        <button id = \"change-user-color\" class = \"btn btn-mini\" on-click =\"changeColorCode()\">New user color</button>\\n                        <form id=\"inputs-form\" on-submit=\"add()\">\\n                            <textarea id=\"inputs-comment\" rows = \"3\", wrap = \"soft\" >{{_page.newComment}}</textarea>\\n                            <button  class = \"btn btn-info\" id = \"send-message\">Send</button>\\n\\n                        </form>\\n                    </div>\\n                </div>\\n\\n                <div id = \"image-area\" class=\"tab-pane\">\\n                    <div id = \"receivedImages\" class=\"tab-pane\">\\n                        {{ each _page.doc.images as #imageFile}}\\n                        <br>\\n                        {{#imageFile.filePath}}\\n                        <div class = image> <img src= \"{{#imageFile.img}}\" onclick =\"openImage(this)\" onmouseover =\"showQTip(this)\" /> </div>\\n                        {{/each}}\\n                    </div>\\n\\n\\n\\n                    <div id = \"upload-image\">\\n                        <label for=\"file-upload\" class=\"image-file\">\\n                            <i class=\"fa fa-cloud-upload\"></i> Upload Image\\n                        </label>\\n\\n                        <div><input type=\"file\" id=\"file-upload\" accept=\"image/*\" on-change = \"uploadFile($event)\" value = {{_page.newFile}}></div>\\n\\n                    </div>\\n\\n                </div>\\n\\n                <div id =\"command-history-area\" class=\"tab-pane\" as = \"list\">\\n                    <ul id = \"command-messages\">\\n                    <!--<ul id =\"command-list\" as = \"list\" >-->\\n                    {{each _page.doc.history as #pCommand}}\\n                    <li> <b>{{#pCommand.userName}} {{_page.showTime && formatTime(#pCommand)}} > </b>{{#pCommand.opName}} {{#pCommand.opTarget}} {{formatObj(#pCommand.elId)}} {{#pCommand.opAttr}} {{formatObj(#pCommand.param)}}\\n                    </li>\\n                    {{/each}}\\n                    <!--</ul>-->\\n                    </ul>\\n                </div>\\n\\n            </div>\\n\\n\\n        </div>\\n\\n\\n        <audio id=\"notificationAudio\" src=\"http://www.talkingwav.com/various/beep_02.wav\" preload=\"auto\"></audio>\\n\\n\\n        <div id =\"unitTestArea\"> <button class=\"btn btn-info btn-mini\" on-click = \"runUnitTests()\"> Test</button></div>\\n\\n        ').parse = function() {return this.template = new templates.Template([new templates.Element('div', {'id': new templates.Attribute('inspector-tab-area'), 'tabindex': new templates.Attribute('1')}, [new templates.Element('div', {'id': new templates.Attribute('inspector-tabs')}, [new templates.Element('ul', {'class': new templates.Attribute('nav nav-tabs')}, [new templates.Element('li', {'class': new templates.Attribute('active tab-link')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#chat-area')}, [new templates.Text('Chat')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('tab-link')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#image-area')}, [new templates.Text('Image Share')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('tab-link')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#sbgn-inspector')}, [new templates.Text('Sbgn Inspector')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('tab-link')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#command-history-area')}, [new templates.Text('Operations')], void 0, false)], void 0, false), new templates.Element('li', {'class': new templates.Attribute('tab-link')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#factoid-area')}, [new templates.Text('Factoid')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('tab-content')}, [new templates.Element('div', {'id': new templates.Attribute('sbgn-inspector'), 'class': new templates.Attribute('tab-pane')}, [new templates.Element('ul', {'class': new templates.Attribute('nav nav-tabs')}, [new templates.Element('li', {'id': new templates.Attribute('inspector-style-tab'), 'class': new templates.Attribute('chise-tab')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#sbgn-inspector-style')}, [new templates.Element('img', {'width': new templates.Attribute('18px'), 'height': new templates.Attribute('18px'), 'src': new templates.Attribute('app/img/tabs/properties.svg')}, null, void 0, true), new templates.Text(' ;Properties')], void 0, false)], void 0, false), new templates.Element('li', {'id': new templates.Attribute('inspector-palette-tab'), 'class': new templates.Attribute('chise-tab active')}, [new templates.Element('a', {'data-toggle': new templates.Attribute('tab'), 'href': new templates.Attribute('#sbgn-inspector-palette')}, [new templates.Element('img', {'width': new templates.Attribute('18px'), 'height': new templates.Attribute('18px'), 'src': new templates.Attribute('app/img/tabs/palette.svg')}, null, void 0, true), new templates.Text(' ;Palette')], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('tab-content')}, [new templates.Element('div', {'id': new templates.Attribute('sbgn-inspector-style'), 'class': new templates.Attribute('tab-pane fade')}, [new templates.Element('div', {'id': new templates.Attribute('sbgn-inspector-style-panel-group'), 'class': new templates.Attribute('panel-group')}, [], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('sbgn-inspector-palette'), 'class': new templates.Attribute('tab-pane fade in active')}, [new templates.Element('div', {'class': new templates.Attribute('panel-group')}, [new templates.Element('div', {'class': new templates.Attribute('panel')}, [new templates.Element('div', {'class': new templates.Attribute('panel-heading'), 'data-toggle': new templates.Attribute('collapse'), 'data-target': new templates.Attribute('#expand-collapse-pd-nodes-palette')}, [new templates.Element('p', {'class': new templates.Attribute('panel-title accordion-toggle')}, [new templates.Text('Process Description Nodes')], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('expand-collapse-pd-nodes-palette'), 'class': new templates.Attribute('panel-collapse collapse in')}, [new templates.Element('div', {'class': new templates.Attribute('panel-body')}, [new templates.Element('table', {'id': new templates.Attribute('pd-node-palette'), 'class': new templates.Attribute('element-palette node-palette')}, [new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/unspecified-entity.svg'), 'value': new templates.Attribute('unspecified-entity'), 'title': new templates.Attribute('Unspecified Entity')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/simple-chemical.svg'), 'value': new templates.Attribute('simple-chemical'), 'title': new templates.Attribute('Simple Chemical')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/macromolecule.svg'), 'value': new templates.Attribute('macromolecule'), 'title': new templates.Attribute('Macromolecule')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/nucleic-acid-feature.svg'), 'value': new templates.Attribute('nucleic-acid-feature'), 'title': new templates.Attribute('Nucleic Acid Feature')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/perturbing-agent.svg'), 'value': new templates.Attribute('perturbing-agent'), 'title': new templates.Attribute('Perturbing Agent')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/source-and-sink.svg'), 'value': new templates.Attribute('source-and-sink'), 'title': new templates.Attribute('Source and Sink')}, null, void 0, true)], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/complex.svg'), 'value': new templates.Attribute('complex'), 'title': new templates.Attribute('Complex')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/process.svg'), 'value': new templates.Attribute('process'), 'title': new templates.Attribute('Process')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/omitted-process.svg'), 'value': new templates.Attribute('omitted-process'), 'title': new templates.Attribute('Omitted Process')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/uncertain-process.svg'), 'value': new templates.Attribute('uncertain-process'), 'title': new templates.Attribute('Uncertain Process')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/association.svg'), 'value': new templates.Attribute('association'), 'title': new templates.Attribute('Association')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/dissociation.svg'), 'value': new templates.Attribute('dissociation'), 'title': new templates.Attribute('Dissociation')}, null, void 0, true)], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/phenotype.svg'), 'value': new templates.Attribute('phenotype'), 'title': new templates.Attribute('Phenotype')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/compartment.svg'), 'value': new templates.Attribute('compartment'), 'title': new templates.Attribute('Compartment')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/tag.svg'), 'value': new templates.Attribute('tag'), 'title': new templates.Attribute('Tag')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/and.svg'), 'value': new templates.Attribute('and'), 'title': new templates.Attribute('AND')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/or.svg'), 'value': new templates.Attribute('or'), 'title': new templates.Attribute('OR')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/nodes/not.svg'), 'value': new templates.Attribute('not'), 'title': new templates.Attribute('NOT')}, null, void 0, true)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'class': new templates.Attribute('panel')}, [new templates.Element('div', {'class': new templates.Attribute('panel-heading'), 'data-toggle': new templates.Attribute('collapse'), 'data-target': new templates.Attribute('#expand-collapse-pd-edges-palette')}, [new templates.Element('p', {'class': new templates.Attribute('panel-title accordion-toggle')}, [new templates.Text('Process Description Edges')], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('expand-collapse-pd-edges-palette'), 'class': new templates.Attribute('panel-collapse collapse in')}, [new templates.Element('div', {'class': new templates.Attribute('panel-body')}, [new templates.Element('table', {'id': new templates.Attribute('pd-edge-palette'), 'class': new templates.Attribute('element-palette edge-palette')}, [new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/consumption.svg'), 'value': new templates.Attribute('consumption'), 'title': new templates.Attribute('Consumption')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/production.svg'), 'value': new templates.Attribute('production'), 'title': new templates.Attribute('Production')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/modulation.svg'), 'value': new templates.Attribute('modulation'), 'title': new templates.Attribute('Modulation')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/stimulation.svg'), 'value': new templates.Attribute('stimulation'), 'title': new templates.Attribute('Stimulation')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/catalysis.svg'), 'value': new templates.Attribute('catalysis'), 'title': new templates.Attribute('Catalysis')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/inhibition.svg'), 'value': new templates.Attribute('inhibition'), 'title': new templates.Attribute('Inhibition')}, null, void 0, true)], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/necessary-stimulation.svg'), 'value': new templates.Attribute('necessary-stimulation'), 'title': new templates.Attribute('Necessary Stimulation')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/consumption.svg'), 'value': new templates.Attribute('logic-arc'), 'title': new templates.Attribute('Logic Arc')}, null, void 0, true)], void 0, false)], void 0, false), new templates.Element('td', void 0, [new templates.Element('div', void 0, [new templates.Element('img', {'src': new templates.Attribute('app/img/edges/consumption.svg'), 'value': new templates.Attribute('equivalence-arc'), 'title': new templates.Attribute('Equivalance Arc')}, null, void 0, true)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('factoid-area'), 'class': new templates.Attribute('tab-pane')}, [new templates.Element('div', {'id': new templates.Attribute('factoid-input-container')}, [new templates.Element('table', {'border': new templates.Attribute('0'), 'cellpadding': new templates.Attribute('2'), 'width': new templates.Attribute('100%'), 'align': new templates.Attribute('top')}, [new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', {'class': new templates.Attribute('instructions')}, [new templates.Text('Load a manuscript from file ')], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('label', {'for': new templates.Attribute('factoid-file-input'), 'class': new templates.Attribute('image-file')}, [new templates.Element('i', {'class': new templates.Attribute('fa fa-file-text-o')}, [], void 0, false), new templates.Text(' Select File')], void 0, false), new templates.Element('input', {'type': new templates.Attribute('file'), 'id': new templates.Attribute('factoid-file-input'), 'accept': new templates.Attribute('.txt,.pdf')}, null, void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', {'align': new templates.Attribute('left'), 'height': new templates.Attribute('8')}, [new templates.Element('b', void 0, [new templates.Element('font', {'color': new templates.Attribute('white'), 'face': new templates.Attribute('Verdana'), 'size': new templates.Attribute('2')}, [new templates.Text('Or ')], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', {'class': new templates.Attribute('instructions'), 'align': new templates.Attribute('left'), 'height': new templates.Attribute('15')}, [new templates.Text('Write/paste directly into the text box')], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', {'valign': new templates.Attribute('top'), 'align': new templates.Attribute('left')}, [new templates.Element('textarea', {'rows': new templates.Attribute('30'), 'id': new templates.Attribute('factoidBox')}, [new templates.Text(' ')], void 0, false)], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', void 0, [new templates.Element('input', {'type': new templates.Attribute('button'), 'id': new templates.Attribute('factoid-text-clear-button'), 'value': new templates.Attribute('Clear')}, null, void 0, false), new templates.Text('    '), new templates.Element('input', {'type': new templates.Attribute('button'), 'id': new templates.Attribute('factoid-text-submit-button'), 'value': new templates.Attribute('Submit'), 'class': new templates.Attribute('upload')}, null, void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('chat-area'), 'class': new templates.Attribute('tab-pane fade in active'), '\"': new templates.Attribute(true)}, [new templates.Element('div', {'id': new templates.Attribute('users')}, [new templates.Element('form', {'action': new templates.Attribute(''), '\"': new templates.Attribute(true)}, [new templates.EachBlock(new expressions.PathExpression(['_page', 'doc', 'userIds'], new expressions.ExpressionMeta('each _page.doc.userIds as #pUserId', 'each', void 0, '#pUserId')), [new templates.ViewInstance('chat-user', {})])], void 0, false)], [new templates.AsProperty(['container']), new templates.ElementOn('change', new expressions.FnExpression(['onScroll'], []))], false), new templates.Element('ul', {'id': new templates.Attribute('messages')}, [new templates.EachBlock(new expressions.PathExpression(['_page', 'list'], new expressions.ExpressionMeta('each _page.list as #message', 'each', void 0, '#message')), [new templates.ViewInstance('chat-message', {})])], [new templates.AsProperty(['list'])], false), new templates.Element('button', {'id': new templates.Attribute('clear-history'), 'class': new templates.Attribute('btn  btn-mini')}, [new templates.Text('Clear chat ')], [new templates.ElementOn('click', new expressions.FnExpression(['clearHistory'], []))], false), new templates.Element('div', {'id': new templates.Attribute('inputs')}, [new templates.Text('User name: '), new templates.Element('input', {'id': new templates.Attribute('inputs-name'), 'value': new templates.DynamicAttribute(new expressions.BracketsExpression(new expressions.PathExpression(['_page', 'doc', 'users']), new expressions.PathExpression(['_session', 'userId']), ['name'], new expressions.ExpressionMeta('_page.doc.users[_session.userId].name')))}, null, void 0, false), new templates.Element('button', {'id': new templates.Attribute('change-user-color'), 'class': new templates.Attribute('btn btn-mini')}, [new templates.Text('New user color')], [new templates.ElementOn('click', new expressions.FnExpression(['changeColorCode'], []))], false), new templates.Element('form', {'id': new templates.Attribute('inputs-form')}, [new templates.Element('textarea', {'id': new templates.Attribute('inputs-comment'), 'rows': new templates.Attribute('3'), ',': new templates.Attribute(true), 'wrap': new templates.Attribute('soft')}, [new templates.DynamicText(new expressions.PathExpression(['_page', 'newComment'], new expressions.ExpressionMeta('_page.newComment')))], void 0, false), new templates.Element('button', {'class': new templates.Attribute('btn btn-info'), 'id': new templates.Attribute('send-message')}, [new templates.Text('Send')], void 0, false)], [new templates.ElementOn('submit', new expressions.FnExpression(['add'], [])), new templates.ElementOn('submit', new expressions.FnExpression(['$preventDefault'], [new expressions.PathExpression(['$event'])]))], false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('image-area'), 'class': new templates.Attribute('tab-pane')}, [new templates.Element('div', {'id': new templates.Attribute('receivedImages'), 'class': new templates.Attribute('tab-pane')}, [new templates.EachBlock(new expressions.PathExpression(['_page', 'doc', 'images'], new expressions.ExpressionMeta('each _page.doc.images as #imageFile', 'each', void 0, '#imageFile')), [new templates.Element('br', void 0, null, void 0, false), new templates.DynamicText(new expressions.AliasPathExpression('#imageFile', ['filePath'], new expressions.ExpressionMeta('#imageFile.filePath'))), new templates.Element('div', {'class': new templates.Attribute('image')}, [new templates.Text(' '), new templates.Element('img', {'src': new templates.DynamicAttribute(new expressions.AliasPathExpression('#imageFile', ['img'], new expressions.ExpressionMeta('#imageFile.img'))), 'onclick': new templates.Attribute('openImage(this)'), 'onmouseover': new templates.Attribute('showQTip(this)')}, null, void 0, true), new templates.Text(' ')], void 0, false)])], void 0, false), new templates.Element('div', {'id': new templates.Attribute('upload-image')}, [new templates.Element('label', {'for': new templates.Attribute('file-upload'), 'class': new templates.Attribute('image-file')}, [new templates.Element('i', {'class': new templates.Attribute('fa fa-cloud-upload')}, [], void 0, false), new templates.Text(' Upload Image')], void 0, false), new templates.Element('div', void 0, [new templates.Element('input', {'type': new templates.Attribute('file'), 'id': new templates.Attribute('file-upload'), 'accept': new templates.Attribute('image/*'), 'value': new templates.DynamicAttribute(new expressions.PathExpression(['_page', 'newFile'], new expressions.ExpressionMeta('_page.newFile')))}, null, [new templates.ElementOn('change', new expressions.FnExpression(['uploadFile'], [new expressions.PathExpression(['$event'])]))], false)], void 0, false)], void 0, false)], void 0, false), new templates.Element('div', {'id': new templates.Attribute('command-history-area'), 'class': new templates.Attribute('tab-pane')}, [new templates.Element('ul', {'id': new templates.Attribute('command-messages')}, [new templates.EachBlock(new expressions.PathExpression(['_page', 'doc', 'history'], new expressions.ExpressionMeta('each _page.doc.history as #pCommand', 'each', void 0, '#pCommand')), [new templates.Element('li', void 0, [new templates.Text(' '), new templates.Element('b', void 0, [new templates.DynamicText(new expressions.AliasPathExpression('#pCommand', ['userName'], new expressions.ExpressionMeta('#pCommand.userName'))), new templates.Text(' '), new templates.DynamicText(new expressions.OperatorExpression('&&', [new expressions.PathExpression(['_page', 'showTime']), new expressions.FnExpression(['formatTime'], [new expressions.AliasPathExpression('#pCommand', [])])], void 0, new expressions.ExpressionMeta('_page.showTime && formatTime(#pCommand)'))), new templates.Text(' > ')], void 0, false), new templates.DynamicText(new expressions.AliasPathExpression('#pCommand', ['opName'], new expressions.ExpressionMeta('#pCommand.opName'))), new templates.Text(' '), new templates.DynamicText(new expressions.AliasPathExpression('#pCommand', ['opTarget'], new expressions.ExpressionMeta('#pCommand.opTarget'))), new templates.Text(' '), new templates.DynamicText(new expressions.FnExpression(['formatObj'], [new expressions.AliasPathExpression('#pCommand', ['elId'])], void 0, new expressions.ExpressionMeta('formatObj(#pCommand.elId)'))), new templates.Text(' '), new templates.DynamicText(new expressions.AliasPathExpression('#pCommand', ['opAttr'], new expressions.ExpressionMeta('#pCommand.opAttr'))), new templates.Text(' '), new templates.DynamicText(new expressions.FnExpression(['formatObj'], [new expressions.AliasPathExpression('#pCommand', ['param'])], void 0, new expressions.ExpressionMeta('formatObj(#pCommand.param)')))], void 0, false)])], void 0, false)], [new templates.AsProperty(['list'])], false)], void 0, false)], void 0, false), new templates.Element('audio', {'id': new templates.Attribute('notificationAudio'), 'src': new templates.Attribute('http://www.talkingwav.com/various/beep_02.wav'), 'preload': new templates.Attribute('auto')}, [], void 0, false), new templates.Element('div', {'id': new templates.Attribute('unitTestArea')}, [new templates.Text(' '), new templates.Element('button', {'class': new templates.Attribute('btn btn-info btn-mini')}, [new templates.Text(' Test')], [new templates.ElementOn('click', new expressions.FnExpression(['runUnitTests'], []))], false)], void 0, false)])};views.register('chat-user', '\\n            <div class=\"user\" style = background:{{_page.doc.users[#pUserId].colorCode}}>\\n                {{if _session.userId === #pUserId}}\\n                <div> {{_page.doc.users[#pUserId].name}}</div>\\n                {{else}}\\n                <input type=\"checkbox\" id = {{#pUserId}} checked> {{_page.doc.users[#pUserId].name}}<br>\\n                {{/if}}\\n            </div>\\n            ').parse = function() {return this.template = new templates.Template([new templates.Element('div', {'class': new templates.Attribute('user'), 'style': new templates.DynamicAttribute(new templates.Template([new templates.Text('background:'), new templates.DynamicText(new expressions.BracketsExpression(new expressions.PathExpression(['_page', 'doc', 'users']), new expressions.AliasPathExpression('#pUserId', []), ['colorCode'], new expressions.ExpressionMeta('_page.doc.users[#pUserId].colorCode')))], 'background:{{_page.doc.users[#pUserId].colorCode}}'))}, [new templates.ConditionalBlock([new expressions.OperatorExpression('===', [new expressions.PathExpression(['_session', 'userId']), new expressions.AliasPathExpression('#pUserId', [])], void 0, new expressions.ExpressionMeta('if _session.userId === #pUserId', 'if')), new expressions.Expression(new expressions.ExpressionMeta('else', 'else'))], [[new templates.Element('div', void 0, [new templates.Text(' '), new templates.DynamicText(new expressions.BracketsExpression(new expressions.PathExpression(['_page', 'doc', 'users']), new expressions.AliasPathExpression('#pUserId', []), ['name'], new expressions.ExpressionMeta('_page.doc.users[#pUserId].name')))], void 0, false)], [new templates.Element('input', {'type': new templates.Attribute('checkbox'), 'id': new templates.DynamicAttribute(new expressions.AliasPathExpression('#pUserId', [], new expressions.ExpressionMeta('#pUserId'))), 'checked': new templates.Attribute(true)}, null, void 0, false), new templates.Text(' '), new templates.DynamicText(new expressions.BracketsExpression(new expressions.PathExpression(['_page', 'doc', 'users']), new expressions.AliasPathExpression('#pUserId', []), ['name'], new expressions.ExpressionMeta('_page.doc.users[#pUserId].name'))), new templates.Element('br', void 0, null, void 0, false)]])], void 0, false)])};views.register('chat-message', '\\n            <table class = \"message\" align=\"center\" valign=\"center\">\\n                <tbody>\\n                <tr>\\n                    <td style = \"color:{{_page.doc.users[#message.userId].colorCode}};  padding : 5px\">\\n                        {{#message.userName}}\\n                    </td>\\n                    <td class=\"time\" style = \"padding : 5px\">\\n                        {{_page.showTime && formatTime(#message)}}\\n                    </td>\\n\\n                </tr>\\n                <tr><td  style = \"padding : 10px\">\\n                    {{#message.comment}}\\n                    </td>\\n                </tr>\\n                </tbody>\\n            </table>\\n\\n\\n\\n\\n\\n\\n\\n').parse = function() {return this.template = new templates.Template([new templates.Element('table', {'class': new templates.Attribute('message'), 'align': new templates.Attribute('center'), 'valign': new templates.Attribute('center')}, [new templates.Element('tbody', void 0, [new templates.Element('tr', void 0, [new templates.Element('td', {'style': new templates.DynamicAttribute(new templates.Template([new templates.Text('color:'), new templates.DynamicText(new expressions.BracketsExpression(new expressions.PathExpression(['_page', 'doc', 'users']), new expressions.AliasPathExpression('#message', ['userId']), ['colorCode'], new expressions.ExpressionMeta('_page.doc.users[#message.userId].colorCode'))), new templates.Text(';  padding : 5px')], 'color:{{_page.doc.users[#message.userId].colorCode}};  padding : 5px'))}, [new templates.DynamicText(new expressions.AliasPathExpression('#message', ['userName'], new expressions.ExpressionMeta('#message.userName')))], void 0, false), new templates.Element('td', {'class': new templates.Attribute('time'), 'style': new templates.Attribute('padding : 5px')}, [new templates.DynamicText(new expressions.OperatorExpression('&&', [new expressions.PathExpression(['_page', 'showTime']), new expressions.FnExpression(['formatTime'], [new expressions.AliasPathExpression('#message', [])])], void 0, new expressions.ExpressionMeta('_page.showTime && formatTime(#message)')))], void 0, false)], void 0, false), new templates.Element('tr', void 0, [new templates.Element('td', {'style': new templates.Attribute('padding : 10px')}, [new templates.DynamicText(new expressions.AliasPathExpression('#message', ['comment'], new expressions.ExpressionMeta('#message.comment')))], void 0, false)], void 0, false)], void 0, false)], void 0, false)])};};/*DERBY_SERIALIZED_VIEWS_END*/","/*\n * components.js\n *\n * Components associate custom script functionality with a view. They can be\n * distributed as standalone modules containing templates, scripts, and styles.\n * They can also be used to modularize application functionality.\n *\n */\n\nvar path = require('path');\nvar util = require('racer/lib/util');\nvar derbyTemplates = require('derby-templates');\nvar templates = derbyTemplates.templates;\nvar expressions = derbyTemplates.expressions;\nvar App = require('./App');\nvar Controller = require('./Controller');\n\nexports.Component = Component;\nexports.ComponentFactory = ComponentFactory;\nexports.SingletonComponentFactory = SingletonComponentFactory;\nexports.createFactory = createFactory;\n\nfunction Component(parent, context, id, scope) {\n  this.parent = parent;\n  this.context = context;\n  this.id = id;\n  this._scope = scope;\n}\n\nutil.mergeInto(Component.prototype, Controller.prototype);\n\nComponent.prototype.destroy = function() {\n  this.emit('destroy');\n  this.model.removeContextListeners();\n  this.model.destroy();\n  delete this.page._components[this.id];\n  var components = this.page._eventModel.object.$components;\n  if (components) delete components.object[this.id];\n};\n\nComponent.prototype.get = function(viewName, unescaped) {\n  var view = this.getView(viewName);\n  return view.get(this.context, unescaped);\n};\n\nComponent.prototype.getFragment = function(viewName) {\n  var view = this.getView(viewName);\n  return view.getFragment(this.context);\n};\n\nComponent.prototype.getView = function(viewName) {\n  var contextView = this.context.getView();\n  return (viewName) ?\n    this.app.views.find(viewName, contextView.namespace) : contextView;\n};\n\nComponent.prototype.getAttribute = function(key) {\n  var attributeContext = this.context.forAttribute(key);\n  if (!attributeContext) return;\n  var value = attributeContext.attributes[key];\n  return value && expressions.renderValue(value, attributeContext);\n};\n\nComponent.prototype.setAttribute = function(key, value) {\n  this.context.parent.attributes[key] = value;\n};\n\nComponent.prototype.setNullAttribute = function(key, value) {\n  var attributes = this.context.parent.attributes;\n  if (attributes[key] == null) attributes[key] = value;\n};\n\nfunction initComponent(context, component, parent, model, id, scope) {\n  // Do generic controller initialization\n  var componentContext = context.componentChild(component);\n  Controller.call(component, parent.app, parent.page, model);\n  Component.call(component, parent, componentContext, id, scope);\n\n  // Do the user-specific initialization. The component constructor should be\n  // an empty function and the actual initialization code should be done in the\n  // component's init method. This means that we don't have to rely on users\n  // properly calling the Component constructor method and avoids having to\n  // play nice with how CoffeeScript extends class constructors\n  emitInitHooks(context, component);\n  component.emit('init', component);\n  if (component.init) component.init(model);\n\n  return componentContext;\n}\n\nfunction emitInitHooks(context, component) {\n  if (!context.initHooks) return;\n  // Run initHooks for `on` listeners immediately before init\n  for (var i = 0, len = context.initHooks.length; i < len; i++) {\n    context.initHooks[i].emit(context, component);\n  }\n}\n\nfunction setAttributes(context, model) {\n  if (!context.attributes) return;\n  // Set attribute values on component model\n  for (var key in context.attributes) {\n    var attribute = context.attributes[key];\n    var segments = (\n      attribute instanceof templates.ParentWrapper &&\n      attribute.expression &&\n      attribute.expression.pathSegments(context)\n    );\n    if (segments) {\n      model.root.ref(model._at + '.' + key, segments.join('.'), {updateIndices: true});\n    } else {\n      model.set(key, attribute);\n    }\n  }\n}\n\nfunction createFactory(constructor) {\n  return (constructor.prototype.singleton) ?\n    new SingletonComponentFactory(constructor) :\n    new ComponentFactory(constructor);\n}\n\nfunction ComponentFactory(constructor) {\n  this.constructor = constructor;\n}\nComponentFactory.prototype.init = function(context) {\n  var component = new this.constructor();\n\n  var parent = context.controller;\n  var id = context.id();\n  var scope = ['$components', id];\n  var model = parent.model.root.eventContext(component);\n  model._at = scope.join('.');\n  model.set('id', id);\n  setAttributes(context, model);\n  // Store a reference to the component's scope such that the expression\n  // getters are relative to the component\n  model.data = model.get();\n  parent.page._components[id] = component;\n\n  return initComponent(context, component, parent, model, id, scope);\n};\nComponentFactory.prototype.create = function(context) {\n  var component = context.controller;\n  component.emit('create', component);\n  // Call the component's create function after its view is rendered\n  if (component.create) {\n    component.create(component.model, component.dom);\n  }\n};\n\nfunction SingletonComponentFactory(constructor) {\n  this.constructor = constructor;\n  this.component = null;\n}\nSingletonComponentFactory.prototype.init = function(context) {\n  if (!this.component) this.component = new this.constructor();\n  return context.componentChild(this.component);\n};\n// Don't call the create method for singleton components\nSingletonComponentFactory.prototype.create = function() {};\n\nApp.prototype.component = function(viewName, constructor) {\n  if (typeof viewName === 'function') {\n    constructor = viewName;\n    viewName = null;\n  }\n\n  // Inherit from Component\n  extendComponent(constructor);\n\n  // Load template view from filename\n  if (constructor.prototype.view) {\n    var viewFilename = constructor.prototype.view;\n    viewName = constructor.prototype.name || path.basename(viewFilename, '.html');\n    this.loadViews(viewFilename, viewName);\n\n  } else if (!viewName) {\n    if (constructor.prototype.name) {\n      viewName = constructor.prototype.name;\n      var view = this.views.register(viewName);\n      view.template = templates.emptyTemplate;\n    } else {\n      throw new Error('No view name specified for component');\n    }\n  }\n\n  // Associate the appropriate view with the component type\n  var view = this.views.find(viewName);\n  if (!view) {\n    var message = this.views.findErrorMessage(viewName);\n    throw new Error(message);\n  }\n  view.componentFactory = createFactory(constructor);\n\n  // Make chainable\n  return this;\n};\n\nfunction extendComponent(constructor) {\n  // Don't do anything if the constructor already extends Component\n  if (constructor.prototype instanceof Component) return;\n  // Otherwise, replace its prototype with an instance of Component\n  var oldPrototype = constructor.prototype;\n  constructor.prototype = new Component();\n  util.mergeInto(constructor.prototype, oldPrototype);\n}\n","var textDiff = require('./textDiff');\n\nexports.add = addDocumentListeners;\nexports.inputSupportsSelection = inputSupportsSelection;\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#do-not-apply\n// TODO: Date types support\nfunction inputSupportsSelection(input) {\n  var type = input.type;\n  return (\n    type === 'text' ||\n    type === 'textarea' ||\n    type === 'search' ||\n    type === 'url' ||\n    type === 'tel' ||\n    type === 'password'\n  );\n}\nfunction inputIsNumberValue(input) {\n  var type = input.type;\n  return (type === 'number' || (type === 'range' && !input.multiple));\n}\nfunction inputValue(input) {\n  return inputIsNumberValue(input) ? input.valueAsNumber : input.value;\n}\n\nfunction addDocumentListeners(doc) {\n  doc.addEventListener('input', documentInput, true);\n  doc.addEventListener('change', documentChange, true);\n\n  // Listen to more events for versions of IE with buggy input event implementations\n  if (parseFloat(window.navigator.appVersion.split('MSIE ')[1]) <= 9) {\n    // We're listening on selectionchange because there's no other event emitted when\n    // the user clicks 'delete' from a context menu when right clicking on selected text.\n    // So although this event fires overly aggressively, it's the only real way\n    // to ensure that we can detect all changes to the input value in IE <= 9\n    doc.addEventListener('selectionchange', function(e){\n      if (document.activeElement) {\n        documentInput({target: document.activeElement}); // selectionchange evts don't have the e.target we need\n      }\n    }, true);\n  }\n\n  // For some reason valueAsNumber returns NaN for number inputs in IE\n  // until a new IE version that handles this is released, parse input.value as a fallback\n  var input = document.createElement('input');\n  input.type = 'number';\n  input.value = '7';\n  if (input.valueAsNumber !== input.valueAsNumber) {\n    var oldInputValue = inputValue;\n    inputValue = function(input) {\n      if (input.type === 'number') {\n        return inputIsNumberValue(input) ? parseFloat(input.value) : input.value;\n      } else {\n        return oldInputValue.apply(this, arguments);\n      }\n    };\n  }\n}\n\nfunction documentInput(e) {\n  var target = e.target;\n\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA') {\n    setInputValue(e, target);\n  }\n}\n\nfunction documentChange(e) {\n  var target = e.target;\n\n  if (target.tagName === 'INPUT') {\n    setBoundProperty(target, 'checked');\n    setInputValue(e, target);\n\n  } else if (target.tagName === 'SELECT') {\n    setOptionBindings(target);\n\n  } else if (target.tagName === 'TEXTAREA') {\n    setInputValue(e, target);\n  }\n}\n\nfunction setBoundProperty(node, property) {\n  var binding = node.$bindAttributes && node.$bindAttributes[property];\n  if (!binding || binding.isUnbound()) return;\n\n  var value = node[property];\n  binding.template.expression.set(binding.context, value);\n}\n\nfunction setInputValue(e, target) {\n  var binding = target.$bindAttributes && target.$bindAttributes.value;\n  if (!binding || binding.isUnbound()) return;\n\n  if (inputSupportsSelection(target)) {\n    var pass = {$event: e};\n    textDiffBinding(binding, target.value, pass);\n  } else {\n    var value = inputValue(target);\n    binding.template.expression.set(binding.context, value);\n  }\n}\n\nfunction textDiffBinding(binding, value, pass) {\n  var expression = binding.template.expression;\n  var segments = expression.pathSegments(binding.context);\n  if (segments) {\n    var model = binding.context.controller.model.pass(pass);\n    textDiff.onTextInput(model, segments, value);\n  } else if (expression.set) {\n    expression.set(binding.context, value);\n  }\n}\n\nfunction setOptionBindings(parent) {\n  for (var node = parent.firstChild; node; node = node.nextSibling) {\n    if (node.tagName === 'OPTION') {\n      setBoundProperty(node, 'selected');\n    } else if (node.hasChildNodes()) {\n      setOptionBindings(node);\n    }\n  }\n}\n","var expressions = require('derby-templates').expressions;\n\n// The many trees of bindings:\n//\n// - Model tree, containing your actual data. Eg:\n//    {users:{fred:{age:40}, wilma:{age:37}}}\n//\n// - Event model tree, whose structure mirrors the model tree. The event model\n//   tree lets us annotate the model tree with listeners which fire when events\n//   change. I think there are three types of listeners:\n//\n//   1. Reference binding binds to whatever is referred to by the path. Eg,\n//   {{each items as item}} binds item by reference as it goes through the\n//   list.\n//   2. Fixed path bindings explicitly bind to whatever is at that path\n//   regardless of how the model changes underneath the event model\n//   3. Listen on a subtree and fire when anything in the subtree changes. This\n//   is used for custom functions.\n//\n// {{foo.id}} would listen on the fixed path ['foo', 'id'].\n//\n//\n// - Context tree represents the changing (embedded) contexts of the templating\n//   engine. This maps to the tree of templates and allows templates to reference\n//   anything in any of their enclosing template scopes.\n//\n\nmodule.exports = EventModel;\n\n// The code here uses object-based set pattern where objects are keyed using\n// sequentially generated IDs.\nvar nextId = 1;\n\n// A binding object is something with update(), insert()/move()/remove() defined.\n\n\n// Given x[y] with model.get(y) == 5:\n//  item = 5\n//  segments = ['y']\n//  outside = the EventModel for x.\n//\n// Note that item could be a Context or another ModelRef - eg:\n//\n// {{ each foo as bar }} ... {{ x[bar] }}  -or-  {{ x[y[z]] }}\nfunction ModelRef(model, item, segments, outside) {\n  this.id = nextId++;\n\n  // We need a reference to the model & our segment list so we can update our\n  // value.\n  this.model = model;\n  this.segments = segments;\n\n  // Our current value.\n  this.item = item;\n\n  // outside is a reference to the EventModel of the thing on the lhs of the\n  // brackets. For example, in x[y].z, outside is the EventModel of x.\n  this.outside = outside;\n\n  // result is the EventModel of the evaluated version of the brackets. In\n  // x[y].z, its the EventModel of x[y].\n  this.result = outside.child(item).refChild(this);\n}\n\nModelRef.prototype.update = function() {\n  var segments = expressions.pathSegments(this.segments);\n  var newItem = expressions.lookup(segments, this.model.data);\n  if (this.item === newItem) return;\n\n  // First remove myself.\n  delete this.outside.child(this.item).refChildren[this.id];\n\n  this.item = newItem;\n\n  var container = this.outside.child(this.item);\n  // I want to just call refChild but that would create a new EM. Instead I\n  // want to just implant my current EM there.\n  if (!container.refChildren) container.refChildren = new RefChildrenMap();\n  container.refChildren[this.id] = this.result;\n\n  // Finally, update all the bindings in the tree.\n  this.result.update();\n};\n\n\nfunction RefOutMap() {}\nfunction RefChildrenMap() {}\nfunction BindingsMap() {}\nfunction ItemContextsMap() {}\nfunction EventModelsMap() {}\n\nfunction EventModel() {\n  this.id = nextId++;\n\n  // Most of these won't ever be filled in, so I'm just leaving them null.\n  //\n  // These contain our EventModel children.\n  this.object = null;\n  this.array = null;\n\n  // This contains any EventModel children which have floating references.\n  this.arrayByReference = null;\n\n  // If the data stored here is ever used to lookup other values, this is an\n  // object mapping remote child ID -> ref.\n  //\n  // Eg given x[y], y.refOut[x.id] = <Binding>\n  this.refOut = null;\n\n  // This is a map from ref id -> event model for events bound to this\n  // EventModel but via a ref. We could just merge them into the main tree, but\n  // this way they're easy to move.\n  //\n  // Eg, given x[y] (y=1), x.1.refChildren[ref id] is an EventModel.\n  this.refChildren = null;\n\n  this.bindings = null;\n\n  // Item contexts are contexts which need their item number changed as this\n  // EventModel object moves around its surrounding list.\n  this.itemContexts = null;\n}\n\nEventModel.prototype.refChild = function(ref) {\n  if (!this.refChildren) this.refChildren = new RefChildrenMap();\n  var id = ref.id;\n\n  if (!this.refChildren[id]) {\n    this.refChildren[id] = new EventModel();\n  }\n  return this.refChildren[id];\n};\n\nEventModel.prototype.arrayLookup = function(model, segmentsBefore, segmentsInside) {\n  var segments = expressions.pathSegments(segmentsInside);\n  var item = expressions.lookup(segments, model.data);\n\n  var source = this.at(segmentsInside);\n\n  // What the array currently resolves to. Given x[y] with y=1, container is\n  // the EM for x\n  var container = this.at(segmentsBefore);\n\n  if (!source.refOut) source.refOut = new RefOutMap();\n\n  var ref = source.refOut[container.id];\n  if (ref == null) {\n    ref = new ModelRef(model, item, segmentsInside, container);\n    source.refOut[container.id] = ref;\n  }\n\n  return ref;\n};\n\n// Returns the EventModel node of the named child.\nEventModel.prototype.child = function(segment) {\n  var container;\n  if (typeof segment === 'string') {\n    // Object\n    if (!this.object) this.object = {};\n    container = this.object;\n\n  } else if (typeof segment === 'number') {\n    // Array by value\n    if (!this.array) this.array = [];\n    container = this.array;\n\n  } else if (segment instanceof ModelRef) {\n    // Array reference. We'll need to lookup the child with the right\n    // value, then look inside its ref children for the right EventModel\n    // (so we can update it later). This is pretty janky, but should be\n    // *correct* even in the face of recursive array accessors.\n    //\n    // This will calculate it based on the current segment values, but refs\n    // cache the EM anyway.\n    //return this.child(segment.item).refChild(segment);\n    return segment.result;\n\n  } else {\n    // Array by reference\n    if (!this.arrayByReference) this.arrayByReference = [];\n    container = this.arrayByReference;\n    segment = segment.item;\n  }\n\n  return container[segment] || (container[segment] = new EventModel());\n};\n\n// Returns the EventModel node at the given segments list. Note that although\n// EventModel nodes are unique, its possible for multiple EventModel nodes to\n// refer to the same section of the model because of references.\n//\n// If you want to update the bindings that refer to a specific path, use\n// each().\n//\n// EventModel objects are created as needed.\nEventModel.prototype.at = function(segments) {\n  // For unbound dependancies.\n  if (segments == null) return this;\n\n  var eventModel = this;\n\n  for (var i = 0; i < segments.length; i++) {\n    eventModel = eventModel.child(segments[i]);\n  }\n\n  return eventModel;\n};\n\nEventModel.prototype.isEmpty = function() {\n  if (hasKeys(this.dependancies)) return false;\n  if (hasKeys(this.itemContexts)) return false;\n\n  if (this.object) {\n    if (hasKeys(this.object)) return false;\n    this.object = null;\n  }\n\n  if (this.arrayByReference) {\n    for (var i = 0; i < this.arrayByReference.length; i++) {\n      if (this.arrayByReference[i] != null) return false;\n    }\n    this.arrayByReference = null;\n  }\n\n  if (this.array) {\n    for (var i = 0; i < this.array.length; i++) {\n      if (this.array[i] != null) return false;\n    }\n    this.array = null;\n  }\n\n  return true;\n};\n\nfunction hasKeys(object) {\n  for (var key in object) {\n    return true;\n  }\n  return false;\n}\n\n\n// **** Updating the EventModel\n\nEventModel.prototype._addItemContext = function(context) {\n  if (!context._id) context._id = nextId++;\n  if (!this.itemContexts) this.itemContexts = new ItemContextsMap();\n  this.itemContexts[context._id] = context;\n};\n\nEventModel.prototype._removeItemContext = function(context) {\n  if (this.itemContexts) {\n    delete this.itemContexts[context._id];\n  }\n};\n\nEventModel.prototype._addBinding = function(binding) {\n  var bindings = this.bindings || (this.bindings = new BindingsMap());\n  binding.eventModels || (binding.eventModels = new EventModelsMap());\n  bindings[binding.id] = binding;\n  binding.eventModels[this.id] = this;\n};\n\n// This is the main hook to add bindings to the event model tree. It should\n// only be called on the root EventModel object.\nEventModel.prototype.addBinding = function(segments, binding) {\n  this.at(segments)._addBinding(binding);\n};\n\n// This is used for objects (contexts in derby's case) that have a .item\n// property which refers to an array index.\nEventModel.prototype.addItemContext = function(segments, context) {\n  this.at(segments)._addItemContext(context);\n};\n\nEventModel.prototype.removeBinding = function(binding) {\n  if (!binding.eventModels) return;\n  for (var id in binding.eventModels) {\n    var eventModel = binding.eventModels[id];\n    if (eventModel.bindings) delete eventModel.bindings[binding.id];\n  }\n  binding.eventModels = null;\n};\n\nEventModel.prototype._each = function(segments, pos, fn) {\n  // Our refChildren are effectively merged into this object.\n  if (this.refChildren) {\n    for (var id in this.refChildren) {\n      var refChild = this.refChildren[id];\n      if (refChild) refChild._each(segments, pos, fn);\n    }\n  }\n\n  if (segments.length === pos) {\n    fn(this);\n    return;\n  }\n\n  var segment = segments[pos];\n  var child;\n  if (typeof segment === 'string') {\n    // Object. Just recurse into our objects set. Its possible to rewrite this\n    // function to simply loop in the case of object lookups, but I don't think\n    // it'll buy us much.\n    child = this.object && this.object[segment];\n    if (child) child._each(segments, pos + 1, fn);\n\n  } else {\n    // Number. Recurse both into the fixed list and the reference list.\n    child = this.array && this.array[segment];\n    if (child) child._each(segments, pos + 1, fn);\n\n    child = this.arrayByReference && this.arrayByReference[segment];\n    if (child) child._each(segments, pos + 1, fn);\n  }\n};\n\n// Called when the scalar value at the path changes. This only calls update()\n// on this node. See update() below if you want to update entire\n// subtrees.\nEventModel.prototype.localUpdate = function(previous, pass) {\n  if (this.bindings) {\n    for (var id in this.bindings) {\n      var binding = this.bindings[id];\n      if (binding) binding.update(previous, pass);\n    }\n  }\n\n  // If our value changed, we also need to update anything that depends on it\n  // via refOut.\n  if (this.refOut) {\n    for (var id in this.refOut) {\n      var ref = this.refOut[id];\n      if (ref) ref.update();\n    }\n  }\n};\n\n// This is used when an object subtree is replaced / removed.\nEventModel.prototype.update = function(previous, pass) {\n  this.localUpdate(previous, pass);\n\n  if (this.object) {\n    for (var key in this.object) {\n      var binding = this.object[key];\n      if (binding) binding.update();\n    }\n  }\n\n  if (this.array) {\n    for (var i = 0; i < this.array.length; i++) {\n      var binding = this.array[i];\n      if (binding) binding.update();\n    }\n  }\n\n  if (this.arrayByReference) {\n    for (var i = 0; i < this.arrayByReference.length; i++) {\n      var binding = this.arrayByReference[i];\n      if (binding) binding.update();\n    }\n  }\n};\n\n// Updates the indexes in itemContexts of our children in the range of\n// [from, to). from and to both optional.\nEventModel.prototype._updateChildItemContexts = function(from, to) {\n  if (!this.arrayByReference) return;\n\n  if (from == null) from = 0;\n  if (to == null) to = this.arrayByReference.length;\n\n  for (var i = from; i < to; i++) {\n    var contexts = this.arrayByReference[i] &&\n      this.arrayByReference[i].itemContexts;\n    if (contexts) {\n      for (var key in contexts) {\n        contexts[key].item = i;\n      }\n    }\n  }\n};\n\n// Updates our array-by-value values. They have to recursively update every\n// binding in their children. Sad.\nEventModel.prototype._updateArray = function(from, to) {\n  if (!this.array) return;\n\n  if (from == null) from = 0;\n  if (to == null) to = this.array.length;\n\n  for (var i = from; i < to; i++) {\n    var binding = this.array[i];\n    if (binding) binding.update();\n  }\n};\n\nEventModel.prototype._updateObject = function() {\n  if (this.object) {\n    for (var key in this.object) {\n      var binding = this.object[key];\n      if (binding) binding.update();\n    }\n  }\n};\n\nEventModel.prototype._set = function(previous, pass) {\n  // This just updates anything thats bound to the whole subtree. An alternate\n  // implementation could be passed in the new value at this node (which we\n  // cache), then compare with the old version and only update parts of the\n  // subtree which are relevant. I don't know if thats an important\n  // optimization - it really depends on your use case.\n  this.update(previous, pass);\n};\n\n// Insert into this EventModel node.\nEventModel.prototype._insert = function(index, howMany) {\n  // Update fixed paths\n  this._updateArray(index);\n\n  // Update relative paths\n  if (this.arrayByReference && this.arrayByReference.length > index) {\n    // Shift the actual items in the array references array.\n\n    // This probably isn't the best way to implement insert. Other options are\n    // using concat() on slices or though constructing a temporary array and\n    // using splice.call. Hopefully if this method is slow it'll come up during\n    // profiling.\n    for (var i = 0; i < howMany; i++) {\n      this.arrayByReference.splice(index, 0, null);\n    }\n\n    // Update the path in the contexts\n    this._updateChildItemContexts(index + howMany);\n  }\n\n  // Finally call our bindings.\n  if (this.bindings) {\n    for (var id in this.bindings) {\n      var binding = this.bindings[id];\n      if (binding) binding.insert(index, howMany);\n    }\n  }\n  this._updateObject();\n};\n\n// Remove howMany child elements from this EventModel at index.\nEventModel.prototype._remove = function(index, howMany) {\n  // Update fixed paths. Both the removed items and items after it may have changed.\n  this._updateArray(index);\n\n  if (this.arrayByReference) {\n    // Update relative paths. First throw away all the children which have been removed.\n    this.arrayByReference.splice(index, howMany);\n\n    this._updateChildItemContexts(index);\n  }\n\n  // Call bindings.\n  if (this.bindings) {\n    for (var id in this.bindings) {\n      var binding = this.bindings[id];\n      if (binding) binding.remove(index, howMany);\n    }\n  }\n  this._updateObject();\n};\n\n// Move howMany items from `from` to `to`.\nEventModel.prototype._move = function(from, to, howMany) {\n  // first points to the first element that was moved. end points to the list\n  // element past the end of the changed region.\n  var first, end;\n  if (from < to) {\n    first = from;\n    end = to + howMany;\n  } else {\n    first = to;\n    end = from + howMany;\n  }\n\n  // Update fixed paths.\n  this._updateArray(first, end);\n\n  // Update relative paths\n  var arr = this.arrayByReference;\n  if (arr && arr.length > first) {\n    // Remove from the old location\n    var values = arr.splice(from, howMany);\n\n    // Insert at the new location\n    arr.splice.apply(arr, [to, 0].concat(values));\n\n    // Update the path in the contexts\n    this._updateChildItemContexts(first, end);\n  }\n\n  // Finally call our bindings.\n  if (this.bindings) {\n    for (var id in this.bindings) {\n      var binding = this.bindings[id];\n      if (binding) binding.move(from, to, howMany);\n    }\n  }\n  this._updateObject();\n};\n\n\n// Helpers.\n\nEventModel.prototype.mutate = function(segments, fn) {\n  // This finds & returns a list of all event models which exist and could match\n  // the specified path. The path cannot contain contexts like derby expression\n  // segment lists (just because I don't think thats a useful feature and its not\n  // implemented)\n  this._each(segments, 0, fn);\n\n  // Also emit all mutations as sets on star paths, which are how dependencies\n  // for view helper functions are represented. They should react to a path\n  // or any child path being modified\n  for (var i = 0, len = segments.length; i++ < len;) {\n    var wildcardSegments = segments.slice(0, i);\n    wildcardSegments.push('*');\n    this._each(wildcardSegments, 0, childSetWildcard);\n  }\n};\n\nfunction childSetWildcard(child) {\n  child._set();\n}\n\nEventModel.prototype.set = function(segments, previous, pass) {\n  this.mutate(segments, function childSet(child) {\n    child._set(previous, pass);\n  });\n};\n\nEventModel.prototype.insert = function(segments, index, howMany) {\n  this.mutate(segments, function childInsert(child) {\n    child._insert(index, howMany);\n  });\n};\n\nEventModel.prototype.remove = function(segments, index, howMany) {\n  this.mutate(segments, function childRemove(child) {\n    child._remove(index, howMany);\n  });\n};\n\nEventModel.prototype.move = function(segments, from, to, howMany) {\n  this.mutate(segments, function childMove(child) {\n    child._move(from, to, howMany);\n  });\n};\n","exports.onStringInsert = onStringInsert;\nexports.onStringRemove = onStringRemove;\nexports.onTextInput = onTextInput;\n\nfunction onStringInsert(el, previous, index, text) {\n  function transformCursor(cursor) {\n    return (index < cursor) ? cursor + text.length : cursor;\n  }\n  previous || (previous = '');\n  var newText = previous.slice(0, index) + text + previous.slice(index);\n  replaceText(el, newText, transformCursor);\n}\n\nfunction onStringRemove(el, previous, index, howMany) {\n  function transformCursor(cursor) {\n    return (index < cursor) ? cursor - Math.min(howMany, cursor - index) : cursor;\n  }\n  previous || (previous = '');\n  var newText = previous.slice(0, index) + previous.slice(index + howMany);\n  replaceText(el, newText, transformCursor);\n}\n\nfunction replaceText(el, newText, transformCursor) {\n  var selectionStart = transformCursor(el.selectionStart);\n  var selectionEnd = transformCursor(el.selectionEnd);\n\n  var scrollTop = el.scrollTop;\n  el.value = newText;\n  if (el.scrollTop !== scrollTop) {\n    el.scrollTop = scrollTop;\n  }\n  if (document.activeElement === el) {\n    el.selectionStart = selectionStart;\n    el.selectionEnd = selectionEnd;\n  }\n}\n\nfunction onTextInput(model, segments, value) {\n  var previous = model._get(segments) || '';\n  if (previous === value) return;\n  var start = 0;\n  while (previous.charAt(start) === value.charAt(start)) {\n    start++;\n  }\n  var end = 0;\n  while (\n    previous.charAt(previous.length - 1 - end) === value.charAt(value.length - 1 - end) &&\n    end + start < previous.length &&\n    end + start < value.length\n  ) {\n    end++;\n  }\n\n  if (previous.length !== start + end) {\n    var howMany = previous.length - start - end;\n    model._stringRemove(segments, start, howMany);\n  }\n  if (value.length !== start + end) {\n    var inserted = value.slice(start, value.length - end);\n    model._stringInsert(segments, start, inserted);\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","// ISC @ Julien Fontanet\n\n'use strict'\n\n// ===================================================================\n\nvar defineProperty = Object.defineProperty\n\n// -------------------------------------------------------------------\n\nvar captureStackTrace = Error.captureStackTrace\nif (!captureStackTrace) {\n  captureStackTrace = function captureStackTrace (error) {\n    var container = new Error()\n\n    defineProperty(error, 'stack', {\n      configurable: true,\n      get: function getStack () {\n        var stack = container.stack\n\n        // Replace property with value for faster future accesses.\n        defineProperty(this, 'stack', {\n          value: stack\n        })\n\n        return stack\n      },\n      set: function setStack (stack) {\n        defineProperty(error, 'stack', {\n          configurable: true,\n          value: stack,\n          writable: true\n        })\n      }\n    })\n  }\n}\n\n// -------------------------------------------------------------------\n\nfunction BaseError (message) {\n  if (message) {\n    defineProperty(this, 'message', {\n      configurable: true,\n      value: message,\n      writable: true\n    })\n  }\n\n  var cname = this.constructor.name\n  if (\n    cname &&\n    cname !== this.name\n  ) {\n    defineProperty(this, 'name', {\n      configurable: true,\n      value: cname,\n      writable: true\n    })\n  }\n\n  captureStackTrace(this, this.constructor)\n}\n\nBaseError.prototype = Object.create(Error.prototype, {\n  // See: https://github.com/JsCommunity/make-error/issues/4\n  constructor: {\n    configurable: true,\n    value: BaseError,\n    writable: true\n  }\n})\n\n// -------------------------------------------------------------------\n\n// Sets the name of a function if possible (depends of the JS engine).\nvar setFunctionName = (function () {\n  function setFunctionName (fn, name) {\n    return defineProperty(fn, 'name', {\n      configurable: true,\n      value: name\n    })\n  }\n  try {\n    var f = function () {}\n    setFunctionName(f, 'foo')\n    if (f.name === 'foo') {\n      return setFunctionName\n    }\n  } catch (_) {}\n})()\n\n// -------------------------------------------------------------------\n\nfunction makeError (constructor, super_) {\n  if (super_ == null || super_ === Error) {\n    super_ = BaseError\n  } else if (typeof super_ !== 'function') {\n    throw new TypeError('super_ should be a function')\n  }\n\n  var name\n  if (typeof constructor === 'string') {\n    name = constructor\n    constructor = function () { super_.apply(this, arguments) }\n\n    // If the name can be set, do it once and for all.\n    if (setFunctionName) {\n      setFunctionName(constructor, name)\n      name = null\n    }\n  } else if (typeof constructor !== 'function') {\n    throw new TypeError('constructor should be either a string or a function')\n  }\n\n  // Also register the super constructor also as `constructor.super_` just\n  // like Node's `util.inherits()`.\n  constructor.super_ = constructor['super'] = super_\n\n  var properties = {\n    constructor: {\n      configurable: true,\n      value: constructor,\n      writable: true\n    }\n  }\n\n  // If the name could not be set on the constructor, set it on the\n  // prototype.\n  if (name != null) {\n    properties.name = {\n      configurable: true,\n      value: name,\n      writable: true\n    }\n  }\n  constructor.prototype = Object.create(super_.prototype, properties)\n\n  return constructor\n}\nexports = module.exports = makeError\nexports.BaseError = BaseError\n","module.exports = require('./lib/color')\n    .use(require('./lib/XYZ'))\n    .use(require('./lib/LAB'))\n    .use(require('./lib/HSV'))\n    .use(require('./lib/HSL'))\n    .use(require('./lib/CMYK'))\n\n    // Convenience functions\n    .use(require('./lib/plugins/namedColors'))\n    .use(require('./lib/plugins/clearer.js'))\n    .use(require('./lib/plugins/darken.js'))\n    .use(require('./lib/plugins/desaturate.js'))\n    .use(require('./lib/plugins/grayscale.js'))\n    .use(require('./lib/plugins/lighten.js'))\n    .use(require('./lib/plugins/mix.js'))\n    .use(require('./lib/plugins/negate.js'))\n    .use(require('./lib/plugins/opaquer.js'))\n    .use(require('./lib/plugins/rotate.js'))\n    .use(require('./lib/plugins/saturate.js'))\n    .use(require('./lib/plugins/toAlpha.js'));\n","module.exports = function CMYK(color) {\n    color.installColorSpace('CMYK', ['cyan', 'magenta', 'yellow', 'black', 'alpha'], {\n        rgb: function () {\n            return new color.RGB((1 - this._cyan * (1 - this._black) - this._black),\n                                     (1 - this._magenta * (1 - this._black) - this._black),\n                                     (1 - this._yellow * (1 - this._black) - this._black),\n                                     this._alpha);\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.cmyk\n            // Adapted from http://www.javascripter.net/faq/rgb2cmyk.htm\n            var red = this._red,\n                green = this._green,\n                blue = this._blue,\n                cyan = 1 - red,\n                magenta = 1 - green,\n                yellow = 1 - blue,\n                black = 1;\n            if (red || green || blue) {\n                black = Math.min(cyan, Math.min(magenta, yellow));\n                cyan = (cyan - black) / (1 - black);\n                magenta = (magenta - black) / (1 - black);\n                yellow = (yellow - black) / (1 - black);\n            } else {\n                black = 1;\n            }\n            return new color.CMYK(cyan, magenta, yellow, black, this._alpha);\n        }\n    });\n};\n","module.exports = function HSL(color) {\n    color.use(require('./HSV'));\n\n    color.installColorSpace('HSL', ['hue', 'saturation', 'lightness', 'alpha'], {\n        hsv: function () {\n            // Algorithm adapted from http://wiki.secondlife.com/wiki/Color_conversion_scripts\n            var l = this._lightness * 2,\n                s = this._saturation * ((l <= 1) ? l : 2 - l),\n                saturation;\n\n            // Avoid division by zero when l + s is very small (approaching black):\n            if (l + s < 1e-9) {\n                saturation = 0;\n            } else {\n                saturation = (2 * s) / (l + s);\n            }\n\n            return new color.HSV(this._hue, saturation, (l + s) / 2, this._alpha);\n        },\n\n        rgb: function () {\n            return this.hsv().rgb();\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n            return this.hsv().hsl();\n        }\n    });\n};\n","module.exports = function HSV(color) {\n    color.installColorSpace('HSV', ['hue', 'saturation', 'value', 'alpha'], {\n        rgb: function () {\n            var hue = this._hue,\n                saturation = this._saturation,\n                value = this._value,\n                i = Math.min(5, Math.floor(hue * 6)),\n                f = hue * 6 - i,\n                p = value * (1 - saturation),\n                q = value * (1 - f * saturation),\n                t = value * (1 - (1 - f) * saturation),\n                red,\n                green,\n                blue;\n            switch (i) {\n            case 0:\n                red = value;\n                green = t;\n                blue = p;\n                break;\n            case 1:\n                red = q;\n                green = value;\n                blue = p;\n                break;\n            case 2:\n                red = p;\n                green = value;\n                blue = t;\n                break;\n            case 3:\n                red = p;\n                green = q;\n                blue = value;\n                break;\n            case 4:\n                red = t;\n                green = p;\n                blue = value;\n                break;\n            case 5:\n                red = value;\n                green = p;\n                blue = q;\n                break;\n            }\n            return new color.RGB(red, green, blue, this._alpha);\n        },\n\n        hsl: function () {\n            var l = (2 - this._saturation) * this._value,\n                sv = this._saturation * this._value,\n                svDivisor = l <= 1 ? l : (2 - l),\n                saturation;\n\n            // Avoid division by zero when lightness approaches zero:\n            if (svDivisor < 1e-9) {\n                saturation = 0;\n            } else {\n                saturation = sv / svDivisor;\n            }\n            return new color.HSL(this._hue, saturation, l / 2, this._alpha);\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n            var red = this._red,\n                green = this._green,\n                blue = this._blue,\n                max = Math.max(red, green, blue),\n                min = Math.min(red, green, blue),\n                delta = max - min,\n                hue,\n                saturation = (max === 0) ? 0 : (delta / max),\n                value = max;\n            if (delta === 0) {\n                hue = 0;\n            } else {\n                switch (max) {\n                case red:\n                    hue = (green - blue) / delta / 6 + (green < blue ? 1 : 0);\n                    break;\n                case green:\n                    hue = (blue - red) / delta / 6 + 1 / 3;\n                    break;\n                case blue:\n                    hue = (red - green) / delta / 6 + 2 / 3;\n                    break;\n                }\n            }\n            return new color.HSV(hue, saturation, value, this._alpha);\n        }\n    });\n};\n","module.exports = function LAB(color) {\n    color.use(require('./XYZ.js'));\n\n    color.installColorSpace('LAB', ['l', 'a', 'b', 'alpha'], {\n        fromRgb: function () {\n            return this.xyz().lab();\n        },\n\n        rgb: function () {\n            return this.xyz().rgb();\n        },\n\n        xyz: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=08#text8\n            var convert = function (channel) {\n                    var pow = Math.pow(channel, 3);\n                    return pow > 0.008856 ?\n                        pow :\n                        (channel - 16 / 116) / 7.87;\n                },\n                y = (this._l + 16) / 116,\n                x = this._a / 500 + y,\n                z = y - this._b / 200;\n\n            return new color.XYZ(\n                convert(x) *  95.047,\n                convert(y) * 100.000,\n                convert(z) * 108.883,\n                this._alpha\n            );\n        }\n    });\n};\n","module.exports = function XYZ(color) {\n    color.installColorSpace('XYZ', ['x', 'y', 'z', 'alpha'], {\n        fromRgb: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=02#text2\n            var convert = function (channel) {\n                    return channel > 0.04045 ?\n                        Math.pow((channel + 0.055) / 1.055, 2.4) :\n                        channel / 12.92;\n                },\n                r = convert(this._red),\n                g = convert(this._green),\n                b = convert(this._blue);\n\n            // Reference white point sRGB D65:\n            // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n            return new color.XYZ(\n                r * 0.4124564 + g * 0.3575761 + b * 0.1804375,\n                r * 0.2126729 + g * 0.7151522 + b * 0.0721750,\n                r * 0.0193339 + g * 0.1191920 + b * 0.9503041,\n                this._alpha\n            );\n        },\n\n        rgb: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=01#text1\n            var x = this._x,\n                y = this._y,\n                z = this._z,\n                convert = function (channel) {\n                    return channel > 0.0031308 ?\n                        1.055 * Math.pow(channel, 1 / 2.4) - 0.055 :\n                        12.92 * channel;\n                };\n\n            // Reference white point sRGB D65:\n            // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n            return new color.RGB(\n                convert(x *  3.2404542 + y * -1.5371385 + z * -0.4985314),\n                convert(x * -0.9692660 + y *  1.8760108 + z *  0.0415560),\n                convert(x *  0.0556434 + y * -0.2040259 + z *  1.0572252),\n                this._alpha\n            );\n        },\n\n        lab: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=07#text7\n            var convert = function (channel) {\n                    return channel > 0.008856 ?\n                        Math.pow(channel, 1 / 3) :\n                        7.787037 * channel + 4 / 29;\n                },\n                x = convert(this._x /  95.047),\n                y = convert(this._y / 100.000),\n                z = convert(this._z / 108.883);\n\n            return new color.LAB(\n                (116 * y) - 16,\n                500 * (x - y),\n                200 * (y - z),\n                this._alpha\n            );\n        }\n    });\n};\n","var installedColorSpaces = [],\n    undef = function (obj) {\n        return typeof obj === 'undefined';\n    },\n    channelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)(%)?\\s*/,\n    percentageChannelRegExp = /\\s*(\\.\\d+|100|\\d?\\d(?:\\.\\d+)?)%\\s*/,\n    alphaChannelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)\\s*/,\n    cssColorRegExp = new RegExp(\n                         '^(rgb|hsl|hsv)a?' +\n                         '\\\\(' +\n                             channelRegExp.source + ',' +\n                             channelRegExp.source + ',' +\n                             channelRegExp.source +\n                             '(?:,' + alphaChannelRegExp.source + ')?' +\n                         '\\\\)$', 'i');\n\nfunction color(obj) {\n    if (Array.isArray(obj)) {\n        if (typeof obj[0] === 'string' && typeof color[obj[0]] === 'function') {\n            // Assumed array from .toJSON()\n            return new color[obj[0]](obj.slice(1, obj.length));\n        } else if (obj.length === 4) {\n            // Assumed 4 element int RGB array from canvas with all channels [0;255]\n            return new color.RGB(obj[0] / 255, obj[1] / 255, obj[2] / 255, obj[3] / 255);\n        }\n    } else if (typeof obj === 'string') {\n        var lowerCased = obj.toLowerCase();\n        if (color.namedColors[lowerCased]) {\n            obj = '#' + color.namedColors[lowerCased];\n        }\n        if (lowerCased === 'transparent') {\n            obj = 'rgba(0,0,0,0)';\n        }\n        // Test for CSS rgb(....) string\n        var matchCssSyntax = obj.match(cssColorRegExp);\n        if (matchCssSyntax) {\n            var colorSpaceName = matchCssSyntax[1].toUpperCase(),\n                alpha = undef(matchCssSyntax[8]) ? matchCssSyntax[8] : parseFloat(matchCssSyntax[8]),\n                hasHue = colorSpaceName[0] === 'H',\n                firstChannelDivisor = matchCssSyntax[3] ? 100 : (hasHue ? 360 : 255),\n                secondChannelDivisor = (matchCssSyntax[5] || hasHue) ? 100 : 255,\n                thirdChannelDivisor = (matchCssSyntax[7] || hasHue) ? 100 : 255;\n            if (undef(color[colorSpaceName])) {\n                throw new Error('color.' + colorSpaceName + ' is not installed.');\n            }\n            return new color[colorSpaceName](\n                parseFloat(matchCssSyntax[2]) / firstChannelDivisor,\n                parseFloat(matchCssSyntax[4]) / secondChannelDivisor,\n                parseFloat(matchCssSyntax[6]) / thirdChannelDivisor,\n                alpha\n            );\n        }\n        // Assume hex syntax\n        if (obj.length < 6) {\n            // Allow CSS shorthand\n            obj = obj.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, '$1$1$2$2$3$3');\n        }\n        // Split obj into red, green, and blue components\n        var hexMatch = obj.match(/^#?([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])$/i);\n        if (hexMatch) {\n            return new color.RGB(\n                parseInt(hexMatch[1], 16) / 255,\n                parseInt(hexMatch[2], 16) / 255,\n                parseInt(hexMatch[3], 16) / 255\n            );\n        }\n\n        // No match so far. Lets try the less likely ones\n        if (color.CMYK) {\n            var cmykMatch = obj.match(new RegExp(\n                             '^cmyk' +\n                             '\\\\(' +\n                                 percentageChannelRegExp.source + ',' +\n                                 percentageChannelRegExp.source + ',' +\n                                 percentageChannelRegExp.source + ',' +\n                                 percentageChannelRegExp.source +\n                             '\\\\)$', 'i'));\n            if (cmykMatch) {\n                return new color.CMYK(\n                    parseFloat(cmykMatch[1]) / 100,\n                    parseFloat(cmykMatch[2]) / 100,\n                    parseFloat(cmykMatch[3]) / 100,\n                    parseFloat(cmykMatch[4]) / 100\n                );\n            }\n        }\n    } else if (typeof obj === 'object' && obj.isColor) {\n        return obj;\n    }\n    return false;\n}\n\ncolor.namedColors = {};\n\ncolor.installColorSpace = function (colorSpaceName, propertyNames, config) {\n    color[colorSpaceName] = function (a1) { // ...\n        var args = Array.isArray(a1) ? a1 : arguments;\n        propertyNames.forEach(function (propertyName, i) {\n            var propertyValue = args[i];\n            if (propertyName === 'alpha') {\n                this._alpha = (isNaN(propertyValue) || propertyValue > 1) ? 1 : (propertyValue < 0 ? 0 : propertyValue);\n            } else {\n                if (isNaN(propertyValue)) {\n                    throw new Error('[' + colorSpaceName + ']: Invalid color: (' + propertyNames.join(',') + ')');\n                }\n                if (propertyName === 'hue') {\n                    this._hue = propertyValue < 0 ? propertyValue - Math.floor(propertyValue) : propertyValue % 1;\n                } else {\n                    this['_' + propertyName] = propertyValue < 0 ? 0 : (propertyValue > 1 ? 1 : propertyValue);\n                }\n            }\n        }, this);\n    };\n    color[colorSpaceName].propertyNames = propertyNames;\n\n    var prototype = color[colorSpaceName].prototype;\n\n    ['valueOf', 'hex', 'hexa', 'css', 'cssa'].forEach(function (methodName) {\n        prototype[methodName] = prototype[methodName] || (colorSpaceName === 'RGB' ? prototype.hex : function () {\n            return this.rgb()[methodName]();\n        });\n    });\n\n    prototype.isColor = true;\n\n    prototype.equals = function (otherColor, epsilon) {\n        if (undef(epsilon)) {\n            epsilon = 1e-10;\n        }\n\n        otherColor = otherColor[colorSpaceName.toLowerCase()]();\n\n        for (var i = 0; i < propertyNames.length; i = i + 1) {\n            if (Math.abs(this['_' + propertyNames[i]] - otherColor['_' + propertyNames[i]]) > epsilon) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    prototype.toJSON = function () {\n        return [colorSpaceName].concat(propertyNames.map(function (propertyName) {\n            return this['_' + propertyName];\n        }, this));\n    };\n\n    for (var propertyName in config) {\n        if (config.hasOwnProperty(propertyName)) {\n            var matchFromColorSpace = propertyName.match(/^from(.*)$/);\n            if (matchFromColorSpace) {\n                color[matchFromColorSpace[1].toUpperCase()].prototype[colorSpaceName.toLowerCase()] = config[propertyName];\n            } else {\n                prototype[propertyName] = config[propertyName];\n            }\n        }\n    }\n\n    // It is pretty easy to implement the conversion to the same color space:\n    prototype[colorSpaceName.toLowerCase()] = function () {\n        return this;\n    };\n    prototype.toString = function () {\n        return '[' + colorSpaceName + ' ' + propertyNames.map(function (propertyName) {\n            return this['_' + propertyName];\n        }).join(', ') + ']';\n    };\n\n    // Generate getters and setters\n    propertyNames.forEach(function (propertyName) {\n        var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n        prototype[propertyName] = prototype[shortName] = function (value, isDelta) {\n            // Simple getter mode: color.red()\n            if (typeof value === 'undefined') {\n                return this['_' + propertyName];\n            } else if (isDelta) {\n                // Adjuster: color.red(+.2, true)\n                return new this.constructor(propertyNames.map(function (otherPropertyName) {\n                    return this['_' + otherPropertyName] + (propertyName === otherPropertyName ? value : 0);\n                }, this));\n            } else {\n                // Setter: color.red(.2);\n                return new this.constructor(propertyNames.map(function (otherPropertyName) {\n                    return (propertyName === otherPropertyName) ? value : this['_' + otherPropertyName];\n                }, this));\n            }\n        };\n    });\n\n    function installForeignMethods(targetColorSpaceName, sourceColorSpaceName) {\n        var obj = {};\n        obj[sourceColorSpaceName.toLowerCase()] = function () {\n            return this.rgb()[sourceColorSpaceName.toLowerCase()]();\n        };\n        color[sourceColorSpaceName].propertyNames.forEach(function (propertyName) {\n            var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n            obj[propertyName] = obj[shortName] = function (value, isDelta) {\n                return this[sourceColorSpaceName.toLowerCase()]()[propertyName](value, isDelta);\n            };\n        });\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop) && color[targetColorSpaceName].prototype[prop] === undefined) {\n                color[targetColorSpaceName].prototype[prop] = obj[prop];\n            }\n        }\n    }\n\n    installedColorSpaces.forEach(function (otherColorSpaceName) {\n        installForeignMethods(colorSpaceName, otherColorSpaceName);\n        installForeignMethods(otherColorSpaceName, colorSpaceName);\n    });\n\n    installedColorSpaces.push(colorSpaceName);\n    return color;\n};\n\ncolor.pluginList = [];\n\ncolor.use = function (plugin) {\n    if (color.pluginList.indexOf(plugin) === -1) {\n        this.pluginList.push(plugin);\n        plugin(color);\n    }\n    return color;\n};\n\ncolor.installMethod = function (name, fn) {\n    installedColorSpaces.forEach(function (colorSpace) {\n        color[colorSpace].prototype[name] = fn;\n    });\n    return this;\n};\n\ncolor.installColorSpace('RGB', ['red', 'green', 'blue', 'alpha'], {\n    hex: function () {\n        var hexString = (Math.round(255 * this._red) * 0x10000 + Math.round(255 * this._green) * 0x100 + Math.round(255 * this._blue)).toString(16);\n        return '#' + ('00000'.substr(0, 6 - hexString.length)) + hexString;\n    },\n\n    hexa: function () {\n        var alphaString = Math.round(this._alpha * 255).toString(16);\n        return '#' + '00'.substr(0, 2 - alphaString.length) + alphaString + this.hex().substr(1, 6);\n    },\n\n    css: function () {\n        return 'rgb(' + Math.round(255 * this._red) + ',' + Math.round(255 * this._green) + ',' + Math.round(255 * this._blue) + ')';\n    },\n\n    cssa: function () {\n        return 'rgba(' + Math.round(255 * this._red) + ',' + Math.round(255 * this._green) + ',' + Math.round(255 * this._blue) + ',' + this._alpha + ')';\n    }\n});\n\nmodule.exports = color;\n","module.exports = function clearer(color) {\n    color.installMethod('clearer', function (amount) {\n        return this.alpha(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n","module.exports = function darken(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('darken', function (amount) {\n        return this.lightness(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n","module.exports = function desaturate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('desaturate', function (amount) {\n        return this.saturation(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n","module.exports = function grayscale(color) {\n    function gs () {\n        /*jslint strict:false*/\n        var rgb = this.rgb(),\n            val = rgb._red * 0.3 + rgb._green * 0.59 + rgb._blue * 0.11;\n\n        return new color.RGB(val, val, val, rgb._alpha);\n    }\n\n    color.installMethod('greyscale', gs).installMethod('grayscale', gs);\n};\n","module.exports = function lighten(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('lighten', function (amount) {\n        return this.lightness(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n","module.exports = function mix(color) {\n    color.installMethod('mix', function (otherColor, weight) {\n        otherColor = color(otherColor).rgb();\n        weight = 1 - (isNaN(weight) ? 0.5 : weight);\n\n        var w = weight * 2 - 1,\n            a = this._alpha - otherColor._alpha,\n            weight1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2,\n            weight2 = 1 - weight1,\n            rgb = this.rgb();\n\n        return new color.RGB(\n            rgb._red * weight1 + otherColor._red * weight2,\n            rgb._green * weight1 + otherColor._green * weight2,\n            rgb._blue * weight1 + otherColor._blue * weight2,\n            rgb._alpha * weight + otherColor._alpha * (1 - weight)\n        );\n    });\n};\n","module.exports = function namedColors(color) {\n    color.namedColors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '0ff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000',\n        blanchedalmond: 'ffebcd',\n        blue: '00f',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '0ff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgrey: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkslategrey: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dimgrey: '696969',\n        dodgerblue: '1e90ff',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'f0f',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        grey: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred: 'cd5c5c',\n        indigo: '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgray: 'd3d3d3',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslategray: '789',\n        lightslategrey: '789',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '0f0',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'f0f',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '639',\n        red: 'f00',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        slategrey: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        wheat: 'f5deb3',\n        white: 'fff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ff0',\n        yellowgreen: '9acd32'\n    };\n};\n","module.exports = function negate(color) {\n    color.installMethod('negate', function () {\n        var rgb = this.rgb();\n        return new color.RGB(1 - rgb._red, 1 - rgb._green, 1 - rgb._blue, this._alpha);\n    });\n};\n","module.exports = function opaquer(color) {\n    color.installMethod('opaquer', function (amount) {\n        return this.alpha(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n","module.exports = function rotate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('rotate', function (degrees) {\n        return this.hue((degrees || 0) / 360, true);\n    });\n};\n","module.exports = function saturate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('saturate', function (amount) {\n        return this.saturation(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n","// Adapted from http://gimp.sourcearchive.com/documentation/2.6.6-1ubuntu1/color-to-alpha_8c-source.html\n// toAlpha returns a color where the values of the argument have been converted to alpha\nmodule.exports = function toAlpha(color) {\n    color.installMethod('toAlpha', function (color) {\n        var me = this.rgb(),\n            other = color(color).rgb(),\n            epsilon = 1e-10,\n            a = new color.RGB(0, 0, 0, me._alpha),\n            channels = ['_red', '_green', '_blue'];\n\n        channels.forEach(function (channel) {\n            if (me[channel] < epsilon) {\n                a[channel] = me[channel];\n            } else if (me[channel] > other[channel]) {\n                a[channel] = (me[channel] - other[channel]) / (1 - other[channel]);\n            } else if (me[channel] > other[channel]) {\n                a[channel] = (other[channel] - me[channel]) / other[channel];\n            } else {\n                a[channel] = 0;\n            }\n        });\n\n        if (a._red > a._green) {\n            if (a._red > a._blue) {\n                me._alpha = a._red;\n            } else {\n                me._alpha = a._blue;\n            }\n        } else if (a._green > a._blue) {\n            me._alpha = a._green;\n        } else {\n            me._alpha = a._blue;\n        }\n\n        if (me._alpha < epsilon) {\n            return me;\n        }\n\n        channels.forEach(function (channel) {\n            me[channel] = (me[channel] - other[channel]) / me._alpha + other[channel];\n        });\n        me._alpha *= a._alpha;\n\n        return me;\n    });\n};\n","// These methods let you build a transform function from a transformComponent\n// function for OT types like JSON0 in which operations are lists of components\n// and transforming them requires N^2 work. I find it kind of nasty that I need\n// this, but I'm not really sure what a better solution is. Maybe I should do\n// this automatically to types that don't have a compose function defined.\n\n// Add transform and transformX functions for an OT type which has\n// transformComponent defined.  transformComponent(destination array,\n// component, other component, side)\nmodule.exports = bootstrapTransform\nfunction bootstrapTransform(type, transformComponent, checkValidOp, append) {\n  var transformComponentX = function(left, right, destLeft, destRight) {\n    transformComponent(destLeft, left, right, 'left');\n    transformComponent(destRight, right, left, 'right');\n  };\n\n  var transformX = type.transformX = function(leftOp, rightOp) {\n    checkValidOp(leftOp);\n    checkValidOp(rightOp);\n    var newRightOp = [];\n\n    for (var i = 0; i < rightOp.length; i++) {\n      var rightComponent = rightOp[i];\n\n      // Generate newLeftOp by composing leftOp by rightComponent\n      var newLeftOp = [];\n      var k = 0;\n      while (k < leftOp.length) {\n        var nextC = [];\n        transformComponentX(leftOp[k], rightComponent, newLeftOp, nextC);\n        k++;\n\n        if (nextC.length === 1) {\n          rightComponent = nextC[0];\n        } else if (nextC.length === 0) {\n          for (var j = k; j < leftOp.length; j++) {\n            append(newLeftOp, leftOp[j]);\n          }\n          rightComponent = null;\n          break;\n        } else {\n          // Recurse.\n          var pair = transformX(leftOp.slice(k), nextC);\n          for (var l = 0; l < pair[0].length; l++) {\n            append(newLeftOp, pair[0][l]);\n          }\n          for (var r = 0; r < pair[1].length; r++) {\n            append(newRightOp, pair[1][r]);\n          }\n          rightComponent = null;\n          break;\n        }\n      }\n\n      if (rightComponent != null) {\n        append(newRightOp, rightComponent);\n      }\n      leftOp = newLeftOp;\n    }\n    return [leftOp, newRightOp];\n  };\n\n  // Transforms op with specified type ('left' or 'right') by otherOp.\n  type.transform = function(op, otherOp, type) {\n    if (!(type === 'left' || type === 'right'))\n      throw new Error(\"type must be 'left' or 'right'\");\n\n    if (otherOp.length === 0) return op;\n\n    if (op.length === 1 && otherOp.length === 1)\n      return transformComponent([], op[0], otherOp[0], type);\n\n    if (type === 'left')\n      return transformX(op, otherOp)[0];\n    else\n      return transformX(otherOp, op)[1];\n  };\n};\n","// Only the JSON type is exported, because the text type is deprecated\n// otherwise. (If you want to use it somewhere, you're welcome to pull it out\n// into a separate module that json0 can depend on).\n\nmodule.exports = {\n  type: require('./json0')\n};\n","/*\n This is the implementation of the JSON OT type.\n\n Spec is here: https://github.com/josephg/ShareJS/wiki/JSON-Operations\n\n Note: This is being made obsolete. It will soon be replaced by the JSON2 type.\n*/\n\n/**\n * UTILITY FUNCTIONS\n */\n\n/**\n * Checks if the passed object is an Array instance. Can't use Array.isArray\n * yet because its not supported on IE8.\n *\n * @param obj\n * @returns {boolean}\n */\nvar isArray = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Array]';\n};\n\n/**\n * Checks if the passed object is an Object instance.\n * No function call (fast) version\n *\n * @param obj\n * @returns {boolean}\n */\nvar isObject = function(obj) {\n  return (!!obj) && (obj.constructor === Object);\n};\n\n/**\n * Clones the passed object using JSON serialization (which is slow).\n *\n * hax, copied from test/types/json. Apparently this is still the fastest way\n * to deep clone an object, assuming we have browser support for JSON.  @see\n * http://jsperf.com/cloning-an-object/12\n */\nvar clone = function(o) {\n  return JSON.parse(JSON.stringify(o));\n};\n\n/**\n * JSON OT Type\n * @type {*}\n */\nvar json = {\n  name: 'json0',\n  uri: 'http://sharejs.org/types/JSONv0'\n};\n\n// You can register another OT type as a subtype in a JSON document using\n// the following function. This allows another type to handle certain\n// operations instead of the builtin JSON type.\nvar subtypes = {};\njson.registerSubtype = function(subtype) {\n  subtypes[subtype.name] = subtype;\n};\n\njson.create = function(data) {\n  // Null instead of undefined if you don't pass an argument.\n  return data === undefined ? null : clone(data);\n};\n\njson.invertComponent = function(c) {\n  var c_ = {p: c.p};\n\n  // handle subtype ops\n  if (c.t && subtypes[c.t]) {\n    c_.t = c.t;\n    c_.o = subtypes[c.t].invert(c.o);\n  }\n\n  if (c.si !== void 0) c_.sd = c.si;\n  if (c.sd !== void 0) c_.si = c.sd;\n  if (c.oi !== void 0) c_.od = c.oi;\n  if (c.od !== void 0) c_.oi = c.od;\n  if (c.li !== void 0) c_.ld = c.li;\n  if (c.ld !== void 0) c_.li = c.ld;\n  if (c.na !== void 0) c_.na = -c.na;\n\n  if (c.lm !== void 0) {\n    c_.lm = c.p[c.p.length-1];\n    c_.p = c.p.slice(0,c.p.length-1).concat([c.lm]);\n  }\n\n  return c_;\n};\n\njson.invert = function(op) {\n  var op_ = op.slice().reverse();\n  var iop = [];\n  for (var i = 0; i < op_.length; i++) {\n    iop.push(json.invertComponent(op_[i]));\n  }\n  return iop;\n};\n\njson.checkValidOp = function(op) {\n  for (var i = 0; i < op.length; i++) {\n    if (!isArray(op[i].p)) throw new Error('Missing path');\n  }\n};\n\njson.checkList = function(elem) {\n  if (!isArray(elem))\n    throw new Error('Referenced element not a list');\n};\n\njson.checkObj = function(elem) {\n  if (!isObject(elem)) {\n    throw new Error(\"Referenced element not an object (it was \" + JSON.stringify(elem) + \")\");\n  }\n};\n\n// helper functions to convert old string ops to and from subtype ops\nfunction convertFromText(c) {\n  c.t = 'text0';\n  var o = {p: c.p.pop()};\n  if (c.si != null) o.i = c.si;\n  if (c.sd != null) o.d = c.sd;\n  c.o = [o];\n}\n\nfunction convertToText(c) {\n  c.p.push(c.o[0].p);\n  if (c.o[0].i != null) c.si = c.o[0].i;\n  if (c.o[0].d != null) c.sd = c.o[0].d;\n  delete c.t;\n  delete c.o;\n}\n\njson.apply = function(snapshot, op) {\n  json.checkValidOp(op);\n\n  op = clone(op);\n\n  var container = {\n    data: snapshot\n  };\n\n  for (var i = 0; i < op.length; i++) {\n    var c = op[i];\n\n    // convert old string ops to use subtype for backwards compatibility\n    if (c.si != null || c.sd != null)\n      convertFromText(c);\n\n    var parent = null;\n    var parentKey = null;\n    var elem = container;\n    var key = 'data';\n\n    for (var j = 0; j < c.p.length; j++) {\n      var p = c.p[j];\n\n      parent = elem;\n      parentKey = key;\n      elem = elem[key];\n      key = p;\n\n      if (parent == null)\n        throw new Error('Path invalid');\n    }\n\n    // handle subtype ops\n    if (c.t && c.o !== void 0 && subtypes[c.t]) {\n      elem[key] = subtypes[c.t].apply(elem[key], c.o);\n\n    // Number add\n    } else if (c.na !== void 0) {\n      if (typeof elem[key] != 'number')\n        throw new Error('Referenced element not a number');\n\n      elem[key] += c.na;\n    }\n\n    // List replace\n    else if (c.li !== void 0 && c.ld !== void 0) {\n      json.checkList(elem);\n      // Should check the list element matches c.ld\n      elem[key] = c.li;\n    }\n\n    // List insert\n    else if (c.li !== void 0) {\n      json.checkList(elem);\n      elem.splice(key,0, c.li);\n    }\n\n    // List delete\n    else if (c.ld !== void 0) {\n      json.checkList(elem);\n      // Should check the list element matches c.ld here too.\n      elem.splice(key,1);\n    }\n\n    // List move\n    else if (c.lm !== void 0) {\n      json.checkList(elem);\n      if (c.lm != key) {\n        var e = elem[key];\n        // Remove it...\n        elem.splice(key,1);\n        // And insert it back.\n        elem.splice(c.lm,0,e);\n      }\n    }\n\n    // Object insert / replace\n    else if (c.oi !== void 0) {\n      json.checkObj(elem);\n\n      // Should check that elem[key] == c.od\n      elem[key] = c.oi;\n    }\n\n    // Object delete\n    else if (c.od !== void 0) {\n      json.checkObj(elem);\n\n      // Should check that elem[key] == c.od\n      delete elem[key];\n    }\n\n    else {\n      throw new Error('invalid / missing instruction in op');\n    }\n  }\n\n  return container.data;\n};\n\n// Helper to break an operation up into a bunch of small ops.\njson.shatter = function(op) {\n  var results = [];\n  for (var i = 0; i < op.length; i++) {\n    results.push([op[i]]);\n  }\n  return results;\n};\n\n// Helper for incrementally applying an operation to a snapshot. Calls yield\n// after each op component has been applied.\njson.incrementalApply = function(snapshot, op, _yield) {\n  for (var i = 0; i < op.length; i++) {\n    var smallOp = [op[i]];\n    snapshot = json.apply(snapshot, smallOp);\n    // I'd just call this yield, but thats a reserved keyword. Bah!\n    _yield(smallOp, snapshot);\n  }\n\n  return snapshot;\n};\n\n// Checks if two paths, p1 and p2 match.\nvar pathMatches = json.pathMatches = function(p1, p2, ignoreLast) {\n  if (p1.length != p2.length)\n    return false;\n\n  for (var i = 0; i < p1.length; i++) {\n    if (p1[i] !== p2[i] && (!ignoreLast || i !== p1.length - 1))\n      return false;\n  }\n\n  return true;\n};\n\njson.append = function(dest,c) {\n  c = clone(c);\n\n  if (dest.length === 0) {\n    dest.push(c);\n    return;\n  }\n\n  var last = dest[dest.length - 1];\n\n  // convert old string ops to use subtype for backwards compatibility\n  if ((c.si != null || c.sd != null) && (last.si != null || last.sd != null)) {\n    convertFromText(c);\n    convertFromText(last);\n  }\n\n  if (pathMatches(c.p, last.p)) {\n    // handle subtype ops\n    if (c.t && last.t && c.t === last.t && subtypes[c.t]) {\n      last.o = subtypes[c.t].compose(last.o, c.o);\n\n      // convert back to old string ops\n      if (c.si != null || c.sd != null) {\n        var p = c.p;\n        for (var i = 0; i < last.o.length - 1; i++) {\n          c.o = [last.o.pop()];\n          c.p = p.slice();\n          convertToText(c);\n          dest.push(c);\n        }\n\n        convertToText(last);\n      }\n    } else if (last.na != null && c.na != null) {\n      dest[dest.length - 1] = {p: last.p, na: last.na + c.na};\n    } else if (last.li !== undefined && c.li === undefined && c.ld === last.li) {\n      // insert immediately followed by delete becomes a noop.\n      if (last.ld !== undefined) {\n        // leave the delete part of the replace\n        delete last.li;\n      } else {\n        dest.pop();\n      }\n    } else if (last.od !== undefined && last.oi === undefined && c.oi !== undefined && c.od === undefined) {\n      last.oi = c.oi;\n    } else if (last.oi !== undefined && c.od !== undefined) {\n      // The last path component inserted something that the new component deletes (or replaces).\n      // Just merge them.\n      if (c.oi !== undefined) {\n        last.oi = c.oi;\n      } else if (last.od !== undefined) {\n        delete last.oi;\n      } else {\n        // An insert directly followed by a delete turns into a no-op and can be removed.\n        dest.pop();\n      }\n    } else if (c.lm !== undefined && c.p[c.p.length - 1] === c.lm) {\n      // don't do anything\n    } else {\n      dest.push(c);\n    }\n  } else {\n    // convert string ops back\n    if ((c.si != null || c.sd != null) && (last.si != null || last.sd != null)) {\n      convertToText(c);\n      convertToText(last);\n    }\n\n    dest.push(c);\n  }\n};\n\njson.compose = function(op1,op2) {\n  json.checkValidOp(op1);\n  json.checkValidOp(op2);\n\n  var newOp = clone(op1);\n\n  for (var i = 0; i < op2.length; i++) {\n    json.append(newOp,op2[i]);\n  }\n\n  return newOp;\n};\n\njson.normalize = function(op) {\n  var newOp = [];\n\n  op = isArray(op) ? op : [op];\n\n  for (var i = 0; i < op.length; i++) {\n    var c = op[i];\n    if (c.p == null) c.p = [];\n\n    json.append(newOp,c);\n  }\n\n  return newOp;\n};\n\n// Returns the common length of the paths of ops a and b\njson.commonLengthForOps = function(a, b) {\n  var alen = a.p.length;\n  var blen = b.p.length;\n  if (a.na != null || a.t)\n    alen++;\n\n  if (b.na != null || b.t)\n    blen++;\n\n  if (alen === 0) return -1;\n  if (blen === 0) return null;\n\n  alen--;\n  blen--;\n\n  for (var i = 0; i < alen; i++) {\n    var p = a.p[i];\n    if (i >= blen || p !== b.p[i])\n      return null;\n  }\n\n  return alen;\n};\n\n// Returns true if an op can affect the given path\njson.canOpAffectPath = function(op, path) {\n  return json.commonLengthForOps({p:path}, op) != null;\n};\n\n// transform c so it applies to a document with otherC applied.\njson.transformComponent = function(dest, c, otherC, type) {\n  c = clone(c);\n\n  var common = json.commonLengthForOps(otherC, c);\n  var common2 = json.commonLengthForOps(c, otherC);\n  var cplength = c.p.length;\n  var otherCplength = otherC.p.length;\n\n  if (c.na != null || c.t)\n    cplength++;\n\n  if (otherC.na != null || otherC.t)\n    otherCplength++;\n\n  // if c is deleting something, and that thing is changed by otherC, we need to\n  // update c to reflect that change for invertibility.\n  if (common2 != null && otherCplength > cplength && c.p[common2] == otherC.p[common2]) {\n    if (c.ld !== void 0) {\n      var oc = clone(otherC);\n      oc.p = oc.p.slice(cplength);\n      c.ld = json.apply(clone(c.ld),[oc]);\n    } else if (c.od !== void 0) {\n      var oc = clone(otherC);\n      oc.p = oc.p.slice(cplength);\n      c.od = json.apply(clone(c.od),[oc]);\n    }\n  }\n\n  if (common != null) {\n    var commonOperand = cplength == otherCplength;\n\n    // backward compatibility for old string ops\n    var oc = otherC;\n    if ((c.si != null || c.sd != null) && (otherC.si != null || otherC.sd != null)) {\n      convertFromText(c);\n      oc = clone(otherC);\n      convertFromText(oc);\n    }\n\n    // handle subtype ops\n    if (oc.t && subtypes[oc.t]) {\n      if (c.t && c.t === oc.t) {\n        var res = subtypes[c.t].transform(c.o, oc.o, type);\n\n        if (res.length > 0) {\n          // convert back to old string ops\n          if (c.si != null || c.sd != null) {\n            var p = c.p;\n            for (var i = 0; i < res.length; i++) {\n              c.o = [res[i]];\n              c.p = p.slice();\n              convertToText(c);\n              json.append(dest, c);\n            }\n          } else {\n            c.o = res;\n            json.append(dest, c);\n          }\n        }\n\n        return dest;\n      }\n    }\n\n    // transform based on otherC\n    else if (otherC.na !== void 0) {\n      // this case is handled below\n    } else if (otherC.li !== void 0 && otherC.ld !== void 0) {\n      if (otherC.p[common] === c.p[common]) {\n        // noop\n\n        if (!commonOperand) {\n          return dest;\n        } else if (c.ld !== void 0) {\n          // we're trying to delete the same element, -> noop\n          if (c.li !== void 0 && type === 'left') {\n            // we're both replacing one element with another. only one can survive\n            c.ld = clone(otherC.li);\n          } else {\n            return dest;\n          }\n        }\n      }\n    } else if (otherC.li !== void 0) {\n      if (c.li !== void 0 && c.ld === undefined && commonOperand && c.p[common] === otherC.p[common]) {\n        // in li vs. li, left wins.\n        if (type === 'right')\n          c.p[common]++;\n      } else if (otherC.p[common] <= c.p[common]) {\n        c.p[common]++;\n      }\n\n      if (c.lm !== void 0) {\n        if (commonOperand) {\n          // otherC edits the same list we edit\n          if (otherC.p[common] <= c.lm)\n            c.lm++;\n          // changing c.from is handled above.\n        }\n      }\n    } else if (otherC.ld !== void 0) {\n      if (c.lm !== void 0) {\n        if (commonOperand) {\n          if (otherC.p[common] === c.p[common]) {\n            // they deleted the thing we're trying to move\n            return dest;\n          }\n          // otherC edits the same list we edit\n          var p = otherC.p[common];\n          var from = c.p[common];\n          var to = c.lm;\n          if (p < to || (p === to && from < to))\n            c.lm--;\n\n        }\n      }\n\n      if (otherC.p[common] < c.p[common]) {\n        c.p[common]--;\n      } else if (otherC.p[common] === c.p[common]) {\n        if (otherCplength < cplength) {\n          // we're below the deleted element, so -> noop\n          return dest;\n        } else if (c.ld !== void 0) {\n          if (c.li !== void 0) {\n            // we're replacing, they're deleting. we become an insert.\n            delete c.ld;\n          } else {\n            // we're trying to delete the same element, -> noop\n            return dest;\n          }\n        }\n      }\n\n    } else if (otherC.lm !== void 0) {\n      if (c.lm !== void 0 && cplength === otherCplength) {\n        // lm vs lm, here we go!\n        var from = c.p[common];\n        var to = c.lm;\n        var otherFrom = otherC.p[common];\n        var otherTo = otherC.lm;\n        if (otherFrom !== otherTo) {\n          // if otherFrom == otherTo, we don't need to change our op.\n\n          // where did my thing go?\n          if (from === otherFrom) {\n            // they moved it! tie break.\n            if (type === 'left') {\n              c.p[common] = otherTo;\n              if (from === to) // ugh\n                c.lm = otherTo;\n            } else {\n              return dest;\n            }\n          } else {\n            // they moved around it\n            if (from > otherFrom) c.p[common]--;\n            if (from > otherTo) c.p[common]++;\n            else if (from === otherTo) {\n              if (otherFrom > otherTo) {\n                c.p[common]++;\n                if (from === to) // ugh, again\n                  c.lm++;\n              }\n            }\n\n            // step 2: where am i going to put it?\n            if (to > otherFrom) {\n              c.lm--;\n            } else if (to === otherFrom) {\n              if (to > from)\n                c.lm--;\n            }\n            if (to > otherTo) {\n              c.lm++;\n            } else if (to === otherTo) {\n              // if we're both moving in the same direction, tie break\n              if ((otherTo > otherFrom && to > from) ||\n                  (otherTo < otherFrom && to < from)) {\n                if (type === 'right') c.lm++;\n              } else {\n                if (to > from) c.lm++;\n                else if (to === otherFrom) c.lm--;\n              }\n            }\n          }\n        }\n      } else if (c.li !== void 0 && c.ld === undefined && commonOperand) {\n        // li\n        var from = otherC.p[common];\n        var to = otherC.lm;\n        p = c.p[common];\n        if (p > from) c.p[common]--;\n        if (p > to) c.p[common]++;\n      } else {\n        // ld, ld+li, si, sd, na, oi, od, oi+od, any li on an element beneath\n        // the lm\n        //\n        // i.e. things care about where their item is after the move.\n        var from = otherC.p[common];\n        var to = otherC.lm;\n        p = c.p[common];\n        if (p === from) {\n          c.p[common] = to;\n        } else {\n          if (p > from) c.p[common]--;\n          if (p > to) c.p[common]++;\n          else if (p === to && from > to) c.p[common]++;\n        }\n      }\n    }\n    else if (otherC.oi !== void 0 && otherC.od !== void 0) {\n      if (c.p[common] === otherC.p[common]) {\n        if (c.oi !== void 0 && commonOperand) {\n          // we inserted where someone else replaced\n          if (type === 'right') {\n            // left wins\n            return dest;\n          } else {\n            // we win, make our op replace what they inserted\n            c.od = otherC.oi;\n          }\n        } else {\n          // -> noop if the other component is deleting the same object (or any parent)\n          return dest;\n        }\n      }\n    } else if (otherC.oi !== void 0) {\n      if (c.oi !== void 0 && c.p[common] === otherC.p[common]) {\n        // left wins if we try to insert at the same place\n        if (type === 'left') {\n          json.append(dest,{p: c.p, od:otherC.oi});\n        } else {\n          return dest;\n        }\n      }\n    } else if (otherC.od !== void 0) {\n      if (c.p[common] == otherC.p[common]) {\n        if (!commonOperand)\n          return dest;\n        if (c.oi !== void 0) {\n          delete c.od;\n        } else {\n          return dest;\n        }\n      }\n    }\n  }\n\n  json.append(dest,c);\n  return dest;\n};\n\nrequire('./bootstrapTransform')(json, json.transformComponent, json.checkValidOp, json.append);\n\n/**\n * Register a subtype for string operations, using the text0 type.\n */\nvar text = require('./text0');\n\njson.registerSubtype(text);\nmodule.exports = json;\n\n","// DEPRECATED!\n//\n// This type works, but is not exported. Its included here because the JSON0\n// embedded string operations use this library.\n\n\n// A simple text implementation\n//\n// Operations are lists of components. Each component either inserts or deletes\n// at a specified position in the document.\n//\n// Components are either:\n//  {i:'str', p:100}: Insert 'str' at position 100 in the document\n//  {d:'str', p:100}: Delete 'str' at position 100 in the document\n//\n// Components in an operation are executed sequentially, so the position of components\n// assumes previous components have already executed.\n//\n// Eg: This op:\n//   [{i:'abc', p:0}]\n// is equivalent to this op:\n//   [{i:'a', p:0}, {i:'b', p:1}, {i:'c', p:2}]\n\nvar text = module.exports = {\n  name: 'text0',\n  uri: 'http://sharejs.org/types/textv0',\n  create: function(initial) {\n    if ((initial != null) && typeof initial !== 'string') {\n      throw new Error('Initial data must be a string');\n    }\n    return initial || '';\n  }\n};\n\n/** Insert s2 into s1 at pos. */\nvar strInject = function(s1, pos, s2) {\n  return s1.slice(0, pos) + s2 + s1.slice(pos);\n};\n\n/** Check that an operation component is valid. Throws if its invalid. */\nvar checkValidComponent = function(c) {\n  if (typeof c.p !== 'number')\n    throw new Error('component missing position field');\n\n  if ((typeof c.i === 'string') === (typeof c.d === 'string'))\n    throw new Error('component needs an i or d field');\n\n  if (c.p < 0)\n    throw new Error('position cannot be negative');\n};\n\n/** Check that an operation is valid */\nvar checkValidOp = function(op) {\n  for (var i = 0; i < op.length; i++) {\n    checkValidComponent(op[i]);\n  }\n};\n\n/** Apply op to snapshot */\ntext.apply = function(snapshot, op) {\n  var deleted;\n\n  checkValidOp(op);\n  for (var i = 0; i < op.length; i++) {\n    var component = op[i];\n    if (component.i != null) {\n      snapshot = strInject(snapshot, component.p, component.i);\n    } else {\n      deleted = snapshot.slice(component.p, component.p + component.d.length);\n      if (component.d !== deleted)\n        throw new Error(\"Delete component '\" + component.d + \"' does not match deleted text '\" + deleted + \"'\");\n\n      snapshot = snapshot.slice(0, component.p) + snapshot.slice(component.p + component.d.length);\n    }\n  }\n  return snapshot;\n};\n\n/**\n * Append a component to the end of newOp. Exported for use by the random op\n * generator and the JSON0 type.\n */\nvar append = text._append = function(newOp, c) {\n  if (c.i === '' || c.d === '') return;\n\n  if (newOp.length === 0) {\n    newOp.push(c);\n  } else {\n    var last = newOp[newOp.length - 1];\n\n    if (last.i != null && c.i != null && last.p <= c.p && c.p <= last.p + last.i.length) {\n      // Compose the insert into the previous insert\n      newOp[newOp.length - 1] = {i:strInject(last.i, c.p - last.p, c.i), p:last.p};\n\n    } else if (last.d != null && c.d != null && c.p <= last.p && last.p <= c.p + c.d.length) {\n      // Compose the deletes together\n      newOp[newOp.length - 1] = {d:strInject(c.d, last.p - c.p, last.d), p:c.p};\n\n    } else {\n      newOp.push(c);\n    }\n  }\n};\n\n/** Compose op1 and op2 together */\ntext.compose = function(op1, op2) {\n  checkValidOp(op1);\n  checkValidOp(op2);\n  var newOp = op1.slice();\n  for (var i = 0; i < op2.length; i++) {\n    append(newOp, op2[i]);\n  }\n  return newOp;\n};\n\n/** Clean up an op */\ntext.normalize = function(op) {\n  var newOp = [];\n\n  // Normalize should allow ops which are a single (unwrapped) component:\n  // {i:'asdf', p:23}.\n  // There's no good way to test if something is an array:\n  // http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\n  // so this is probably the least bad solution.\n  if (op.i != null || op.p != null) op = [op];\n\n  for (var i = 0; i < op.length; i++) {\n    var c = op[i];\n    if (c.p == null) c.p = 0;\n\n    append(newOp, c);\n  }\n\n  return newOp;\n};\n\n// This helper method transforms a position by an op component.\n//\n// If c is an insert, insertAfter specifies whether the transform\n// is pushed after the insert (true) or before it (false).\n//\n// insertAfter is optional for deletes.\nvar transformPosition = function(pos, c, insertAfter) {\n  // This will get collapsed into a giant ternary by uglify.\n  if (c.i != null) {\n    if (c.p < pos || (c.p === pos && insertAfter)) {\n      return pos + c.i.length;\n    } else {\n      return pos;\n    }\n  } else {\n    // I think this could also be written as: Math.min(c.p, Math.min(c.p -\n    // otherC.p, otherC.d.length)) but I think its harder to read that way, and\n    // it compiles using ternary operators anyway so its no slower written like\n    // this.\n    if (pos <= c.p) {\n      return pos;\n    } else if (pos <= c.p + c.d.length) {\n      return c.p;\n    } else {\n      return pos - c.d.length;\n    }\n  }\n};\n\n// Helper method to transform a cursor position as a result of an op.\n//\n// Like transformPosition above, if c is an insert, insertAfter specifies\n// whether the cursor position is pushed after an insert (true) or before it\n// (false).\ntext.transformCursor = function(position, op, side) {\n  var insertAfter = side === 'right';\n  for (var i = 0; i < op.length; i++) {\n    position = transformPosition(position, op[i], insertAfter);\n  }\n\n  return position;\n};\n\n// Transform an op component by another op component. Asymmetric.\n// The result will be appended to destination.\n//\n// exported for use in JSON type\nvar transformComponent = text._tc = function(dest, c, otherC, side) {\n  //var cIntersect, intersectEnd, intersectStart, newC, otherIntersect, s;\n\n  checkValidComponent(c);\n  checkValidComponent(otherC);\n\n  if (c.i != null) {\n    // Insert.\n    append(dest, {i:c.i, p:transformPosition(c.p, otherC, side === 'right')});\n  } else {\n    // Delete\n    if (otherC.i != null) {\n      // Delete vs insert\n      var s = c.d;\n      if (c.p < otherC.p) {\n        append(dest, {d:s.slice(0, otherC.p - c.p), p:c.p});\n        s = s.slice(otherC.p - c.p);\n      }\n      if (s !== '')\n        append(dest, {d: s, p: c.p + otherC.i.length});\n\n    } else {\n      // Delete vs delete\n      if (c.p >= otherC.p + otherC.d.length)\n        append(dest, {d: c.d, p: c.p - otherC.d.length});\n      else if (c.p + c.d.length <= otherC.p)\n        append(dest, c);\n      else {\n        // They overlap somewhere.\n        var newC = {d: '', p: c.p};\n\n        if (c.p < otherC.p)\n          newC.d = c.d.slice(0, otherC.p - c.p);\n\n        if (c.p + c.d.length > otherC.p + otherC.d.length)\n          newC.d += c.d.slice(otherC.p + otherC.d.length - c.p);\n\n        // This is entirely optional - I'm just checking the deleted text in\n        // the two ops matches\n        var intersectStart = Math.max(c.p, otherC.p);\n        var intersectEnd = Math.min(c.p + c.d.length, otherC.p + otherC.d.length);\n        var cIntersect = c.d.slice(intersectStart - c.p, intersectEnd - c.p);\n        var otherIntersect = otherC.d.slice(intersectStart - otherC.p, intersectEnd - otherC.p);\n        if (cIntersect !== otherIntersect)\n          throw new Error('Delete ops delete different text in the same region of the document');\n\n        if (newC.d !== '') {\n          newC.p = transformPosition(newC.p, otherC);\n          append(dest, newC);\n        }\n      }\n    }\n  }\n\n  return dest;\n};\n\nvar invertComponent = function(c) {\n  return (c.i != null) ? {d:c.i, p:c.p} : {i:c.d, p:c.p};\n};\n\n// No need to use append for invert, because the components won't be able to\n// cancel one another.\ntext.invert = function(op) {\n  // Shallow copy & reverse that sucka.\n  op = op.slice().reverse();\n  for (var i = 0; i < op.length; i++) {\n    op[i] = invertComponent(op[i]);\n  }\n  return op;\n};\n\nrequire('./bootstrapTransform')(text, transformComponent, checkValidOp, append);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObjectRecursive(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]; // eslint-disable-line max-len\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","/*!\n * QUnit 2.3.1\n * https://qunitjs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2017-04-10T19:56Z\n */\n(function (global$1) {\n  'use strict';\n\n  global$1 = 'default' in global$1 ? global$1['default'] : global$1;\n\n  var window = global$1.window;\n  var console = global$1.console;\n  var setTimeout = global$1.setTimeout;\n  var clearTimeout = global$1.clearTimeout;\n\n  var document = window && window.document;\n  var navigator = window && window.navigator;\n\n  var localSessionStorage = function () {\n  \tvar x = \"qunit-test-string\";\n  \ttry {\n  \t\tglobal$1.sessionStorage.setItem(x, x);\n  \t\tglobal$1.sessionStorage.removeItem(x);\n  \t\treturn global$1.sessionStorage;\n  \t} catch (e) {\n  \t\treturn undefined;\n  \t}\n  }();\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n\n\n\n\n\n\n\n\n\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var toString = Object.prototype.toString;\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var now = Date.now || function () {\n  \treturn new Date().getTime();\n  };\n\n  var defined = {\n  \tdocument: window && window.document !== undefined,\n  \tsetTimeout: setTimeout !== undefined\n  };\n\n  // Returns a new Array with the elements that are in a but not in b\n  function diff(a, b) {\n  \tvar i,\n  \t    j,\n  \t    result = a.slice();\n\n  \tfor (i = 0; i < result.length; i++) {\n  \t\tfor (j = 0; j < b.length; j++) {\n  \t\t\tif (result[i] === b[j]) {\n  \t\t\t\tresult.splice(i, 1);\n  \t\t\t\ti--;\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t}\n  \treturn result;\n  }\n\n  /**\n   * Determines whether an element exists in a given array or not.\n   *\n   * @method inArray\n   * @param {Any} elem\n   * @param {Array} array\n   * @return {Boolean}\n   */\n  function inArray(elem, array) {\n  \treturn array.indexOf(elem) !== -1;\n  }\n\n  /**\n   * Makes a clone of an object using only Array or Object as base,\n   * and copies over the own enumerable properties.\n   *\n   * @param {Object} obj\n   * @return {Object} New object with only the own properties (recursively).\n   */\n  function objectValues(obj) {\n  \tvar key,\n  \t    val,\n  \t    vals = is(\"array\", obj) ? [] : {};\n  \tfor (key in obj) {\n  \t\tif (hasOwn.call(obj, key)) {\n  \t\t\tval = obj[key];\n  \t\t\tvals[key] = val === Object(val) ? objectValues(val) : val;\n  \t\t}\n  \t}\n  \treturn vals;\n  }\n\n  function extend(a, b, undefOnly) {\n  \tfor (var prop in b) {\n  \t\tif (hasOwn.call(b, prop)) {\n  \t\t\tif (b[prop] === undefined) {\n  \t\t\t\tdelete a[prop];\n  \t\t\t} else if (!(undefOnly && typeof a[prop] !== \"undefined\")) {\n  \t\t\t\ta[prop] = b[prop];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn a;\n  }\n\n  function objectType(obj) {\n  \tif (typeof obj === \"undefined\") {\n  \t\treturn \"undefined\";\n  \t}\n\n  \t// Consider: typeof null === object\n  \tif (obj === null) {\n  \t\treturn \"null\";\n  \t}\n\n  \tvar match = toString.call(obj).match(/^\\[object\\s(.*)\\]$/),\n  \t    type = match && match[1];\n\n  \tswitch (type) {\n  \t\tcase \"Number\":\n  \t\t\tif (isNaN(obj)) {\n  \t\t\t\treturn \"nan\";\n  \t\t\t}\n  \t\t\treturn \"number\";\n  \t\tcase \"String\":\n  \t\tcase \"Boolean\":\n  \t\tcase \"Array\":\n  \t\tcase \"Set\":\n  \t\tcase \"Map\":\n  \t\tcase \"Date\":\n  \t\tcase \"RegExp\":\n  \t\tcase \"Function\":\n  \t\tcase \"Symbol\":\n  \t\t\treturn type.toLowerCase();\n  \t}\n\n  \tif ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\") {\n  \t\treturn \"object\";\n  \t}\n  }\n\n  // Safe object type checking\n  function is(type, obj) {\n  \treturn objectType(obj) === type;\n  }\n\n  // Based on Java's String.hashCode, a simple but not\n  // rigorously collision resistant hashing function\n  function generateHash(module, testName) {\n  \tvar str = module + \"\\x1C\" + testName;\n  \tvar hash = 0;\n\n  \tfor (var i = 0; i < str.length; i++) {\n  \t\thash = (hash << 5) - hash + str.charCodeAt(i);\n  \t\thash |= 0;\n  \t}\n\n  \t// Convert the possibly negative integer hash code into an 8 character hex string, which isn't\n  \t// strictly necessary but increases user understanding that the id is a SHA-like hash\n  \tvar hex = (0x100000000 + hash).toString(16);\n  \tif (hex.length < 8) {\n  \t\thex = \"0000000\" + hex;\n  \t}\n\n  \treturn hex.slice(-8);\n  }\n\n  // Test for equality any JavaScript type.\n  // Authors: Philippe Rathé <prathe@gmail.com>, David Chan <david@troi.org>\n  var equiv = (function () {\n\n  \t// Value pairs queued for comparison. Used for breadth-first processing order, recursion\n  \t// detection and avoiding repeated comparison (see below for details).\n  \t// Elements are { a: val, b: val }.\n  \tvar pairs = [];\n\n  \tvar getProto = Object.getPrototypeOf || function (obj) {\n  \t\treturn obj.__proto__;\n  \t};\n\n  \tfunction useStrictEquality(a, b) {\n\n  \t\t// This only gets called if a and b are not strict equal, and is used to compare on\n  \t\t// the primitive values inside object wrappers. For example:\n  \t\t// `var i = 1;`\n  \t\t// `var j = new Number(1);`\n  \t\t// Neither a nor b can be null, as a !== b and they have the same type.\n  \t\tif ((typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) === \"object\") {\n  \t\t\ta = a.valueOf();\n  \t\t}\n  \t\tif ((typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) === \"object\") {\n  \t\t\tb = b.valueOf();\n  \t\t}\n\n  \t\treturn a === b;\n  \t}\n\n  \tfunction compareConstructors(a, b) {\n  \t\tvar protoA = getProto(a);\n  \t\tvar protoB = getProto(b);\n\n  \t\t// Comparing constructors is more strict than using `instanceof`\n  \t\tif (a.constructor === b.constructor) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\t// Ref #851\n  \t\t// If the obj prototype descends from a null constructor, treat it\n  \t\t// as a null prototype.\n  \t\tif (protoA && protoA.constructor === null) {\n  \t\t\tprotoA = null;\n  \t\t}\n  \t\tif (protoB && protoB.constructor === null) {\n  \t\t\tprotoB = null;\n  \t\t}\n\n  \t\t// Allow objects with no prototype to be equivalent to\n  \t\t// objects with Object as their constructor.\n  \t\tif (protoA === null && protoB === Object.prototype || protoB === null && protoA === Object.prototype) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\treturn false;\n  \t}\n\n  \tfunction getRegExpFlags(regexp) {\n  \t\treturn \"flags\" in regexp ? regexp.flags : regexp.toString().match(/[gimuy]*$/)[0];\n  \t}\n\n  \tfunction isContainer(val) {\n  \t\treturn [\"object\", \"array\", \"map\", \"set\"].indexOf(objectType(val)) !== -1;\n  \t}\n\n  \tfunction breadthFirstCompareChild(a, b) {\n\n  \t\t// If a is a container not reference-equal to b, postpone the comparison to the\n  \t\t// end of the pairs queue -- unless (a, b) has been seen before, in which case skip\n  \t\t// over the pair.\n  \t\tif (a === b) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tif (!isContainer(a)) {\n  \t\t\treturn typeEquiv(a, b);\n  \t\t}\n  \t\tif (pairs.every(function (pair) {\n  \t\t\treturn pair.a !== a || pair.b !== b;\n  \t\t})) {\n\n  \t\t\t// Not yet started comparing this pair\n  \t\t\tpairs.push({ a: a, b: b });\n  \t\t}\n  \t\treturn true;\n  \t}\n\n  \tvar callbacks = {\n  \t\t\"string\": useStrictEquality,\n  \t\t\"boolean\": useStrictEquality,\n  \t\t\"number\": useStrictEquality,\n  \t\t\"null\": useStrictEquality,\n  \t\t\"undefined\": useStrictEquality,\n  \t\t\"symbol\": useStrictEquality,\n  \t\t\"date\": useStrictEquality,\n\n  \t\t\"nan\": function nan() {\n  \t\t\treturn true;\n  \t\t},\n\n  \t\t\"regexp\": function regexp(a, b) {\n  \t\t\treturn a.source === b.source &&\n\n  \t\t\t// Include flags in the comparison\n  \t\t\tgetRegExpFlags(a) === getRegExpFlags(b);\n  \t\t},\n\n  \t\t// abort (identical references / instance methods were skipped earlier)\n  \t\t\"function\": function _function() {\n  \t\t\treturn false;\n  \t\t},\n\n  \t\t\"array\": function array(a, b) {\n  \t\t\tvar i, len;\n\n  \t\t\tlen = a.length;\n  \t\t\tif (len !== b.length) {\n\n  \t\t\t\t// Safe and faster\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\tfor (i = 0; i < len; i++) {\n\n  \t\t\t\t// Compare non-containers; queue non-reference-equal containers\n  \t\t\t\tif (!breadthFirstCompareChild(a[i], b[i])) {\n  \t\t\t\t\treturn false;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\treturn true;\n  \t\t},\n\n  \t\t// Define sets a and b to be equivalent if for each element aVal in a, there\n  \t\t// is some element bVal in b such that aVal and bVal are equivalent. Element\n  \t\t// repetitions are not counted, so these are equivalent:\n  \t\t// a = new Set( [ {}, [], [] ] );\n  \t\t// b = new Set( [ {}, {}, [] ] );\n  \t\t\"set\": function set$$1(a, b) {\n  \t\t\tvar innerEq,\n  \t\t\t    outerEq = true;\n\n  \t\t\tif (a.size !== b.size) {\n\n  \t\t\t\t// This optimization has certain quirks because of the lack of\n  \t\t\t\t// repetition counting. For instance, adding the same\n  \t\t\t\t// (reference-identical) element to two equivalent sets can\n  \t\t\t\t// make them non-equivalent.\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\ta.forEach(function (aVal) {\n\n  \t\t\t\t// Short-circuit if the result is already known. (Using for...of\n  \t\t\t\t// with a break clause would be cleaner here, but it would cause\n  \t\t\t\t// a syntax error on older Javascript implementations even if\n  \t\t\t\t// Set is unused)\n  \t\t\t\tif (!outerEq) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tinnerEq = false;\n\n  \t\t\t\tb.forEach(function (bVal) {\n  \t\t\t\t\tvar parentPairs;\n\n  \t\t\t\t\t// Likewise, short-circuit if the result is already known\n  \t\t\t\t\tif (innerEq) {\n  \t\t\t\t\t\treturn;\n  \t\t\t\t\t}\n\n  \t\t\t\t\t// Swap out the global pairs list, as the nested call to\n  \t\t\t\t\t// innerEquiv will clobber its contents\n  \t\t\t\t\tparentPairs = pairs;\n  \t\t\t\t\tif (innerEquiv(bVal, aVal)) {\n  \t\t\t\t\t\tinnerEq = true;\n  \t\t\t\t\t}\n\n  \t\t\t\t\t// Replace the global pairs list\n  \t\t\t\t\tpairs = parentPairs;\n  \t\t\t\t});\n\n  \t\t\t\tif (!innerEq) {\n  \t\t\t\t\touterEq = false;\n  \t\t\t\t}\n  \t\t\t});\n\n  \t\t\treturn outerEq;\n  \t\t},\n\n  \t\t// Define maps a and b to be equivalent if for each key-value pair (aKey, aVal)\n  \t\t// in a, there is some key-value pair (bKey, bVal) in b such that\n  \t\t// [ aKey, aVal ] and [ bKey, bVal ] are equivalent. Key repetitions are not\n  \t\t// counted, so these are equivalent:\n  \t\t// a = new Map( [ [ {}, 1 ], [ {}, 1 ], [ [], 1 ] ] );\n  \t\t// b = new Map( [ [ {}, 1 ], [ [], 1 ], [ [], 1 ] ] );\n  \t\t\"map\": function map(a, b) {\n  \t\t\tvar innerEq,\n  \t\t\t    outerEq = true;\n\n  \t\t\tif (a.size !== b.size) {\n\n  \t\t\t\t// This optimization has certain quirks because of the lack of\n  \t\t\t\t// repetition counting. For instance, adding the same\n  \t\t\t\t// (reference-identical) key-value pair to two equivalent maps\n  \t\t\t\t// can make them non-equivalent.\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\ta.forEach(function (aVal, aKey) {\n\n  \t\t\t\t// Short-circuit if the result is already known. (Using for...of\n  \t\t\t\t// with a break clause would be cleaner here, but it would cause\n  \t\t\t\t// a syntax error on older Javascript implementations even if\n  \t\t\t\t// Map is unused)\n  \t\t\t\tif (!outerEq) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tinnerEq = false;\n\n  \t\t\t\tb.forEach(function (bVal, bKey) {\n  \t\t\t\t\tvar parentPairs;\n\n  \t\t\t\t\t// Likewise, short-circuit if the result is already known\n  \t\t\t\t\tif (innerEq) {\n  \t\t\t\t\t\treturn;\n  \t\t\t\t\t}\n\n  \t\t\t\t\t// Swap out the global pairs list, as the nested call to\n  \t\t\t\t\t// innerEquiv will clobber its contents\n  \t\t\t\t\tparentPairs = pairs;\n  \t\t\t\t\tif (innerEquiv([bVal, bKey], [aVal, aKey])) {\n  \t\t\t\t\t\tinnerEq = true;\n  \t\t\t\t\t}\n\n  \t\t\t\t\t// Replace the global pairs list\n  \t\t\t\t\tpairs = parentPairs;\n  \t\t\t\t});\n\n  \t\t\t\tif (!innerEq) {\n  \t\t\t\t\touterEq = false;\n  \t\t\t\t}\n  \t\t\t});\n\n  \t\t\treturn outerEq;\n  \t\t},\n\n  \t\t\"object\": function object(a, b) {\n  \t\t\tvar i,\n  \t\t\t    aProperties = [],\n  \t\t\t    bProperties = [];\n\n  \t\t\tif (compareConstructors(a, b) === false) {\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\t// Be strict: don't ensure hasOwnProperty and go deep\n  \t\t\tfor (i in a) {\n\n  \t\t\t\t// Collect a's properties\n  \t\t\t\taProperties.push(i);\n\n  \t\t\t\t// Skip OOP methods that look the same\n  \t\t\t\tif (a.constructor !== Object && typeof a.constructor !== \"undefined\" && typeof a[i] === \"function\" && typeof b[i] === \"function\" && a[i].toString() === b[i].toString()) {\n  \t\t\t\t\tcontinue;\n  \t\t\t\t}\n\n  \t\t\t\t// Compare non-containers; queue non-reference-equal containers\n  \t\t\t\tif (!breadthFirstCompareChild(a[i], b[i])) {\n  \t\t\t\t\treturn false;\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tfor (i in b) {\n\n  \t\t\t\t// Collect b's properties\n  \t\t\t\tbProperties.push(i);\n  \t\t\t}\n\n  \t\t\t// Ensures identical properties name\n  \t\t\treturn typeEquiv(aProperties.sort(), bProperties.sort());\n  \t\t}\n  \t};\n\n  \tfunction typeEquiv(a, b) {\n  \t\tvar type = objectType(a);\n\n  \t\t// Callbacks for containers will append to the pairs queue to achieve breadth-first\n  \t\t// search order. The pairs queue is also used to avoid reprocessing any pair of\n  \t\t// containers that are reference-equal to a previously visited pair (a special case\n  \t\t// this being recursion detection).\n  \t\t//\n  \t\t// Because of this approach, once typeEquiv returns a false value, it should not be\n  \t\t// called again without clearing the pair queue else it may wrongly report a visited\n  \t\t// pair as being equivalent.\n  \t\treturn objectType(b) === type && callbacks[type](a, b);\n  \t}\n\n  \tfunction innerEquiv(a, b) {\n  \t\tvar i, pair;\n\n  \t\t// We're done when there's nothing more to compare\n  \t\tif (arguments.length < 2) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\t// Clear the global pair queue and add the top-level values being compared\n  \t\tpairs = [{ a: a, b: b }];\n\n  \t\tfor (i = 0; i < pairs.length; i++) {\n  \t\t\tpair = pairs[i];\n\n  \t\t\t// Perform type-specific comparison on any pairs that are not strictly\n  \t\t\t// equal. For container types, that comparison will postpone comparison\n  \t\t\t// of any sub-container pair to the end of the pair queue. This gives\n  \t\t\t// breadth-first search order. It also avoids the reprocessing of\n  \t\t\t// reference-equal siblings, cousins etc, which can have a significant speed\n  \t\t\t// impact when comparing a container of small objects each of which has a\n  \t\t\t// reference to the same (singleton) large object.\n  \t\t\tif (pair.a !== pair.b && !typeEquiv(pair.a, pair.b)) {\n  \t\t\t\treturn false;\n  \t\t\t}\n  \t\t}\n\n  \t\t// ...across all consecutive argument pairs\n  \t\treturn arguments.length === 2 || innerEquiv.apply(this, [].slice.call(arguments, 1));\n  \t}\n\n  \treturn innerEquiv;\n  })();\n\n  /**\n   * Config object: Maintain internal state\n   * Later exposed as QUnit.config\n   * `config` initialized at top of scope\n   */\n  var config = {\n\n  \t// The queue of tests to run\n  \tqueue: [],\n\n  \t// Block until document ready\n  \tblocking: true,\n\n  \t// By default, run previously failed tests first\n  \t// very useful in combination with \"Hide passed tests\" checked\n  \treorder: true,\n\n  \t// By default, modify document.title when suite is done\n  \taltertitle: true,\n\n  \t// HTML Reporter: collapse every test except the first failing test\n  \t// If false, all failing tests will be expanded\n  \tcollapse: true,\n\n  \t// By default, scroll to top of the page when suite is done\n  \tscrolltop: true,\n\n  \t// Depth up-to which object will be dumped\n  \tmaxDepth: 5,\n\n  \t// When enabled, all tests must call expect()\n  \trequireExpects: false,\n\n  \t// Placeholder for user-configurable form-exposed URL parameters\n  \turlConfig: [],\n\n  \t// Set of all modules.\n  \tmodules: [],\n\n  \t// The first unnamed module\n  \tcurrentModule: {\n  \t\tname: \"\",\n  \t\ttests: [],\n  \t\tchildModules: [],\n  \t\ttestsRun: 0\n  \t},\n\n  \tcallbacks: {},\n\n  \t// The storage module to use for reordering tests\n  \tstorage: localSessionStorage\n  };\n\n  // take a predefined QUnit.config and extend the defaults\n  var globalConfig = window && window.QUnit && window.QUnit.config;\n\n  // only extend the global config if there is no QUnit overload\n  if (window && window.QUnit && !window.QUnit.version) {\n  \textend(config, globalConfig);\n  }\n\n  // Push a loose unnamed module to the modules collection\n  config.modules.push(config.currentModule);\n\n  // Based on jsDump by Ariel Flesler\n  // http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html\n  var dump = (function () {\n  \tfunction quote(str) {\n  \t\treturn \"\\\"\" + str.toString().replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\") + \"\\\"\";\n  \t}\n  \tfunction literal(o) {\n  \t\treturn o + \"\";\n  \t}\n  \tfunction join(pre, arr, post) {\n  \t\tvar s = dump.separator(),\n  \t\t    base = dump.indent(),\n  \t\t    inner = dump.indent(1);\n  \t\tif (arr.join) {\n  \t\t\tarr = arr.join(\",\" + s + inner);\n  \t\t}\n  \t\tif (!arr) {\n  \t\t\treturn pre + post;\n  \t\t}\n  \t\treturn [pre, inner + arr, base + post].join(s);\n  \t}\n  \tfunction array(arr, stack) {\n  \t\tvar i = arr.length,\n  \t\t    ret = new Array(i);\n\n  \t\tif (dump.maxDepth && dump.depth > dump.maxDepth) {\n  \t\t\treturn \"[object Array]\";\n  \t\t}\n\n  \t\tthis.up();\n  \t\twhile (i--) {\n  \t\t\tret[i] = this.parse(arr[i], undefined, stack);\n  \t\t}\n  \t\tthis.down();\n  \t\treturn join(\"[\", ret, \"]\");\n  \t}\n\n  \tfunction isArray(obj) {\n  \t\treturn (\n\n  \t\t\t//Native Arrays\n  \t\t\ttoString.call(obj) === \"[object Array]\" ||\n\n  \t\t\t// NodeList objects\n  \t\t\ttypeof obj.length === \"number\" && obj.item !== undefined && (obj.length ? obj.item(0) === obj[0] : obj.item(0) === null && obj[0] === undefined)\n  \t\t);\n  \t}\n\n  \tvar reName = /^function (\\w+)/,\n  \t    dump = {\n\n  \t\t// The objType is used mostly internally, you can fix a (custom) type in advance\n  \t\tparse: function parse(obj, objType, stack) {\n  \t\t\tstack = stack || [];\n  \t\t\tvar res,\n  \t\t\t    parser,\n  \t\t\t    parserType,\n  \t\t\t    objIndex = stack.indexOf(obj);\n\n  \t\t\tif (objIndex !== -1) {\n  \t\t\t\treturn \"recursion(\" + (objIndex - stack.length) + \")\";\n  \t\t\t}\n\n  \t\t\tobjType = objType || this.typeOf(obj);\n  \t\t\tparser = this.parsers[objType];\n  \t\t\tparserType = typeof parser === \"undefined\" ? \"undefined\" : _typeof(parser);\n\n  \t\t\tif (parserType === \"function\") {\n  \t\t\t\tstack.push(obj);\n  \t\t\t\tres = parser.call(this, obj, stack);\n  \t\t\t\tstack.pop();\n  \t\t\t\treturn res;\n  \t\t\t}\n  \t\t\treturn parserType === \"string\" ? parser : this.parsers.error;\n  \t\t},\n  \t\ttypeOf: function typeOf(obj) {\n  \t\t\tvar type;\n\n  \t\t\tif (obj === null) {\n  \t\t\t\ttype = \"null\";\n  \t\t\t} else if (typeof obj === \"undefined\") {\n  \t\t\t\ttype = \"undefined\";\n  \t\t\t} else if (is(\"regexp\", obj)) {\n  \t\t\t\ttype = \"regexp\";\n  \t\t\t} else if (is(\"date\", obj)) {\n  \t\t\t\ttype = \"date\";\n  \t\t\t} else if (is(\"function\", obj)) {\n  \t\t\t\ttype = \"function\";\n  \t\t\t} else if (obj.setInterval !== undefined && obj.document !== undefined && obj.nodeType === undefined) {\n  \t\t\t\ttype = \"window\";\n  \t\t\t} else if (obj.nodeType === 9) {\n  \t\t\t\ttype = \"document\";\n  \t\t\t} else if (obj.nodeType) {\n  \t\t\t\ttype = \"node\";\n  \t\t\t} else if (isArray(obj)) {\n  \t\t\t\ttype = \"array\";\n  \t\t\t} else if (obj.constructor === Error.prototype.constructor) {\n  \t\t\t\ttype = \"error\";\n  \t\t\t} else {\n  \t\t\t\ttype = typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n  \t\t\t}\n  \t\t\treturn type;\n  \t\t},\n\n  \t\tseparator: function separator() {\n  \t\t\tif (this.multiline) {\n  \t\t\t\treturn this.HTML ? \"<br />\" : \"\\n\";\n  \t\t\t} else {\n  \t\t\t\treturn this.HTML ? \"&#160;\" : \" \";\n  \t\t\t}\n  \t\t},\n\n  \t\t// Extra can be a number, shortcut for increasing-calling-decreasing\n  \t\tindent: function indent(extra) {\n  \t\t\tif (!this.multiline) {\n  \t\t\t\treturn \"\";\n  \t\t\t}\n  \t\t\tvar chr = this.indentChar;\n  \t\t\tif (this.HTML) {\n  \t\t\t\tchr = chr.replace(/\\t/g, \"   \").replace(/ /g, \"&#160;\");\n  \t\t\t}\n  \t\t\treturn new Array(this.depth + (extra || 0)).join(chr);\n  \t\t},\n  \t\tup: function up(a) {\n  \t\t\tthis.depth += a || 1;\n  \t\t},\n  \t\tdown: function down(a) {\n  \t\t\tthis.depth -= a || 1;\n  \t\t},\n  \t\tsetParser: function setParser(name, parser) {\n  \t\t\tthis.parsers[name] = parser;\n  \t\t},\n\n  \t\t// The next 3 are exposed so you can use them\n  \t\tquote: quote,\n  \t\tliteral: literal,\n  \t\tjoin: join,\n  \t\tdepth: 1,\n  \t\tmaxDepth: config.maxDepth,\n\n  \t\t// This is the list of parsers, to modify them, use dump.setParser\n  \t\tparsers: {\n  \t\t\twindow: \"[Window]\",\n  \t\t\tdocument: \"[Document]\",\n  \t\t\terror: function error(_error) {\n  \t\t\t\treturn \"Error(\\\"\" + _error.message + \"\\\")\";\n  \t\t\t},\n  \t\t\tunknown: \"[Unknown]\",\n  \t\t\t\"null\": \"null\",\n  \t\t\t\"undefined\": \"undefined\",\n  \t\t\t\"function\": function _function(fn) {\n  \t\t\t\tvar ret = \"function\",\n\n\n  \t\t\t\t// Functions never have name in IE\n  \t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\n\n  \t\t\t\tif (name) {\n  \t\t\t\t\tret += \" \" + name;\n  \t\t\t\t}\n  \t\t\t\tret += \"(\";\n\n  \t\t\t\tret = [ret, dump.parse(fn, \"functionArgs\"), \"){\"].join(\"\");\n  \t\t\t\treturn join(ret, dump.parse(fn, \"functionCode\"), \"}\");\n  \t\t\t},\n  \t\t\tarray: array,\n  \t\t\tnodelist: array,\n  \t\t\t\"arguments\": array,\n  \t\t\tobject: function object(map, stack) {\n  \t\t\t\tvar keys,\n  \t\t\t\t    key,\n  \t\t\t\t    val,\n  \t\t\t\t    i,\n  \t\t\t\t    nonEnumerableProperties,\n  \t\t\t\t    ret = [];\n\n  \t\t\t\tif (dump.maxDepth && dump.depth > dump.maxDepth) {\n  \t\t\t\t\treturn \"[object Object]\";\n  \t\t\t\t}\n\n  \t\t\t\tdump.up();\n  \t\t\t\tkeys = [];\n  \t\t\t\tfor (key in map) {\n  \t\t\t\t\tkeys.push(key);\n  \t\t\t\t}\n\n  \t\t\t\t// Some properties are not always enumerable on Error objects.\n  \t\t\t\tnonEnumerableProperties = [\"message\", \"name\"];\n  \t\t\t\tfor (i in nonEnumerableProperties) {\n  \t\t\t\t\tkey = nonEnumerableProperties[i];\n  \t\t\t\t\tif (key in map && !inArray(key, keys)) {\n  \t\t\t\t\t\tkeys.push(key);\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\tkeys.sort();\n  \t\t\t\tfor (i = 0; i < keys.length; i++) {\n  \t\t\t\t\tkey = keys[i];\n  \t\t\t\t\tval = map[key];\n  \t\t\t\t\tret.push(dump.parse(key, \"key\") + \": \" + dump.parse(val, undefined, stack));\n  \t\t\t\t}\n  \t\t\t\tdump.down();\n  \t\t\t\treturn join(\"{\", ret, \"}\");\n  \t\t\t},\n  \t\t\tnode: function node(_node) {\n  \t\t\t\tvar len,\n  \t\t\t\t    i,\n  \t\t\t\t    val,\n  \t\t\t\t    open = dump.HTML ? \"&lt;\" : \"<\",\n  \t\t\t\t    close = dump.HTML ? \"&gt;\" : \">\",\n  \t\t\t\t    tag = _node.nodeName.toLowerCase(),\n  \t\t\t\t    ret = open + tag,\n  \t\t\t\t    attrs = _node.attributes;\n\n  \t\t\t\tif (attrs) {\n  \t\t\t\t\tfor (i = 0, len = attrs.length; i < len; i++) {\n  \t\t\t\t\t\tval = attrs[i].nodeValue;\n\n  \t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly\n  \t\t\t\t\t\t// set. Those have values like undefined, null, 0, false, \"\" or\n  \t\t\t\t\t\t// \"inherit\".\n  \t\t\t\t\t\tif (val && val !== \"inherit\") {\n  \t\t\t\t\t\t\tret += \" \" + attrs[i].nodeName + \"=\" + dump.parse(val, \"attribute\");\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\tret += close;\n\n  \t\t\t\t// Show content of TextNode or CDATASection\n  \t\t\t\tif (_node.nodeType === 3 || _node.nodeType === 4) {\n  \t\t\t\t\tret += _node.nodeValue;\n  \t\t\t\t}\n\n  \t\t\t\treturn ret + open + \"/\" + tag + close;\n  \t\t\t},\n\n  \t\t\t// Function calls it internally, it's the arguments part of the function\n  \t\t\tfunctionArgs: function functionArgs(fn) {\n  \t\t\t\tvar args,\n  \t\t\t\t    l = fn.length;\n\n  \t\t\t\tif (!l) {\n  \t\t\t\t\treturn \"\";\n  \t\t\t\t}\n\n  \t\t\t\targs = new Array(l);\n  \t\t\t\twhile (l--) {\n\n  \t\t\t\t\t// 97 is 'a'\n  \t\t\t\t\targs[l] = String.fromCharCode(97 + l);\n  \t\t\t\t}\n  \t\t\t\treturn \" \" + args.join(\", \") + \" \";\n  \t\t\t},\n\n  \t\t\t// Object calls it internally, the key part of an item in a map\n  \t\t\tkey: quote,\n\n  \t\t\t// Function calls it internally, it's the content of the function\n  \t\t\tfunctionCode: \"[code]\",\n\n  \t\t\t// Node calls it internally, it's a html attribute value\n  \t\t\tattribute: quote,\n  \t\t\tstring: quote,\n  \t\t\tdate: quote,\n  \t\t\tregexp: literal,\n  \t\t\tnumber: literal,\n  \t\t\t\"boolean\": literal,\n  \t\t\tsymbol: function symbol(sym) {\n  \t\t\t\treturn sym.toString();\n  \t\t\t}\n  \t\t},\n\n  \t\t// If true, entities are escaped ( <, >, \\t, space and \\n )\n  \t\tHTML: false,\n\n  \t\t// Indentation unit\n  \t\tindentChar: \"  \",\n\n  \t\t// If true, items in a collection, are separated by a \\n, else just a space.\n  \t\tmultiline: true\n  \t};\n\n  \treturn dump;\n  })();\n\n  var LISTENERS = Object.create(null);\n  var SUPPORTED_EVENTS = [\"runStart\", \"suiteStart\", \"testStart\", \"assertion\", \"testEnd\", \"suiteEnd\", \"runEnd\"];\n\n  /**\n   * Emits an event with the specified data to all currently registered listeners.\n   * Callbacks will fire in the order in which they are registered (FIFO). This\n   * function is not exposed publicly; it is used by QUnit internals to emit\n   * logging events.\n   *\n   * @private\n   * @method emit\n   * @param {String} eventName\n   * @param {Object} data\n   * @return {Void}\n   */\n  function emit(eventName, data) {\n  \tif (objectType(eventName) !== \"string\") {\n  \t\tthrow new TypeError(\"eventName must be a string when emitting an event\");\n  \t}\n\n  \t// Clone the callbacks in case one of them registers a new callback\n  \tvar originalCallbacks = LISTENERS[eventName];\n  \tvar callbacks = originalCallbacks ? [].concat(toConsumableArray(originalCallbacks)) : [];\n\n  \tfor (var i = 0; i < callbacks.length; i++) {\n  \t\tcallbacks[i](data);\n  \t}\n  }\n\n  /**\n   * Registers a callback as a listener to the specified event.\n   *\n   * @public\n   * @method on\n   * @param {String} eventName\n   * @param {Function} callback\n   * @return {Void}\n   */\n  function on(eventName, callback) {\n  \tif (objectType(eventName) !== \"string\") {\n  \t\tthrow new TypeError(\"eventName must be a string when registering a listener\");\n  \t} else if (!inArray(eventName, SUPPORTED_EVENTS)) {\n  \t\tvar events = SUPPORTED_EVENTS.join(\", \");\n  \t\tthrow new Error(\"\\\"\" + eventName + \"\\\" is not a valid event; must be one of: \" + events + \".\");\n  \t} else if (objectType(callback) !== \"function\") {\n  \t\tthrow new TypeError(\"callback must be a function when registering a listener\");\n  \t}\n\n  \tif (!LISTENERS[eventName]) {\n  \t\tLISTENERS[eventName] = [];\n  \t}\n\n  \t// Don't register the same callback more than once\n  \tif (!inArray(callback, LISTENERS[eventName])) {\n  \t\tLISTENERS[eventName].push(callback);\n  \t}\n  }\n\n  // Register logging callbacks\n  function registerLoggingCallbacks(obj) {\n  \tvar i,\n  \t    l,\n  \t    key,\n  \t    callbackNames = [\"begin\", \"done\", \"log\", \"testStart\", \"testDone\", \"moduleStart\", \"moduleDone\"];\n\n  \tfunction registerLoggingCallback(key) {\n  \t\tvar loggingCallback = function loggingCallback(callback) {\n  \t\t\tif (objectType(callback) !== \"function\") {\n  \t\t\t\tthrow new Error(\"QUnit logging methods require a callback function as their first parameters.\");\n  \t\t\t}\n\n  \t\t\tconfig.callbacks[key].push(callback);\n  \t\t};\n\n  \t\treturn loggingCallback;\n  \t}\n\n  \tfor (i = 0, l = callbackNames.length; i < l; i++) {\n  \t\tkey = callbackNames[i];\n\n  \t\t// Initialize key collection of logging callback\n  \t\tif (objectType(config.callbacks[key]) === \"undefined\") {\n  \t\t\tconfig.callbacks[key] = [];\n  \t\t}\n\n  \t\tobj[key] = registerLoggingCallback(key);\n  \t}\n  }\n\n  function runLoggingCallbacks(key, args) {\n  \tvar i, l, callbacks;\n\n  \tcallbacks = config.callbacks[key];\n  \tfor (i = 0, l = callbacks.length; i < l; i++) {\n  \t\tcallbacks[i](args);\n  \t}\n  }\n\n  // Doesn't support IE9, it will return undefined on these browsers\n  // See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\n  var fileName = (sourceFromStacktrace(0) || \"\").replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\");\n\n  function extractStacktrace(e, offset) {\n  \toffset = offset === undefined ? 4 : offset;\n\n  \tvar stack, include, i;\n\n  \tif (e && e.stack) {\n  \t\tstack = e.stack.split(\"\\n\");\n  \t\tif (/^error$/i.test(stack[0])) {\n  \t\t\tstack.shift();\n  \t\t}\n  \t\tif (fileName) {\n  \t\t\tinclude = [];\n  \t\t\tfor (i = offset; i < stack.length; i++) {\n  \t\t\t\tif (stack[i].indexOf(fileName) !== -1) {\n  \t\t\t\t\tbreak;\n  \t\t\t\t}\n  \t\t\t\tinclude.push(stack[i]);\n  \t\t\t}\n  \t\t\tif (include.length) {\n  \t\t\t\treturn include.join(\"\\n\");\n  \t\t\t}\n  \t\t}\n  \t\treturn stack[offset];\n  \t}\n  }\n\n  function sourceFromStacktrace(offset) {\n  \tvar error = new Error();\n\n  \t// Support: Safari <=7 only, IE <=10 - 11 only\n  \t// Not all browsers generate the `stack` property for `new Error()`, see also #636\n  \tif (!error.stack) {\n  \t\ttry {\n  \t\t\tthrow error;\n  \t\t} catch (err) {\n  \t\t\terror = err;\n  \t\t}\n  \t}\n\n  \treturn extractStacktrace(error, offset);\n  }\n\n  var priorityCount = 0;\n  var unitSampler = void 0;\n\n  /**\n   * Advances the ProcessingQueue to the next item if it is ready.\n   * @param {Boolean} last\n   */\n  function advance() {\n  \tvar start = now();\n  \tconfig.depth = (config.depth || 0) + 1;\n\n  \twhile (config.queue.length && !config.blocking) {\n  \t\tvar elapsedTime = now() - start;\n\n  \t\tif (!defined.setTimeout || config.updateRate <= 0 || elapsedTime < config.updateRate) {\n  \t\t\tif (priorityCount > 0) {\n  \t\t\t\tpriorityCount--;\n  \t\t\t}\n\n  \t\t\tconfig.queue.shift()();\n  \t\t} else {\n  \t\t\tsetTimeout(advance, 13);\n  \t\t\tbreak;\n  \t\t}\n  \t}\n\n  \tconfig.depth--;\n\n  \tif (!config.blocking && !config.queue.length && config.depth === 0) {\n  \t\tdone();\n  \t}\n  }\n\n  function addToQueueImmediate(callback) {\n  \tif (objectType(callback) === \"array\") {\n  \t\twhile (callback.length) {\n  \t\t\taddToQueueImmediate(callback.pop());\n  \t\t}\n\n  \t\treturn;\n  \t}\n\n  \tconfig.queue.unshift(callback);\n  \tpriorityCount++;\n  }\n\n  /**\n   * Adds a function to the ProcessingQueue for execution.\n   * @param {Function|Array} callback\n   * @param {Boolean} priority\n   * @param {String} seed\n   */\n  function addToQueue(callback, prioritize, seed) {\n  \tif (prioritize) {\n  \t\tconfig.queue.splice(priorityCount++, 0, callback);\n  \t} else if (seed) {\n  \t\tif (!unitSampler) {\n  \t\t\tunitSampler = unitSamplerGenerator(seed);\n  \t\t}\n\n  \t\t// Insert into a random position after all prioritized items\n  \t\tvar index = Math.floor(unitSampler() * (config.queue.length - priorityCount + 1));\n  \t\tconfig.queue.splice(priorityCount + index, 0, callback);\n  \t} else {\n  \t\tconfig.queue.push(callback);\n  \t}\n  }\n\n  /**\n   * Creates a seeded \"sample\" generator which is used for randomizing tests.\n   */\n  function unitSamplerGenerator(seed) {\n\n  \t// 32-bit xorshift, requires only a nonzero seed\n  \t// http://excamera.com/sphinx/article-xorshift.html\n  \tvar sample = parseInt(generateHash(seed), 16) || -1;\n  \treturn function () {\n  \t\tsample ^= sample << 13;\n  \t\tsample ^= sample >>> 17;\n  \t\tsample ^= sample << 5;\n\n  \t\t// ECMAScript has no unsigned number type\n  \t\tif (sample < 0) {\n  \t\t\tsample += 0x100000000;\n  \t\t}\n\n  \t\treturn sample / 0x100000000;\n  \t};\n  }\n\n  /**\n   * This function is called when the ProcessingQueue is done processing all\n   * items. It handles emitting the final run events.\n   */\n  function done() {\n  \tvar storage = config.storage;\n\n  \tProcessingQueue.finished = true;\n\n  \tvar runtime = now() - config.started;\n  \tvar passed = config.stats.all - config.stats.bad;\n\n  \temit(\"runEnd\", globalSuite.end(true));\n  \trunLoggingCallbacks(\"done\", {\n  \t\tpassed: passed,\n  \t\tfailed: config.stats.bad,\n  \t\ttotal: config.stats.all,\n  \t\truntime: runtime\n  \t});\n\n  \t// Clear own storage items if all tests passed\n  \tif (storage && config.stats.bad === 0) {\n  \t\tfor (var i = storage.length - 1; i >= 0; i--) {\n  \t\t\tvar key = storage.key(i);\n\n  \t\t\tif (key.indexOf(\"qunit-test-\") === 0) {\n  \t\t\t\tstorage.removeItem(key);\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  var ProcessingQueue = {\n  \tfinished: false,\n  \tadd: addToQueue,\n  \taddImmediate: addToQueueImmediate,\n  \tadvance: advance\n  };\n\n  var TestReport = function () {\n  \tfunction TestReport(name, suite, options) {\n  \t\tclassCallCheck(this, TestReport);\n\n  \t\tthis.name = name;\n  \t\tthis.suiteName = suite.name;\n  \t\tthis.fullName = suite.fullName.concat(name);\n  \t\tthis.runtime = 0;\n  \t\tthis.assertions = [];\n\n  \t\tthis.skipped = !!options.skip;\n  \t\tthis.todo = !!options.todo;\n\n  \t\tthis.valid = options.valid;\n\n  \t\tthis._startTime = 0;\n  \t\tthis._endTime = 0;\n\n  \t\tsuite.pushTest(this);\n  \t}\n\n  \tcreateClass(TestReport, [{\n  \t\tkey: \"start\",\n  \t\tvalue: function start(recordTime) {\n  \t\t\tif (recordTime) {\n  \t\t\t\tthis._startTime = Date.now();\n  \t\t\t}\n\n  \t\t\treturn {\n  \t\t\t\tname: this.name,\n  \t\t\t\tsuiteName: this.suiteName,\n  \t\t\t\tfullName: this.fullName.slice()\n  \t\t\t};\n  \t\t}\n  \t}, {\n  \t\tkey: \"end\",\n  \t\tvalue: function end(recordTime) {\n  \t\t\tif (recordTime) {\n  \t\t\t\tthis._endTime = Date.now();\n  \t\t\t}\n\n  \t\t\treturn extend(this.start(), {\n  \t\t\t\truntime: this.getRuntime(),\n  \t\t\t\tstatus: this.getStatus(),\n  \t\t\t\terrors: this.getFailedAssertions(),\n  \t\t\t\tassertions: this.getAssertions()\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"pushAssertion\",\n  \t\tvalue: function pushAssertion(assertion) {\n  \t\t\tthis.assertions.push(assertion);\n  \t\t}\n  \t}, {\n  \t\tkey: \"getRuntime\",\n  \t\tvalue: function getRuntime() {\n  \t\t\treturn this._endTime - this._startTime;\n  \t\t}\n  \t}, {\n  \t\tkey: \"getStatus\",\n  \t\tvalue: function getStatus() {\n  \t\t\tif (this.skipped) {\n  \t\t\t\treturn \"skipped\";\n  \t\t\t}\n\n  \t\t\tvar testPassed = this.getFailedAssertions().length > 0 ? this.todo : !this.todo;\n\n  \t\t\tif (!testPassed) {\n  \t\t\t\treturn \"failed\";\n  \t\t\t} else if (this.todo) {\n  \t\t\t\treturn \"todo\";\n  \t\t\t} else {\n  \t\t\t\treturn \"passed\";\n  \t\t\t}\n  \t\t}\n  \t}, {\n  \t\tkey: \"getFailedAssertions\",\n  \t\tvalue: function getFailedAssertions() {\n  \t\t\treturn this.assertions.filter(function (assertion) {\n  \t\t\t\treturn !assertion.passed;\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"getAssertions\",\n  \t\tvalue: function getAssertions() {\n  \t\t\treturn this.assertions.slice();\n  \t\t}\n\n  \t\t// Remove actual and expected values from assertions. This is to prevent\n  \t\t// leaking memory throughout a test suite.\n\n  \t}, {\n  \t\tkey: \"slimAssertions\",\n  \t\tvalue: function slimAssertions() {\n  \t\t\tthis.assertions = this.assertions.map(function (assertion) {\n  \t\t\t\tdelete assertion.actual;\n  \t\t\t\tdelete assertion.expected;\n  \t\t\t\treturn assertion;\n  \t\t\t});\n  \t\t}\n  \t}]);\n  \treturn TestReport;\n  }();\n\n  var focused = false;\n\n  function Test(settings) {\n  \tvar i, l;\n\n  \t++Test.count;\n\n  \tthis.expected = null;\n  \textend(this, settings);\n  \tthis.assertions = [];\n  \tthis.semaphore = 0;\n  \tthis.module = config.currentModule;\n  \tthis.stack = sourceFromStacktrace(3);\n  \tthis.steps = [];\n\n  \tthis.testReport = new TestReport(settings.testName, this.module.suiteReport, {\n  \t\ttodo: settings.todo,\n  \t\tskip: settings.skip,\n  \t\tvalid: this.valid()\n  \t});\n\n  \t// Register unique strings\n  \tfor (i = 0, l = this.module.tests; i < l.length; i++) {\n  \t\tif (this.module.tests[i].name === this.testName) {\n  \t\t\tthis.testName += \" \";\n  \t\t}\n  \t}\n\n  \tthis.testId = generateHash(this.module.name, this.testName);\n\n  \tthis.module.tests.push({\n  \t\tname: this.testName,\n  \t\ttestId: this.testId\n  \t});\n\n  \tif (settings.skip) {\n\n  \t\t// Skipped tests will fully ignore any sent callback\n  \t\tthis.callback = function () {};\n  \t\tthis.async = false;\n  \t\tthis.expected = 0;\n  \t} else {\n  \t\tthis.assert = new Assert(this);\n  \t}\n  }\n\n  Test.count = 0;\n\n  function getNotStartedModules(startModule) {\n  \tvar module = startModule,\n  \t    modules = [];\n\n  \twhile (module && module.testsRun === 0) {\n  \t\tmodules.push(module);\n  \t\tmodule = module.parentModule;\n  \t}\n\n  \treturn modules;\n  }\n\n  Test.prototype = {\n  \tbefore: function before() {\n  \t\tvar i,\n  \t\t    startModule,\n  \t\t    module = this.module,\n  \t\t    notStartedModules = getNotStartedModules(module);\n\n  \t\tfor (i = notStartedModules.length - 1; i >= 0; i--) {\n  \t\t\tstartModule = notStartedModules[i];\n  \t\t\tstartModule.stats = { all: 0, bad: 0, started: now() };\n  \t\t\temit(\"suiteStart\", startModule.suiteReport.start(true));\n  \t\t\trunLoggingCallbacks(\"moduleStart\", {\n  \t\t\t\tname: startModule.name,\n  \t\t\t\ttests: startModule.tests\n  \t\t\t});\n  \t\t}\n\n  \t\tconfig.current = this;\n\n  \t\tthis.testEnvironment = extend({}, module.testEnvironment);\n\n  \t\tthis.started = now();\n  \t\temit(\"testStart\", this.testReport.start(true));\n  \t\trunLoggingCallbacks(\"testStart\", {\n  \t\t\tname: this.testName,\n  \t\t\tmodule: module.name,\n  \t\t\ttestId: this.testId,\n  \t\t\tpreviousFailure: this.previousFailure\n  \t\t});\n\n  \t\tif (!config.pollution) {\n  \t\t\tsaveGlobal();\n  \t\t}\n  \t},\n\n  \trun: function run() {\n  \t\tvar promise;\n\n  \t\tconfig.current = this;\n\n  \t\tthis.callbackStarted = now();\n\n  \t\tif (config.notrycatch) {\n  \t\t\trunTest(this);\n  \t\t\treturn;\n  \t\t}\n\n  \t\ttry {\n  \t\t\trunTest(this);\n  \t\t} catch (e) {\n  \t\t\tthis.pushFailure(\"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + (e.message || e), extractStacktrace(e, 0));\n\n  \t\t\t// Else next test will carry the responsibility\n  \t\t\tsaveGlobal();\n\n  \t\t\t// Restart the tests if they're blocking\n  \t\t\tif (config.blocking) {\n  \t\t\t\tinternalRecover(this);\n  \t\t\t}\n  \t\t}\n\n  \t\tfunction runTest(test) {\n  \t\t\tpromise = test.callback.call(test.testEnvironment, test.assert);\n  \t\t\ttest.resolvePromise(promise);\n  \t\t}\n  \t},\n\n  \tafter: function after() {\n  \t\tcheckPollution();\n  \t},\n\n  \tqueueHook: function queueHook(hook, hookName, hookOwner) {\n  \t\tvar promise,\n  \t\t    test = this;\n  \t\treturn function runHook() {\n  \t\t\tif (hookName === \"before\") {\n  \t\t\t\tif (hookOwner.testsRun !== 0) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\ttest.preserveEnvironment = true;\n  \t\t\t}\n\n  \t\t\tif (hookName === \"after\" && hookOwner.testsRun !== numberOfTests(hookOwner) - 1 && config.queue.length > 2) {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tconfig.current = test;\n  \t\t\tif (config.notrycatch) {\n  \t\t\t\tcallHook();\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t\ttry {\n  \t\t\t\tcallHook();\n  \t\t\t} catch (error) {\n  \t\t\t\ttest.pushFailure(hookName + \" failed on \" + test.testName + \": \" + (error.message || error), extractStacktrace(error, 0));\n  \t\t\t}\n\n  \t\t\tfunction callHook() {\n  \t\t\t\tpromise = hook.call(test.testEnvironment, test.assert);\n  \t\t\t\ttest.resolvePromise(promise, hookName);\n  \t\t\t}\n  \t\t};\n  \t},\n\n  \t// Currently only used for module level hooks, can be used to add global level ones\n  \thooks: function hooks(handler) {\n  \t\tvar hooks = [];\n\n  \t\tfunction processHooks(test, module) {\n  \t\t\tif (module.parentModule) {\n  \t\t\t\tprocessHooks(test, module.parentModule);\n  \t\t\t}\n  \t\t\tif (module.hooks && objectType(module.hooks[handler]) === \"function\") {\n  \t\t\t\thooks.push(test.queueHook(module.hooks[handler], handler, module));\n  \t\t\t}\n  \t\t}\n\n  \t\t// Hooks are ignored on skipped tests\n  \t\tif (!this.skip) {\n  \t\t\tprocessHooks(this, this.module);\n  \t\t}\n  \t\treturn hooks;\n  \t},\n\n  \tfinish: function finish() {\n  \t\tconfig.current = this;\n  \t\tif (config.requireExpects && this.expected === null) {\n  \t\t\tthis.pushFailure(\"Expected number of assertions to be defined, but expect() was \" + \"not called.\", this.stack);\n  \t\t} else if (this.expected !== null && this.expected !== this.assertions.length) {\n  \t\t\tthis.pushFailure(\"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack);\n  \t\t} else if (this.expected === null && !this.assertions.length) {\n  \t\t\tthis.pushFailure(\"Expected at least one assertion, but none were run - call \" + \"expect(0) to accept zero assertions.\", this.stack);\n  \t\t}\n\n  \t\tvar i,\n  \t\t    module = this.module,\n  \t\t    moduleName = module.name,\n  \t\t    testName = this.testName,\n  \t\t    skipped = !!this.skip,\n  \t\t    todo = !!this.todo,\n  \t\t    bad = 0,\n  \t\t    storage = config.storage;\n\n  \t\tthis.runtime = now() - this.started;\n\n  \t\tconfig.stats.all += this.assertions.length;\n  \t\tmodule.stats.all += this.assertions.length;\n\n  \t\tfor (i = 0; i < this.assertions.length; i++) {\n  \t\t\tif (!this.assertions[i].result) {\n  \t\t\t\tbad++;\n  \t\t\t\tconfig.stats.bad++;\n  \t\t\t\tmodule.stats.bad++;\n  \t\t\t}\n  \t\t}\n\n  \t\tnotifyTestsRan(module);\n\n  \t\t// Store result when possible\n  \t\tif (storage) {\n  \t\t\tif (bad) {\n  \t\t\t\tstorage.setItem(\"qunit-test-\" + moduleName + \"-\" + testName, bad);\n  \t\t\t} else {\n  \t\t\t\tstorage.removeItem(\"qunit-test-\" + moduleName + \"-\" + testName);\n  \t\t\t}\n  \t\t}\n\n  \t\t// After emitting the js-reporters event we cleanup the assertion data to\n  \t\t// avoid leaking it. It is not used by the legacy testDone callbacks.\n  \t\temit(\"testEnd\", this.testReport.end(true));\n  \t\tthis.testReport.slimAssertions();\n\n  \t\trunLoggingCallbacks(\"testDone\", {\n  \t\t\tname: testName,\n  \t\t\tmodule: moduleName,\n  \t\t\tskipped: skipped,\n  \t\t\ttodo: todo,\n  \t\t\tfailed: bad,\n  \t\t\tpassed: this.assertions.length - bad,\n  \t\t\ttotal: this.assertions.length,\n  \t\t\truntime: skipped ? 0 : this.runtime,\n\n  \t\t\t// HTML Reporter use\n  \t\t\tassertions: this.assertions,\n  \t\t\ttestId: this.testId,\n\n  \t\t\t// Source of Test\n  \t\t\tsource: this.stack\n  \t\t});\n\n  \t\tif (module.testsRun === numberOfTests(module)) {\n  \t\t\tlogSuiteEnd(module);\n\n  \t\t\t// Check if the parent modules, iteratively, are done. If that the case,\n  \t\t\t// we emit the `suiteEnd` event and trigger `moduleDone` callback.\n  \t\t\tvar parent = module.parentModule;\n  \t\t\twhile (parent && parent.testsRun === numberOfTests(parent)) {\n  \t\t\t\tlogSuiteEnd(parent);\n  \t\t\t\tparent = parent.parentModule;\n  \t\t\t}\n  \t\t}\n\n  \t\tconfig.current = undefined;\n\n  \t\tfunction logSuiteEnd(module) {\n  \t\t\temit(\"suiteEnd\", module.suiteReport.end(true));\n  \t\t\trunLoggingCallbacks(\"moduleDone\", {\n  \t\t\t\tname: module.name,\n  \t\t\t\ttests: module.tests,\n  \t\t\t\tfailed: module.stats.bad,\n  \t\t\t\tpassed: module.stats.all - module.stats.bad,\n  \t\t\t\ttotal: module.stats.all,\n  \t\t\t\truntime: now() - module.stats.started\n  \t\t\t});\n  \t\t}\n  \t},\n\n  \tpreserveTestEnvironment: function preserveTestEnvironment() {\n  \t\tif (this.preserveEnvironment) {\n  \t\t\tthis.module.testEnvironment = this.testEnvironment;\n  \t\t\tthis.testEnvironment = extend({}, this.module.testEnvironment);\n  \t\t}\n  \t},\n\n  \tqueue: function queue() {\n  \t\tvar test = this;\n\n  \t\tif (!this.valid()) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tfunction runTest() {\n\n  \t\t\t// Each of these can by async\n  \t\t\tProcessingQueue.addImmediate([function () {\n  \t\t\t\ttest.before();\n  \t\t\t}, test.hooks(\"before\"), function () {\n  \t\t\t\ttest.preserveTestEnvironment();\n  \t\t\t}, test.hooks(\"beforeEach\"), function () {\n  \t\t\t\ttest.run();\n  \t\t\t}, test.hooks(\"afterEach\").reverse(), test.hooks(\"after\").reverse(), function () {\n  \t\t\t\ttest.after();\n  \t\t\t}, function () {\n  \t\t\t\ttest.finish();\n  \t\t\t}]);\n  \t\t}\n\n  \t\tvar previousFailCount = config.storage && +config.storage.getItem(\"qunit-test-\" + this.module.name + \"-\" + this.testName);\n\n  \t\t// Prioritize previously failed tests, detected from storage\n  \t\tvar prioritize = config.reorder && !!previousFailCount;\n\n  \t\tthis.previousFailure = !!previousFailCount;\n\n  \t\tProcessingQueue.add(runTest, prioritize, config.seed);\n\n  \t\t// If the queue has already finished, we manually process the new test\n  \t\tif (ProcessingQueue.finished) {\n  \t\t\tProcessingQueue.advance();\n  \t\t}\n  \t},\n\n\n  \tpushResult: function pushResult(resultInfo) {\n  \t\tif (this !== config.current) {\n  \t\t\tthrow new Error(\"Assertion occured after test had finished.\");\n  \t\t}\n\n  \t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n  \t\tvar source,\n  \t\t    details = {\n  \t\t\tmodule: this.module.name,\n  \t\t\tname: this.testName,\n  \t\t\tresult: resultInfo.result,\n  \t\t\tmessage: resultInfo.message,\n  \t\t\tactual: resultInfo.actual,\n  \t\t\texpected: resultInfo.expected,\n  \t\t\ttestId: this.testId,\n  \t\t\tnegative: resultInfo.negative || false,\n  \t\t\truntime: now() - this.started,\n  \t\t\ttodo: !!this.todo\n  \t\t};\n\n  \t\tif (!resultInfo.result) {\n  \t\t\tsource = resultInfo.source || sourceFromStacktrace();\n\n  \t\t\tif (source) {\n  \t\t\t\tdetails.source = source;\n  \t\t\t}\n  \t\t}\n\n  \t\tthis.logAssertion(details);\n\n  \t\tthis.assertions.push({\n  \t\t\tresult: !!resultInfo.result,\n  \t\t\tmessage: resultInfo.message\n  \t\t});\n  \t},\n\n  \tpushFailure: function pushFailure(message, source, actual) {\n  \t\tif (!(this instanceof Test)) {\n  \t\t\tthrow new Error(\"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2));\n  \t\t}\n\n  \t\tthis.pushResult({\n  \t\t\tresult: false,\n  \t\t\tmessage: message || \"error\",\n  \t\t\tactual: actual || null,\n  \t\t\texpected: null,\n  \t\t\tsource: source\n  \t\t});\n  \t},\n\n  \t/**\n    * Log assertion details using both the old QUnit.log interface and\n    * QUnit.on( \"assertion\" ) interface.\n    *\n    * @private\n    */\n  \tlogAssertion: function logAssertion(details) {\n  \t\trunLoggingCallbacks(\"log\", details);\n\n  \t\tvar assertion = {\n  \t\t\tpassed: details.result,\n  \t\t\tactual: details.actual,\n  \t\t\texpected: details.expected,\n  \t\t\tmessage: details.message,\n  \t\t\tstack: details.source,\n  \t\t\ttodo: details.todo\n  \t\t};\n  \t\tthis.testReport.pushAssertion(assertion);\n  \t\temit(\"assertion\", assertion);\n  \t},\n\n\n  \tresolvePromise: function resolvePromise(promise, phase) {\n  \t\tvar then,\n  \t\t    resume,\n  \t\t    message,\n  \t\t    test = this;\n  \t\tif (promise != null) {\n  \t\t\tthen = promise.then;\n  \t\t\tif (objectType(then) === \"function\") {\n  \t\t\t\tresume = internalStop(test);\n  \t\t\t\tthen.call(promise, function () {\n  \t\t\t\t\tresume();\n  \t\t\t\t}, function (error) {\n  \t\t\t\t\tmessage = \"Promise rejected \" + (!phase ? \"during\" : phase.replace(/Each$/, \"\")) + \" \\\"\" + test.testName + \"\\\": \" + (error && error.message || error);\n  \t\t\t\t\ttest.pushFailure(message, extractStacktrace(error, 0));\n\n  \t\t\t\t\t// Else next test will carry the responsibility\n  \t\t\t\t\tsaveGlobal();\n\n  \t\t\t\t\t// Unblock\n  \t\t\t\t\tresume();\n  \t\t\t\t});\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tvalid: function valid() {\n  \t\tvar filter = config.filter,\n  \t\t    regexFilter = /^(!?)\\/([\\w\\W]*)\\/(i?$)/.exec(filter),\n  \t\t    module = config.module && config.module.toLowerCase(),\n  \t\t    fullName = this.module.name + \": \" + this.testName;\n\n  \t\tfunction moduleChainNameMatch(testModule) {\n  \t\t\tvar testModuleName = testModule.name ? testModule.name.toLowerCase() : null;\n  \t\t\tif (testModuleName === module) {\n  \t\t\t\treturn true;\n  \t\t\t} else if (testModule.parentModule) {\n  \t\t\t\treturn moduleChainNameMatch(testModule.parentModule);\n  \t\t\t} else {\n  \t\t\t\treturn false;\n  \t\t\t}\n  \t\t}\n\n  \t\tfunction moduleChainIdMatch(testModule) {\n  \t\t\treturn inArray(testModule.moduleId, config.moduleId) || testModule.parentModule && moduleChainIdMatch(testModule.parentModule);\n  \t\t}\n\n  \t\t// Internally-generated tests are always valid\n  \t\tif (this.callback && this.callback.validTest) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\tif (config.moduleId && config.moduleId.length > 0 && !moduleChainIdMatch(this.module)) {\n\n  \t\t\treturn false;\n  \t\t}\n\n  \t\tif (config.testId && config.testId.length > 0 && !inArray(this.testId, config.testId)) {\n\n  \t\t\treturn false;\n  \t\t}\n\n  \t\tif (module && !moduleChainNameMatch(this.module)) {\n  \t\t\treturn false;\n  \t\t}\n\n  \t\tif (!filter) {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\treturn regexFilter ? this.regexFilter(!!regexFilter[1], regexFilter[2], regexFilter[3], fullName) : this.stringFilter(filter, fullName);\n  \t},\n\n  \tregexFilter: function regexFilter(exclude, pattern, flags, fullName) {\n  \t\tvar regex = new RegExp(pattern, flags);\n  \t\tvar match = regex.test(fullName);\n\n  \t\treturn match !== exclude;\n  \t},\n\n  \tstringFilter: function stringFilter(filter, fullName) {\n  \t\tfilter = filter.toLowerCase();\n  \t\tfullName = fullName.toLowerCase();\n\n  \t\tvar include = filter.charAt(0) !== \"!\";\n  \t\tif (!include) {\n  \t\t\tfilter = filter.slice(1);\n  \t\t}\n\n  \t\t// If the filter matches, we need to honour include\n  \t\tif (fullName.indexOf(filter) !== -1) {\n  \t\t\treturn include;\n  \t\t}\n\n  \t\t// Otherwise, do the opposite\n  \t\treturn !include;\n  \t}\n  };\n\n  function pushFailure() {\n  \tif (!config.current) {\n  \t\tthrow new Error(\"pushFailure() assertion outside test context, in \" + sourceFromStacktrace(2));\n  \t}\n\n  \t// Gets current test obj\n  \tvar currentTest = config.current;\n\n  \treturn currentTest.pushFailure.apply(currentTest, arguments);\n  }\n\n  function saveGlobal() {\n  \tconfig.pollution = [];\n\n  \tif (config.noglobals) {\n  \t\tfor (var key in global$1) {\n  \t\t\tif (hasOwn.call(global$1, key)) {\n\n  \t\t\t\t// In Opera sometimes DOM element ids show up here, ignore them\n  \t\t\t\tif (/^qunit-test-output/.test(key)) {\n  \t\t\t\t\tcontinue;\n  \t\t\t\t}\n  \t\t\t\tconfig.pollution.push(key);\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  function checkPollution() {\n  \tvar newGlobals,\n  \t    deletedGlobals,\n  \t    old = config.pollution;\n\n  \tsaveGlobal();\n\n  \tnewGlobals = diff(config.pollution, old);\n  \tif (newGlobals.length > 0) {\n  \t\tpushFailure(\"Introduced global variable(s): \" + newGlobals.join(\", \"));\n  \t}\n\n  \tdeletedGlobals = diff(old, config.pollution);\n  \tif (deletedGlobals.length > 0) {\n  \t\tpushFailure(\"Deleted global variable(s): \" + deletedGlobals.join(\", \"));\n  \t}\n  }\n\n  // Will be exposed as QUnit.test\n  function test(testName, callback) {\n  \tif (focused) {\n  \t\treturn;\n  \t}\n\n  \tvar newTest = new Test({\n  \t\ttestName: testName,\n  \t\tcallback: callback\n  \t});\n\n  \tnewTest.queue();\n  }\n\n  function todo(testName, callback) {\n  \tif (focused) {\n  \t\treturn;\n  \t}\n\n  \tvar newTest = new Test({\n  \t\ttestName: testName,\n  \t\tcallback: callback,\n  \t\ttodo: true\n  \t});\n\n  \tnewTest.queue();\n  }\n\n  // Will be exposed as QUnit.skip\n  function skip(testName) {\n  \tif (focused) {\n  \t\treturn;\n  \t}\n\n  \tvar test = new Test({\n  \t\ttestName: testName,\n  \t\tskip: true\n  \t});\n\n  \ttest.queue();\n  }\n\n  // Will be exposed as QUnit.only\n  function only(testName, callback) {\n  \tif (focused) {\n  \t\treturn;\n  \t}\n\n  \tconfig.queue.length = 0;\n  \tfocused = true;\n\n  \tvar newTest = new Test({\n  \t\ttestName: testName,\n  \t\tcallback: callback\n  \t});\n\n  \tnewTest.queue();\n  }\n\n  // Put a hold on processing and return a function that will release it.\n  function internalStop(test) {\n  \tvar released = false;\n\n  \ttest.semaphore += 1;\n  \tconfig.blocking = true;\n\n  \t// Set a recovery timeout, if so configured.\n  \tif (config.testTimeout && defined.setTimeout) {\n  \t\tclearTimeout(config.timeout);\n  \t\tconfig.timeout = setTimeout(function () {\n  \t\t\tpushFailure(\"Test timed out\", sourceFromStacktrace(2));\n  \t\t\tinternalRecover(test);\n  \t\t}, config.testTimeout);\n  \t}\n\n  \treturn function resume() {\n  \t\tif (released) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\treleased = true;\n  \t\ttest.semaphore -= 1;\n  \t\tinternalStart(test);\n  \t};\n  }\n\n  // Forcefully release all processing holds.\n  function internalRecover(test) {\n  \ttest.semaphore = 0;\n  \tinternalStart(test);\n  }\n\n  // Release a processing hold, scheduling a resumption attempt if no holds remain.\n  function internalStart(test) {\n\n  \t// If semaphore is non-numeric, throw error\n  \tif (isNaN(test.semaphore)) {\n  \t\ttest.semaphore = 0;\n\n  \t\tpushFailure(\"Invalid value on test.semaphore\", sourceFromStacktrace(2));\n  \t\treturn;\n  \t}\n\n  \t// Don't start until equal number of stop-calls\n  \tif (test.semaphore > 0) {\n  \t\treturn;\n  \t}\n\n  \t// Throw an Error if start is called more often than stop\n  \tif (test.semaphore < 0) {\n  \t\ttest.semaphore = 0;\n\n  \t\tpushFailure(\"Tried to restart test while already started (test's semaphore was 0 already)\", sourceFromStacktrace(2));\n  \t\treturn;\n  \t}\n\n  \t// Add a slight delay to allow more assertions etc.\n  \tif (defined.setTimeout) {\n  \t\tif (config.timeout) {\n  \t\t\tclearTimeout(config.timeout);\n  \t\t}\n  \t\tconfig.timeout = setTimeout(function () {\n  \t\t\tif (test.semaphore > 0) {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tif (config.timeout) {\n  \t\t\t\tclearTimeout(config.timeout);\n  \t\t\t}\n\n  \t\t\tbegin();\n  \t\t}, 13);\n  \t} else {\n  \t\tbegin();\n  \t}\n  }\n\n  function numberOfTests(module) {\n  \tvar count = module.tests.length;\n  \tvar modules = [].concat(toConsumableArray(module.childModules));\n\n  \t// Do a breadth-first traversal of the child modules\n  \twhile (modules.length) {\n  \t\tvar nextModule = modules.shift();\n  \t\tcount += nextModule.tests.length;\n  \t\tmodules.push.apply(modules, toConsumableArray(nextModule.childModules));\n  \t}\n\n  \treturn count;\n  }\n\n  function notifyTestsRan(module) {\n  \tmodule.testsRun++;\n  \twhile (module = module.parentModule) {\n  \t\tmodule.testsRun++;\n  \t}\n  }\n\n  /**\n   * Returns a function that proxies to the given method name on the globals\n   * console object. The proxy will also detect if the console doesn't exist and\n   * will appropriately no-op. This allows support for IE9, which doesn't have a\n   * console if the developer tools are not open.\n   */\n  function consoleProxy(method) {\n  \treturn function () {\n  \t\tif (console) {\n  \t\t\tconsole[method].apply(console, arguments);\n  \t\t}\n  \t};\n  }\n\n  var Logger = {\n  \twarn: consoleProxy(\"warn\")\n  };\n\n  var Assert = function () {\n  \tfunction Assert(testContext) {\n  \t\tclassCallCheck(this, Assert);\n\n  \t\tthis.test = testContext;\n  \t}\n\n  \t// Assert helpers\n\n  \t// Documents a \"step\", which is a string value, in a test as a passing assertion\n\n\n  \tcreateClass(Assert, [{\n  \t\tkey: \"step\",\n  \t\tvalue: function step(message) {\n  \t\t\tvar result = !!message;\n\n  \t\t\tthis.test.steps.push(message);\n\n  \t\t\treturn this.pushResult({\n  \t\t\t\tresult: result,\n  \t\t\t\tmessage: message || \"You must provide a message to assert.step\"\n  \t\t\t});\n  \t\t}\n\n  \t\t// Verifies the steps in a test match a given array of string values\n\n  \t}, {\n  \t\tkey: \"verifySteps\",\n  \t\tvalue: function verifySteps(steps, message) {\n  \t\t\tthis.deepEqual(this.test.steps, steps, message);\n  \t\t}\n\n  \t\t// Specify the number of expected assertions to guarantee that failed test\n  \t\t// (no assertions are run at all) don't slip through.\n\n  \t}, {\n  \t\tkey: \"expect\",\n  \t\tvalue: function expect(asserts) {\n  \t\t\tif (arguments.length === 1) {\n  \t\t\t\tthis.test.expected = asserts;\n  \t\t\t} else {\n  \t\t\t\treturn this.test.expected;\n  \t\t\t}\n  \t\t}\n\n  \t\t// Put a hold on processing and return a function that will release it a maximum of once.\n\n  \t}, {\n  \t\tkey: \"async\",\n  \t\tvalue: function async(count) {\n  \t\t\tvar test$$1 = this.test;\n\n  \t\t\tvar popped = false,\n  \t\t\t    acceptCallCount = count;\n\n  \t\t\tif (typeof acceptCallCount === \"undefined\") {\n  \t\t\t\tacceptCallCount = 1;\n  \t\t\t}\n\n  \t\t\tvar resume = internalStop(test$$1);\n\n  \t\t\treturn function done() {\n  \t\t\t\tif (config.current !== test$$1) {\n  \t\t\t\t\tthrow Error(\"assert.async callback called after test finished.\");\n  \t\t\t\t}\n\n  \t\t\t\tif (popped) {\n  \t\t\t\t\ttest$$1.pushFailure(\"Too many calls to the `assert.async` callback\", sourceFromStacktrace(2));\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tacceptCallCount -= 1;\n  \t\t\t\tif (acceptCallCount > 0) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tpopped = true;\n  \t\t\t\tresume();\n  \t\t\t};\n  \t\t}\n\n  \t\t// Exports test.push() to the user API\n  \t\t// Alias of pushResult.\n\n  \t}, {\n  \t\tkey: \"push\",\n  \t\tvalue: function push(result, actual, expected, message, negative) {\n  \t\t\tLogger.warn(\"assert.push is deprecated and will be removed in QUnit 3.0.\" + \" Please use assert.pushResult instead (http://api.qunitjs.com/pushResult/).\");\n\n  \t\t\tvar currentAssert = this instanceof Assert ? this : config.current.assert;\n  \t\t\treturn currentAssert.pushResult({\n  \t\t\t\tresult: result,\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message,\n  \t\t\t\tnegative: negative\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"pushResult\",\n  \t\tvalue: function pushResult(resultInfo) {\n\n  \t\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n  \t\t\tvar assert = this;\n  \t\t\tvar currentTest = assert instanceof Assert && assert.test || config.current;\n\n  \t\t\t// Backwards compatibility fix.\n  \t\t\t// Allows the direct use of global exported assertions and QUnit.assert.*\n  \t\t\t// Although, it's use is not recommended as it can leak assertions\n  \t\t\t// to other tests from async tests, because we only get a reference to the current test,\n  \t\t\t// not exactly the test where assertion were intended to be called.\n  \t\t\tif (!currentTest) {\n  \t\t\t\tthrow new Error(\"assertion outside test context, in \" + sourceFromStacktrace(2));\n  \t\t\t}\n\n  \t\t\tif (!(assert instanceof Assert)) {\n  \t\t\t\tassert = currentTest.assert;\n  \t\t\t}\n\n  \t\t\treturn assert.test.pushResult(resultInfo);\n  \t\t}\n  \t}, {\n  \t\tkey: \"ok\",\n  \t\tvalue: function ok(result, message) {\n  \t\t\tif (!message) {\n  \t\t\t\tmessage = result ? \"okay\" : \"failed, expected argument to be truthy, was: \" + dump.parse(result);\n  \t\t\t}\n\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: !!result,\n  \t\t\t\tactual: result,\n  \t\t\t\texpected: true,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"notOk\",\n  \t\tvalue: function notOk(result, message) {\n  \t\t\tif (!message) {\n  \t\t\t\tmessage = !result ? \"okay\" : \"failed, expected argument to be falsy, was: \" + dump.parse(result);\n  \t\t\t}\n\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: !result,\n  \t\t\t\tactual: result,\n  \t\t\t\texpected: false,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"equal\",\n  \t\tvalue: function equal(actual, expected, message) {\n\n  \t\t\t// eslint-disable-next-line eqeqeq\n  \t\t\tvar result = expected == actual;\n\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: result,\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"notEqual\",\n  \t\tvalue: function notEqual(actual, expected, message) {\n\n  \t\t\t// eslint-disable-next-line eqeqeq\n  \t\t\tvar result = expected != actual;\n\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: result,\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message,\n  \t\t\t\tnegative: true\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"propEqual\",\n  \t\tvalue: function propEqual(actual, expected, message) {\n  \t\t\tactual = objectValues(actual);\n  \t\t\texpected = objectValues(expected);\n\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: equiv(actual, expected),\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"notPropEqual\",\n  \t\tvalue: function notPropEqual(actual, expected, message) {\n  \t\t\tactual = objectValues(actual);\n  \t\t\texpected = objectValues(expected);\n\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: !equiv(actual, expected),\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message,\n  \t\t\t\tnegative: true\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"deepEqual\",\n  \t\tvalue: function deepEqual(actual, expected, message) {\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: equiv(actual, expected),\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"notDeepEqual\",\n  \t\tvalue: function notDeepEqual(actual, expected, message) {\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: !equiv(actual, expected),\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message,\n  \t\t\t\tnegative: true\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"strictEqual\",\n  \t\tvalue: function strictEqual(actual, expected, message) {\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: expected === actual,\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"notStrictEqual\",\n  \t\tvalue: function notStrictEqual(actual, expected, message) {\n  \t\t\tthis.pushResult({\n  \t\t\t\tresult: expected !== actual,\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message,\n  \t\t\t\tnegative: true\n  \t\t\t});\n  \t\t}\n  \t}, {\n  \t\tkey: \"throws\",\n  \t\tvalue: function throws(block, expected, message) {\n  \t\t\tvar actual = void 0,\n  \t\t\t    result = false;\n\n  \t\t\tvar currentTest = this instanceof Assert && this.test || config.current;\n\n  \t\t\t// 'expected' is optional unless doing string comparison\n  \t\t\tif (objectType(expected) === \"string\") {\n  \t\t\t\tif (message == null) {\n  \t\t\t\t\tmessage = expected;\n  \t\t\t\t\texpected = null;\n  \t\t\t\t} else {\n  \t\t\t\t\tthrow new Error(\"throws/raises does not accept a string value for the expected argument.\\n\" + \"Use a non-string object value (e.g. regExp) instead if it's necessary.\");\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tcurrentTest.ignoreGlobalErrors = true;\n  \t\t\ttry {\n  \t\t\t\tblock.call(currentTest.testEnvironment);\n  \t\t\t} catch (e) {\n  \t\t\t\tactual = e;\n  \t\t\t}\n  \t\t\tcurrentTest.ignoreGlobalErrors = false;\n\n  \t\t\tif (actual) {\n  \t\t\t\tvar expectedType = objectType(expected);\n\n  \t\t\t\t// We don't want to validate thrown error\n  \t\t\t\tif (!expected) {\n  \t\t\t\t\tresult = true;\n  \t\t\t\t\texpected = null;\n\n  \t\t\t\t\t// Expected is a regexp\n  \t\t\t\t} else if (expectedType === \"regexp\") {\n  \t\t\t\t\tresult = expected.test(errorString(actual));\n\n  \t\t\t\t\t// Expected is a constructor, maybe an Error constructor\n  \t\t\t\t} else if (expectedType === \"function\" && actual instanceof expected) {\n  \t\t\t\t\tresult = true;\n\n  \t\t\t\t\t// Expected is an Error object\n  \t\t\t\t} else if (expectedType === \"object\") {\n  \t\t\t\t\tresult = actual instanceof expected.constructor && actual.name === expected.name && actual.message === expected.message;\n\n  \t\t\t\t\t// Expected is a validation function which returns true if validation passed\n  \t\t\t\t} else if (expectedType === \"function\" && expected.call({}, actual) === true) {\n  \t\t\t\t\texpected = null;\n  \t\t\t\t\tresult = true;\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tcurrentTest.assert.pushResult({\n  \t\t\t\tresult: result,\n  \t\t\t\tactual: actual,\n  \t\t\t\texpected: expected,\n  \t\t\t\tmessage: message\n  \t\t\t});\n  \t\t}\n  \t}]);\n  \treturn Assert;\n  }();\n\n  // Provide an alternative to assert.throws(), for environments that consider throws a reserved word\n  // Known to us are: Closure Compiler, Narwhal\n  // eslint-disable-next-line dot-notation\n\n\n  Assert.prototype.raises = Assert.prototype[\"throws\"];\n\n  /**\n   * Converts an error into a simple string for comparisons.\n   *\n   * @param {Error} error\n   * @return {String}\n   */\n  function errorString(error) {\n  \tvar resultErrorString = error.toString();\n\n  \tif (resultErrorString.substring(0, 7) === \"[object\") {\n  \t\tvar name = error.name ? error.name.toString() : \"Error\";\n  \t\tvar message = error.message ? error.message.toString() : \"\";\n\n  \t\tif (name && message) {\n  \t\t\treturn name + \": \" + message;\n  \t\t} else if (name) {\n  \t\t\treturn name;\n  \t\t} else if (message) {\n  \t\t\treturn message;\n  \t\t} else {\n  \t\t\treturn \"Error\";\n  \t\t}\n  \t} else {\n  \t\treturn resultErrorString;\n  \t}\n  }\n\n  /* global module, exports, define */\n  function exportQUnit(QUnit) {\n\n  \tif (defined.document) {\n\n  \t\t// QUnit may be defined when it is preconfigured but then only QUnit and QUnit.config may be defined.\n  \t\tif (window.QUnit && window.QUnit.version) {\n  \t\t\tthrow new Error(\"QUnit has already been defined.\");\n  \t\t}\n\n  \t\twindow.QUnit = QUnit;\n  \t}\n\n  \t// For nodejs\n  \tif (typeof module !== \"undefined\" && module && module.exports) {\n  \t\tmodule.exports = QUnit;\n\n  \t\t// For consistency with CommonJS environments' exports\n  \t\tmodule.exports.QUnit = QUnit;\n  \t}\n\n  \t// For CommonJS with exports, but without module.exports, like Rhino\n  \tif (typeof exports !== \"undefined\" && exports) {\n  \t\texports.QUnit = QUnit;\n  \t}\n\n  \tif (typeof define === \"function\" && define.amd) {\n  \t\tdefine(function () {\n  \t\t\treturn QUnit;\n  \t\t});\n  \t\tQUnit.config.autostart = false;\n  \t}\n  }\n\n  var SuiteReport = function () {\n  \tfunction SuiteReport(name, parentSuite) {\n  \t\tclassCallCheck(this, SuiteReport);\n\n  \t\tthis.name = name;\n  \t\tthis.fullName = parentSuite ? parentSuite.fullName.concat(name) : [];\n\n  \t\tthis.tests = [];\n  \t\tthis.childSuites = [];\n\n  \t\tif (parentSuite) {\n  \t\t\tparentSuite.pushChildSuite(this);\n  \t\t}\n  \t}\n\n  \tcreateClass(SuiteReport, [{\n  \t\tkey: \"start\",\n  \t\tvalue: function start(recordTime) {\n  \t\t\tif (recordTime) {\n  \t\t\t\tthis._startTime = Date.now();\n  \t\t\t}\n\n  \t\t\treturn {\n  \t\t\t\tname: this.name,\n  \t\t\t\tfullName: this.fullName.slice(),\n  \t\t\t\ttests: this.tests.map(function (test) {\n  \t\t\t\t\treturn test.start();\n  \t\t\t\t}),\n  \t\t\t\tchildSuites: this.childSuites.map(function (suite) {\n  \t\t\t\t\treturn suite.start();\n  \t\t\t\t}),\n  \t\t\t\ttestCounts: {\n  \t\t\t\t\ttotal: this.getTestCounts().total\n  \t\t\t\t}\n  \t\t\t};\n  \t\t}\n  \t}, {\n  \t\tkey: \"end\",\n  \t\tvalue: function end(recordTime) {\n  \t\t\tif (recordTime) {\n  \t\t\t\tthis._endTime = Date.now();\n  \t\t\t}\n\n  \t\t\treturn {\n  \t\t\t\tname: this.name,\n  \t\t\t\tfullName: this.fullName.slice(),\n  \t\t\t\ttests: this.tests.map(function (test) {\n  \t\t\t\t\treturn test.end();\n  \t\t\t\t}),\n  \t\t\t\tchildSuites: this.childSuites.map(function (suite) {\n  \t\t\t\t\treturn suite.end();\n  \t\t\t\t}),\n  \t\t\t\ttestCounts: this.getTestCounts(),\n  \t\t\t\truntime: this.getRuntime(),\n  \t\t\t\tstatus: this.getStatus()\n  \t\t\t};\n  \t\t}\n  \t}, {\n  \t\tkey: \"pushChildSuite\",\n  \t\tvalue: function pushChildSuite(suite) {\n  \t\t\tthis.childSuites.push(suite);\n  \t\t}\n  \t}, {\n  \t\tkey: \"pushTest\",\n  \t\tvalue: function pushTest(test) {\n  \t\t\tthis.tests.push(test);\n  \t\t}\n  \t}, {\n  \t\tkey: \"getRuntime\",\n  \t\tvalue: function getRuntime() {\n  \t\t\treturn this._endTime - this._startTime;\n  \t\t}\n  \t}, {\n  \t\tkey: \"getTestCounts\",\n  \t\tvalue: function getTestCounts() {\n  \t\t\tvar counts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { passed: 0, failed: 0, skipped: 0, todo: 0, total: 0 };\n\n  \t\t\tcounts = this.tests.reduce(function (counts, test) {\n  \t\t\t\tif (test.valid) {\n  \t\t\t\t\tcounts[test.getStatus()]++;\n  \t\t\t\t\tcounts.total++;\n  \t\t\t\t}\n\n  \t\t\t\treturn counts;\n  \t\t\t}, counts);\n\n  \t\t\treturn this.childSuites.reduce(function (counts, suite) {\n  \t\t\t\treturn suite.getTestCounts(counts);\n  \t\t\t}, counts);\n  \t\t}\n  \t}, {\n  \t\tkey: \"getStatus\",\n  \t\tvalue: function getStatus() {\n  \t\t\tvar _getTestCounts = this.getTestCounts(),\n  \t\t\t    total = _getTestCounts.total,\n  \t\t\t    failed = _getTestCounts.failed,\n  \t\t\t    skipped = _getTestCounts.skipped,\n  \t\t\t    todo = _getTestCounts.todo;\n\n  \t\t\tif (failed) {\n  \t\t\t\treturn \"failed\";\n  \t\t\t} else {\n  \t\t\t\tif (skipped === total) {\n  \t\t\t\t\treturn \"skipped\";\n  \t\t\t\t} else if (todo === total) {\n  \t\t\t\t\treturn \"todo\";\n  \t\t\t\t} else {\n  \t\t\t\t\treturn \"passed\";\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}]);\n  \treturn SuiteReport;\n  }();\n\n  // Handle an unhandled exception. By convention, returns true if further\n  // error handling should be suppressed and false otherwise.\n  // In this case, we will only suppress further error handling if the\n  // \"ignoreGlobalErrors\" configuration option is enabled.\n  function onError(error) {\n  \tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\targs[_key - 1] = arguments[_key];\n  \t}\n\n  \tif (config.current) {\n  \t\tif (config.current.ignoreGlobalErrors) {\n  \t\t\treturn true;\n  \t\t}\n  \t\tpushFailure.apply(undefined, [error.message, error.fileName + \":\" + error.lineNumber].concat(args));\n  \t} else {\n  \t\ttest(\"global failure\", extend(function () {\n  \t\t\tpushFailure.apply(undefined, [error.message, error.fileName + \":\" + error.lineNumber].concat(args));\n  \t\t}, { validTest: true }));\n  \t}\n\n  \treturn false;\n  }\n\n  var QUnit = {};\n  var globalSuite = new SuiteReport();\n\n  // The initial \"currentModule\" represents the global (or top-level) module that\n  // is not explicitly defined by the user, therefore we add the \"globalSuite\" to\n  // it since each module has a suiteReport associated with it.\n  config.currentModule.suiteReport = globalSuite;\n\n  var moduleStack = [];\n  var globalStartCalled = false;\n  var runStarted = false;\n\n  // Figure out if we're running the tests from a server or not\n  QUnit.isLocal = !(defined.document && window.location.protocol !== \"file:\");\n\n  // Expose the current QUnit version\n  QUnit.version = \"2.3.1\";\n\n  function createModule(name, testEnvironment) {\n  \tvar parentModule = moduleStack.length ? moduleStack.slice(-1)[0] : null;\n  \tvar moduleName = parentModule !== null ? [parentModule.name, name].join(\" > \") : name;\n  \tvar parentSuite = parentModule ? parentModule.suiteReport : globalSuite;\n\n  \tvar module = {\n  \t\tname: moduleName,\n  \t\tparentModule: parentModule,\n  \t\ttests: [],\n  \t\tmoduleId: generateHash(moduleName),\n  \t\ttestsRun: 0,\n  \t\tchildModules: [],\n  \t\tsuiteReport: new SuiteReport(name, parentSuite)\n  \t};\n\n  \tvar env = {};\n  \tif (parentModule) {\n  \t\tparentModule.childModules.push(module);\n  \t\textend(env, parentModule.testEnvironment);\n  \t}\n  \textend(env, testEnvironment);\n  \tmodule.testEnvironment = env;\n\n  \tconfig.modules.push(module);\n  \treturn module;\n  }\n\n  extend(QUnit, {\n  \ton: on,\n\n  \t// Call on start of module test to prepend name to all tests\n  \tmodule: function module(name, testEnvironment, executeNow) {\n  \t\tif (arguments.length === 2) {\n  \t\t\tif (objectType(testEnvironment) === \"function\") {\n  \t\t\t\texecuteNow = testEnvironment;\n  \t\t\t\ttestEnvironment = undefined;\n  \t\t\t}\n  \t\t}\n\n  \t\tvar module = createModule(name, testEnvironment);\n\n  \t\t// Move any hooks to a 'hooks' object\n  \t\tif (module.testEnvironment) {\n  \t\t\tmodule.hooks = {\n  \t\t\t\tbefore: module.testEnvironment.before,\n  \t\t\t\tbeforeEach: module.testEnvironment.beforeEach,\n  \t\t\t\tafterEach: module.testEnvironment.afterEach,\n  \t\t\t\tafter: module.testEnvironment.after\n  \t\t\t};\n\n  \t\t\tdelete module.testEnvironment.before;\n  \t\t\tdelete module.testEnvironment.beforeEach;\n  \t\t\tdelete module.testEnvironment.afterEach;\n  \t\t\tdelete module.testEnvironment.after;\n  \t\t}\n\n  \t\tvar moduleFns = {\n  \t\t\tbefore: setHook(module, \"before\"),\n  \t\t\tbeforeEach: setHook(module, \"beforeEach\"),\n  \t\t\tafterEach: setHook(module, \"afterEach\"),\n  \t\t\tafter: setHook(module, \"after\")\n  \t\t};\n\n  \t\tvar currentModule = config.currentModule;\n  \t\tif (objectType(executeNow) === \"function\") {\n  \t\t\tmoduleStack.push(module);\n  \t\t\tconfig.currentModule = module;\n  \t\t\texecuteNow.call(module.testEnvironment, moduleFns);\n  \t\t\tmoduleStack.pop();\n  \t\t\tmodule = module.parentModule || currentModule;\n  \t\t}\n\n  \t\tconfig.currentModule = module;\n  \t},\n\n  \ttest: test,\n\n  \ttodo: todo,\n\n  \tskip: skip,\n\n  \tonly: only,\n\n  \tstart: function start(count) {\n  \t\tvar globalStartAlreadyCalled = globalStartCalled;\n\n  \t\tif (!config.current) {\n  \t\t\tglobalStartCalled = true;\n\n  \t\t\tif (runStarted) {\n  \t\t\t\tthrow new Error(\"Called start() while test already started running\");\n  \t\t\t} else if (globalStartAlreadyCalled || count > 1) {\n  \t\t\t\tthrow new Error(\"Called start() outside of a test context too many times\");\n  \t\t\t} else if (config.autostart) {\n  \t\t\t\tthrow new Error(\"Called start() outside of a test context when \" + \"QUnit.config.autostart was true\");\n  \t\t\t} else if (!config.pageLoaded) {\n\n  \t\t\t\t// The page isn't completely loaded yet, so we set autostart and then\n  \t\t\t\t// load if we're in Node or wait for the browser's load event.\n  \t\t\t\tconfig.autostart = true;\n\n  \t\t\t\t// Starts from Node even if .load was not previously called. We still return\n  \t\t\t\t// early otherwise we'll wind up \"beginning\" twice.\n  \t\t\t\tif (!defined.document) {\n  \t\t\t\t\tQUnit.load();\n  \t\t\t\t}\n\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t} else {\n  \t\t\tthrow new Error(\"QUnit.start cannot be called inside a test context.\");\n  \t\t}\n\n  \t\tscheduleBegin();\n  \t},\n\n  \tconfig: config,\n\n  \tis: is,\n\n  \tobjectType: objectType,\n\n  \textend: extend,\n\n  \tload: function load() {\n  \t\tconfig.pageLoaded = true;\n\n  \t\t// Initialize the configuration options\n  \t\textend(config, {\n  \t\t\tstats: { all: 0, bad: 0 },\n  \t\t\tstarted: 0,\n  \t\t\tupdateRate: 1000,\n  \t\t\tautostart: true,\n  \t\t\tfilter: \"\"\n  \t\t}, true);\n\n  \t\tif (!runStarted) {\n  \t\t\tconfig.blocking = false;\n\n  \t\t\tif (config.autostart) {\n  \t\t\t\tscheduleBegin();\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tstack: function stack(offset) {\n  \t\toffset = (offset || 0) + 2;\n  \t\treturn sourceFromStacktrace(offset);\n  \t},\n\n  \tonError: onError\n  });\n\n  QUnit.pushFailure = pushFailure;\n  QUnit.assert = Assert.prototype;\n  QUnit.equiv = equiv;\n  QUnit.dump = dump;\n\n  registerLoggingCallbacks(QUnit);\n\n  function scheduleBegin() {\n\n  \trunStarted = true;\n\n  \t// Add a slight delay to allow definition of more modules and tests.\n  \tif (defined.setTimeout) {\n  \t\tsetTimeout(function () {\n  \t\t\tbegin();\n  \t\t}, 13);\n  \t} else {\n  \t\tbegin();\n  \t}\n  }\n\n  function begin() {\n  \tvar i,\n  \t    l,\n  \t    modulesLog = [];\n\n  \t// If the test run hasn't officially begun yet\n  \tif (!config.started) {\n\n  \t\t// Record the time of the test run's beginning\n  \t\tconfig.started = now();\n\n  \t\t// Delete the loose unnamed module if unused.\n  \t\tif (config.modules[0].name === \"\" && config.modules[0].tests.length === 0) {\n  \t\t\tconfig.modules.shift();\n  \t\t}\n\n  \t\t// Avoid unnecessary information by not logging modules' test environments\n  \t\tfor (i = 0, l = config.modules.length; i < l; i++) {\n  \t\t\tmodulesLog.push({\n  \t\t\t\tname: config.modules[i].name,\n  \t\t\t\ttests: config.modules[i].tests\n  \t\t\t});\n  \t\t}\n\n  \t\t// The test run is officially beginning now\n  \t\temit(\"runStart\", globalSuite.start(true));\n  \t\trunLoggingCallbacks(\"begin\", {\n  \t\t\ttotalTests: Test.count,\n  \t\t\tmodules: modulesLog\n  \t\t});\n  \t}\n\n  \tconfig.blocking = false;\n  \tProcessingQueue.advance();\n  }\n\n  function setHook(module, hookName) {\n  \tif (!module.hooks) {\n  \t\tmodule.hooks = {};\n  \t}\n\n  \treturn function (callback) {\n  \t\tmodule.hooks[hookName] = callback;\n  \t};\n  }\n\n  exportQUnit(QUnit);\n\n  (function () {\n\n  \tif (typeof window === \"undefined\" || typeof document === \"undefined\") {\n  \t\treturn;\n  \t}\n\n  \tvar config = QUnit.config,\n  \t    hasOwn = Object.prototype.hasOwnProperty;\n\n  \t// Stores fixture HTML for resetting later\n  \tfunction storeFixture() {\n\n  \t\t// Avoid overwriting user-defined values\n  \t\tif (hasOwn.call(config, \"fixture\")) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar fixture = document.getElementById(\"qunit-fixture\");\n  \t\tif (fixture) {\n  \t\t\tconfig.fixture = fixture.innerHTML;\n  \t\t}\n  \t}\n\n  \tQUnit.begin(storeFixture);\n\n  \t// Resets the fixture DOM element if available.\n  \tfunction resetFixture() {\n  \t\tif (config.fixture == null) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar fixture = document.getElementById(\"qunit-fixture\");\n  \t\tif (fixture) {\n  \t\t\tfixture.innerHTML = config.fixture;\n  \t\t}\n  \t}\n\n  \tQUnit.testStart(resetFixture);\n  })();\n\n  (function () {\n\n  \t// Only interact with URLs via window.location\n  \tvar location = typeof window !== \"undefined\" && window.location;\n  \tif (!location) {\n  \t\treturn;\n  \t}\n\n  \tvar urlParams = getUrlParams();\n\n  \tQUnit.urlParams = urlParams;\n\n  \t// Match module/test by inclusion in an array\n  \tQUnit.config.moduleId = [].concat(urlParams.moduleId || []);\n  \tQUnit.config.testId = [].concat(urlParams.testId || []);\n\n  \t// Exact case-insensitive match of the module name\n  \tQUnit.config.module = urlParams.module;\n\n  \t// Regular expression or case-insenstive substring match against \"moduleName: testName\"\n  \tQUnit.config.filter = urlParams.filter;\n\n  \t// Test order randomization\n  \tif (urlParams.seed === true) {\n\n  \t\t// Generate a random seed if the option is specified without a value\n  \t\tQUnit.config.seed = Math.random().toString(36).slice(2);\n  \t} else if (urlParams.seed) {\n  \t\tQUnit.config.seed = urlParams.seed;\n  \t}\n\n  \t// Add URL-parameter-mapped config values with UI form rendering data\n  \tQUnit.config.urlConfig.push({\n  \t\tid: \"hidepassed\",\n  \t\tlabel: \"Hide passed tests\",\n  \t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\n  \t}, {\n  \t\tid: \"noglobals\",\n  \t\tlabel: \"Check for Globals\",\n  \t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" + \"global object (`window` in Browsers). Stored as query-strings.\"\n  \t}, {\n  \t\tid: \"notrycatch\",\n  \t\tlabel: \"No try-catch\",\n  \t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" + \"exceptions in IE reasonable. Stored as query-strings.\"\n  \t});\n\n  \tQUnit.begin(function () {\n  \t\tvar i,\n  \t\t    option,\n  \t\t    urlConfig = QUnit.config.urlConfig;\n\n  \t\tfor (i = 0; i < urlConfig.length; i++) {\n\n  \t\t\t// Options can be either strings or objects with nonempty \"id\" properties\n  \t\t\toption = QUnit.config.urlConfig[i];\n  \t\t\tif (typeof option !== \"string\") {\n  \t\t\t\toption = option.id;\n  \t\t\t}\n\n  \t\t\tif (QUnit.config[option] === undefined) {\n  \t\t\t\tQUnit.config[option] = urlParams[option];\n  \t\t\t}\n  \t\t}\n  \t});\n\n  \tfunction getUrlParams() {\n  \t\tvar i, param, name, value;\n  \t\tvar urlParams = Object.create(null);\n  \t\tvar params = location.search.slice(1).split(\"&\");\n  \t\tvar length = params.length;\n\n  \t\tfor (i = 0; i < length; i++) {\n  \t\t\tif (params[i]) {\n  \t\t\t\tparam = params[i].split(\"=\");\n  \t\t\t\tname = decodeQueryParam(param[0]);\n\n  \t\t\t\t// Allow just a key to turn on a flag, e.g., test.html?noglobals\n  \t\t\t\tvalue = param.length === 1 || decodeQueryParam(param.slice(1).join(\"=\"));\n  \t\t\t\tif (name in urlParams) {\n  \t\t\t\t\turlParams[name] = [].concat(urlParams[name], value);\n  \t\t\t\t} else {\n  \t\t\t\t\turlParams[name] = value;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\treturn urlParams;\n  \t}\n\n  \tfunction decodeQueryParam(param) {\n  \t\treturn decodeURIComponent(param.replace(/\\+/g, \"%20\"));\n  \t}\n  })();\n\n  var stats = {\n  \tpassedTests: 0,\n  \tfailedTests: 0,\n  \tskippedTests: 0,\n  \ttodoTests: 0\n  };\n\n  // Escape text for attribute or text content.\n  function escapeText(s) {\n  \tif (!s) {\n  \t\treturn \"\";\n  \t}\n  \ts = s + \"\";\n\n  \t// Both single quotes and double quotes (for attributes)\n  \treturn s.replace(/['\"<>&]/g, function (s) {\n  \t\tswitch (s) {\n  \t\t\tcase \"'\":\n  \t\t\t\treturn \"&#039;\";\n  \t\t\tcase \"\\\"\":\n  \t\t\t\treturn \"&quot;\";\n  \t\t\tcase \"<\":\n  \t\t\t\treturn \"&lt;\";\n  \t\t\tcase \">\":\n  \t\t\t\treturn \"&gt;\";\n  \t\t\tcase \"&\":\n  \t\t\t\treturn \"&amp;\";\n  \t\t}\n  \t});\n  }\n\n  (function () {\n\n  \t// Don't load the HTML Reporter on non-browser environments\n  \tif (typeof window === \"undefined\" || !window.document) {\n  \t\treturn;\n  \t}\n\n  \tvar config = QUnit.config,\n  \t    document$$1 = window.document,\n  \t    collapseNext = false,\n  \t    hasOwn = Object.prototype.hasOwnProperty,\n  \t    unfilteredUrl = setUrl({ filter: undefined, module: undefined,\n  \t\tmoduleId: undefined, testId: undefined }),\n  \t    modulesList = [];\n\n  \tfunction addEvent(elem, type, fn) {\n  \t\telem.addEventListener(type, fn, false);\n  \t}\n\n  \tfunction removeEvent(elem, type, fn) {\n  \t\telem.removeEventListener(type, fn, false);\n  \t}\n\n  \tfunction addEvents(elems, type, fn) {\n  \t\tvar i = elems.length;\n  \t\twhile (i--) {\n  \t\t\taddEvent(elems[i], type, fn);\n  \t\t}\n  \t}\n\n  \tfunction hasClass(elem, name) {\n  \t\treturn (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") >= 0;\n  \t}\n\n  \tfunction addClass(elem, name) {\n  \t\tif (!hasClass(elem, name)) {\n  \t\t\telem.className += (elem.className ? \" \" : \"\") + name;\n  \t\t}\n  \t}\n\n  \tfunction toggleClass(elem, name, force) {\n  \t\tif (force || typeof force === \"undefined\" && !hasClass(elem, name)) {\n  \t\t\taddClass(elem, name);\n  \t\t} else {\n  \t\t\tremoveClass(elem, name);\n  \t\t}\n  \t}\n\n  \tfunction removeClass(elem, name) {\n  \t\tvar set = \" \" + elem.className + \" \";\n\n  \t\t// Class name may appear multiple times\n  \t\twhile (set.indexOf(\" \" + name + \" \") >= 0) {\n  \t\t\tset = set.replace(\" \" + name + \" \", \" \");\n  \t\t}\n\n  \t\t// Trim for prettiness\n  \t\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace(/^\\s+|\\s+$/g, \"\");\n  \t}\n\n  \tfunction id(name) {\n  \t\treturn document$$1.getElementById && document$$1.getElementById(name);\n  \t}\n\n  \tfunction abortTests() {\n  \t\tvar abortButton = id(\"qunit-abort-tests-button\");\n  \t\tif (abortButton) {\n  \t\t\tabortButton.disabled = true;\n  \t\t\tabortButton.innerHTML = \"Aborting...\";\n  \t\t}\n  \t\tQUnit.config.queue.length = 0;\n  \t\treturn false;\n  \t}\n\n  \tfunction interceptNavigation(ev) {\n  \t\tapplyUrlParams();\n\n  \t\tif (ev && ev.preventDefault) {\n  \t\t\tev.preventDefault();\n  \t\t}\n\n  \t\treturn false;\n  \t}\n\n  \tfunction getUrlConfigHtml() {\n  \t\tvar i,\n  \t\t    j,\n  \t\t    val,\n  \t\t    escaped,\n  \t\t    escapedTooltip,\n  \t\t    selection = false,\n  \t\t    urlConfig = config.urlConfig,\n  \t\t    urlConfigHtml = \"\";\n\n  \t\tfor (i = 0; i < urlConfig.length; i++) {\n\n  \t\t\t// Options can be either strings or objects with nonempty \"id\" properties\n  \t\t\tval = config.urlConfig[i];\n  \t\t\tif (typeof val === \"string\") {\n  \t\t\t\tval = {\n  \t\t\t\t\tid: val,\n  \t\t\t\t\tlabel: val\n  \t\t\t\t};\n  \t\t\t}\n\n  \t\t\tescaped = escapeText(val.id);\n  \t\t\tescapedTooltip = escapeText(val.tooltip);\n\n  \t\t\tif (!val.value || typeof val.value === \"string\") {\n  \t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped + \"' title='\" + escapedTooltip + \"'><input id='qunit-urlconfig-\" + escaped + \"' name='\" + escaped + \"' type='checkbox'\" + (val.value ? \" value='\" + escapeText(val.value) + \"'\" : \"\") + (config[val.id] ? \" checked='checked'\" : \"\") + \" title='\" + escapedTooltip + \"' />\" + escapeText(val.label) + \"</label>\";\n  \t\t\t} else {\n  \t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped + \"' title='\" + escapedTooltip + \"'>\" + val.label + \": </label><select id='qunit-urlconfig-\" + escaped + \"' name='\" + escaped + \"' title='\" + escapedTooltip + \"'><option></option>\";\n\n  \t\t\t\tif (QUnit.is(\"array\", val.value)) {\n  \t\t\t\t\tfor (j = 0; j < val.value.length; j++) {\n  \t\t\t\t\t\tescaped = escapeText(val.value[j]);\n  \t\t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"'\" + (config[val.id] === val.value[j] ? (selection = true) && \" selected='selected'\" : \"\") + \">\" + escaped + \"</option>\";\n  \t\t\t\t\t}\n  \t\t\t\t} else {\n  \t\t\t\t\tfor (j in val.value) {\n  \t\t\t\t\t\tif (hasOwn.call(val.value, j)) {\n  \t\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText(j) + \"'\" + (config[val.id] === j ? (selection = true) && \" selected='selected'\" : \"\") + \">\" + escapeText(val.value[j]) + \"</option>\";\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\tif (config[val.id] && !selection) {\n  \t\t\t\t\tescaped = escapeText(config[val.id]);\n  \t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"' selected='selected' disabled='disabled'>\" + escaped + \"</option>\";\n  \t\t\t\t}\n  \t\t\t\turlConfigHtml += \"</select>\";\n  \t\t\t}\n  \t\t}\n\n  \t\treturn urlConfigHtml;\n  \t}\n\n  \t// Handle \"click\" events on toolbar checkboxes and \"change\" for select menus.\n  \t// Updates the URL with the new state of `config.urlConfig` values.\n  \tfunction toolbarChanged() {\n  \t\tvar updatedUrl,\n  \t\t    value,\n  \t\t    tests,\n  \t\t    field = this,\n  \t\t    params = {};\n\n  \t\t// Detect if field is a select menu or a checkbox\n  \t\tif (\"selectedIndex\" in field) {\n  \t\t\tvalue = field.options[field.selectedIndex].value || undefined;\n  \t\t} else {\n  \t\t\tvalue = field.checked ? field.defaultValue || true : undefined;\n  \t\t}\n\n  \t\tparams[field.name] = value;\n  \t\tupdatedUrl = setUrl(params);\n\n  \t\t// Check if we can apply the change without a page refresh\n  \t\tif (\"hidepassed\" === field.name && \"replaceState\" in window.history) {\n  \t\t\tQUnit.urlParams[field.name] = value;\n  \t\t\tconfig[field.name] = value || false;\n  \t\t\ttests = id(\"qunit-tests\");\n  \t\t\tif (tests) {\n  \t\t\t\ttoggleClass(tests, \"hidepass\", value || false);\n  \t\t\t}\n  \t\t\twindow.history.replaceState(null, \"\", updatedUrl);\n  \t\t} else {\n  \t\t\twindow.location = updatedUrl;\n  \t\t}\n  \t}\n\n  \tfunction setUrl(params) {\n  \t\tvar key,\n  \t\t    arrValue,\n  \t\t    i,\n  \t\t    querystring = \"?\",\n  \t\t    location = window.location;\n\n  \t\tparams = QUnit.extend(QUnit.extend({}, QUnit.urlParams), params);\n\n  \t\tfor (key in params) {\n\n  \t\t\t// Skip inherited or undefined properties\n  \t\t\tif (hasOwn.call(params, key) && params[key] !== undefined) {\n\n  \t\t\t\t// Output a parameter for each value of this key (but usually just one)\n  \t\t\t\tarrValue = [].concat(params[key]);\n  \t\t\t\tfor (i = 0; i < arrValue.length; i++) {\n  \t\t\t\t\tquerystring += encodeURIComponent(key);\n  \t\t\t\t\tif (arrValue[i] !== true) {\n  \t\t\t\t\t\tquerystring += \"=\" + encodeURIComponent(arrValue[i]);\n  \t\t\t\t\t}\n  \t\t\t\t\tquerystring += \"&\";\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t\treturn location.protocol + \"//\" + location.host + location.pathname + querystring.slice(0, -1);\n  \t}\n\n  \tfunction applyUrlParams() {\n  \t\tvar i,\n  \t\t    selectedModules = [],\n  \t\t    modulesList = id(\"qunit-modulefilter-dropdown-list\").getElementsByTagName(\"input\"),\n  \t\t    filter = id(\"qunit-filter-input\").value;\n\n  \t\tfor (i = 0; i < modulesList.length; i++) {\n  \t\t\tif (modulesList[i].checked) {\n  \t\t\t\tselectedModules.push(modulesList[i].value);\n  \t\t\t}\n  \t\t}\n\n  \t\twindow.location = setUrl({\n  \t\t\tfilter: filter === \"\" ? undefined : filter,\n  \t\t\tmoduleId: selectedModules.length === 0 ? undefined : selectedModules,\n\n  \t\t\t// Remove module and testId filter\n  \t\t\tmodule: undefined,\n  \t\t\ttestId: undefined\n  \t\t});\n  \t}\n\n  \tfunction toolbarUrlConfigContainer() {\n  \t\tvar urlConfigContainer = document$$1.createElement(\"span\");\n\n  \t\turlConfigContainer.innerHTML = getUrlConfigHtml();\n  \t\taddClass(urlConfigContainer, \"qunit-url-config\");\n\n  \t\taddEvents(urlConfigContainer.getElementsByTagName(\"input\"), \"change\", toolbarChanged);\n  \t\taddEvents(urlConfigContainer.getElementsByTagName(\"select\"), \"change\", toolbarChanged);\n\n  \t\treturn urlConfigContainer;\n  \t}\n\n  \tfunction abortTestsButton() {\n  \t\tvar button = document$$1.createElement(\"button\");\n  \t\tbutton.id = \"qunit-abort-tests-button\";\n  \t\tbutton.innerHTML = \"Abort\";\n  \t\taddEvent(button, \"click\", abortTests);\n  \t\treturn button;\n  \t}\n\n  \tfunction toolbarLooseFilter() {\n  \t\tvar filter = document$$1.createElement(\"form\"),\n  \t\t    label = document$$1.createElement(\"label\"),\n  \t\t    input = document$$1.createElement(\"input\"),\n  \t\t    button = document$$1.createElement(\"button\");\n\n  \t\taddClass(filter, \"qunit-filter\");\n\n  \t\tlabel.innerHTML = \"Filter: \";\n\n  \t\tinput.type = \"text\";\n  \t\tinput.value = config.filter || \"\";\n  \t\tinput.name = \"filter\";\n  \t\tinput.id = \"qunit-filter-input\";\n\n  \t\tbutton.innerHTML = \"Go\";\n\n  \t\tlabel.appendChild(input);\n\n  \t\tfilter.appendChild(label);\n  \t\tfilter.appendChild(document$$1.createTextNode(\" \"));\n  \t\tfilter.appendChild(button);\n  \t\taddEvent(filter, \"submit\", interceptNavigation);\n\n  \t\treturn filter;\n  \t}\n\n  \tfunction moduleListHtml() {\n  \t\tvar i,\n  \t\t    checked,\n  \t\t    html = \"\";\n\n  \t\tfor (i = 0; i < config.modules.length; i++) {\n  \t\t\tif (config.modules[i].name !== \"\") {\n  \t\t\t\tchecked = config.moduleId.indexOf(config.modules[i].moduleId) > -1;\n  \t\t\t\thtml += \"<li><label class='clickable\" + (checked ? \" checked\" : \"\") + \"'><input type='checkbox' \" + \"value='\" + config.modules[i].moduleId + \"'\" + (checked ? \" checked='checked'\" : \"\") + \" />\" + escapeText(config.modules[i].name) + \"</label></li>\";\n  \t\t\t}\n  \t\t}\n\n  \t\treturn html;\n  \t}\n\n  \tfunction toolbarModuleFilter() {\n  \t\tvar allCheckbox,\n  \t\t    commit,\n  \t\t    reset,\n  \t\t    moduleFilter = document$$1.createElement(\"form\"),\n  \t\t    label = document$$1.createElement(\"label\"),\n  \t\t    moduleSearch = document$$1.createElement(\"input\"),\n  \t\t    dropDown = document$$1.createElement(\"div\"),\n  \t\t    actions = document$$1.createElement(\"span\"),\n  \t\t    dropDownList = document$$1.createElement(\"ul\"),\n  \t\t    dirty = false;\n\n  \t\tmoduleSearch.id = \"qunit-modulefilter-search\";\n  \t\taddEvent(moduleSearch, \"input\", searchInput);\n  \t\taddEvent(moduleSearch, \"input\", searchFocus);\n  \t\taddEvent(moduleSearch, \"focus\", searchFocus);\n  \t\taddEvent(moduleSearch, \"click\", searchFocus);\n\n  \t\tlabel.id = \"qunit-modulefilter-search-container\";\n  \t\tlabel.innerHTML = \"Module: \";\n  \t\tlabel.appendChild(moduleSearch);\n\n  \t\tactions.id = \"qunit-modulefilter-actions\";\n  \t\tactions.innerHTML = \"<button style='display:none'>Apply</button>\" + \"<button type='reset' style='display:none'>Reset</button>\" + \"<label class='clickable\" + (config.moduleId.length ? \"\" : \" checked\") + \"'><input type='checkbox'\" + (config.moduleId.length ? \"\" : \" checked='checked'\") + \">All modules</label>\";\n  \t\tallCheckbox = actions.lastChild.firstChild;\n  \t\tcommit = actions.firstChild;\n  \t\treset = commit.nextSibling;\n  \t\taddEvent(commit, \"click\", applyUrlParams);\n\n  \t\tdropDownList.id = \"qunit-modulefilter-dropdown-list\";\n  \t\tdropDownList.innerHTML = moduleListHtml();\n\n  \t\tdropDown.id = \"qunit-modulefilter-dropdown\";\n  \t\tdropDown.style.display = \"none\";\n  \t\tdropDown.appendChild(actions);\n  \t\tdropDown.appendChild(dropDownList);\n  \t\taddEvent(dropDown, \"change\", selectionChange);\n  \t\tselectionChange();\n\n  \t\tmoduleFilter.id = \"qunit-modulefilter\";\n  \t\tmoduleFilter.appendChild(label);\n  \t\tmoduleFilter.appendChild(dropDown);\n  \t\taddEvent(moduleFilter, \"submit\", interceptNavigation);\n  \t\taddEvent(moduleFilter, \"reset\", function () {\n\n  \t\t\t// Let the reset happen, then update styles\n  \t\t\twindow.setTimeout(selectionChange);\n  \t\t});\n\n  \t\t// Enables show/hide for the dropdown\n  \t\tfunction searchFocus() {\n  \t\t\tif (dropDown.style.display !== \"none\") {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tdropDown.style.display = \"block\";\n  \t\t\taddEvent(document$$1, \"click\", hideHandler);\n  \t\t\taddEvent(document$$1, \"keydown\", hideHandler);\n\n  \t\t\t// Hide on Escape keydown or outside-container click\n  \t\t\tfunction hideHandler(e) {\n  \t\t\t\tvar inContainer = moduleFilter.contains(e.target);\n\n  \t\t\t\tif (e.keyCode === 27 || !inContainer) {\n  \t\t\t\t\tif (e.keyCode === 27 && inContainer) {\n  \t\t\t\t\t\tmoduleSearch.focus();\n  \t\t\t\t\t}\n  \t\t\t\t\tdropDown.style.display = \"none\";\n  \t\t\t\t\tremoveEvent(document$$1, \"click\", hideHandler);\n  \t\t\t\t\tremoveEvent(document$$1, \"keydown\", hideHandler);\n  \t\t\t\t\tmoduleSearch.value = \"\";\n  \t\t\t\t\tsearchInput();\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\t// Processes module search box input\n  \t\tfunction searchInput() {\n  \t\t\tvar i,\n  \t\t\t    item,\n  \t\t\t    searchText = moduleSearch.value.toLowerCase(),\n  \t\t\t    listItems = dropDownList.children;\n\n  \t\t\tfor (i = 0; i < listItems.length; i++) {\n  \t\t\t\titem = listItems[i];\n  \t\t\t\tif (!searchText || item.textContent.toLowerCase().indexOf(searchText) > -1) {\n  \t\t\t\t\titem.style.display = \"\";\n  \t\t\t\t} else {\n  \t\t\t\t\titem.style.display = \"none\";\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\t// Processes selection changes\n  \t\tfunction selectionChange(evt) {\n  \t\t\tvar i,\n  \t\t\t    item,\n  \t\t\t    checkbox = evt && evt.target || allCheckbox,\n  \t\t\t    modulesList = dropDownList.getElementsByTagName(\"input\"),\n  \t\t\t    selectedNames = [];\n\n  \t\t\ttoggleClass(checkbox.parentNode, \"checked\", checkbox.checked);\n\n  \t\t\tdirty = false;\n  \t\t\tif (checkbox.checked && checkbox !== allCheckbox) {\n  \t\t\t\tallCheckbox.checked = false;\n  \t\t\t\tremoveClass(allCheckbox.parentNode, \"checked\");\n  \t\t\t}\n  \t\t\tfor (i = 0; i < modulesList.length; i++) {\n  \t\t\t\titem = modulesList[i];\n  \t\t\t\tif (!evt) {\n  \t\t\t\t\ttoggleClass(item.parentNode, \"checked\", item.checked);\n  \t\t\t\t} else if (checkbox === allCheckbox && checkbox.checked) {\n  \t\t\t\t\titem.checked = false;\n  \t\t\t\t\tremoveClass(item.parentNode, \"checked\");\n  \t\t\t\t}\n  \t\t\t\tdirty = dirty || item.checked !== item.defaultChecked;\n  \t\t\t\tif (item.checked) {\n  \t\t\t\t\tselectedNames.push(item.parentNode.textContent);\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tcommit.style.display = reset.style.display = dirty ? \"\" : \"none\";\n  \t\t\tmoduleSearch.placeholder = selectedNames.join(\", \") || allCheckbox.parentNode.textContent;\n  \t\t\tmoduleSearch.title = \"Type to filter list. Current selection:\\n\" + (selectedNames.join(\"\\n\") || allCheckbox.parentNode.textContent);\n  \t\t}\n\n  \t\treturn moduleFilter;\n  \t}\n\n  \tfunction appendToolbar() {\n  \t\tvar toolbar = id(\"qunit-testrunner-toolbar\");\n\n  \t\tif (toolbar) {\n  \t\t\ttoolbar.appendChild(toolbarUrlConfigContainer());\n  \t\t\ttoolbar.appendChild(toolbarModuleFilter());\n  \t\t\ttoolbar.appendChild(toolbarLooseFilter());\n  \t\t\ttoolbar.appendChild(document$$1.createElement(\"div\")).className = \"clearfix\";\n  \t\t}\n  \t}\n\n  \tfunction appendHeader() {\n  \t\tvar header = id(\"qunit-header\");\n\n  \t\tif (header) {\n  \t\t\theader.innerHTML = \"<a href='\" + escapeText(unfilteredUrl) + \"'>\" + header.innerHTML + \"</a> \";\n  \t\t}\n  \t}\n\n  \tfunction appendBanner() {\n  \t\tvar banner = id(\"qunit-banner\");\n\n  \t\tif (banner) {\n  \t\t\tbanner.className = \"\";\n  \t\t}\n  \t}\n\n  \tfunction appendTestResults() {\n  \t\tvar tests = id(\"qunit-tests\"),\n  \t\t    result = id(\"qunit-testresult\"),\n  \t\t    controls;\n\n  \t\tif (result) {\n  \t\t\tresult.parentNode.removeChild(result);\n  \t\t}\n\n  \t\tif (tests) {\n  \t\t\ttests.innerHTML = \"\";\n  \t\t\tresult = document$$1.createElement(\"p\");\n  \t\t\tresult.id = \"qunit-testresult\";\n  \t\t\tresult.className = \"result\";\n  \t\t\ttests.parentNode.insertBefore(result, tests);\n  \t\t\tresult.innerHTML = \"<div id=\\\"qunit-testresult-display\\\">Running...<br />&#160;</div>\" + \"<div id=\\\"qunit-testresult-controls\\\"></div>\" + \"<div class=\\\"clearfix\\\"></div>\";\n  \t\t\tcontrols = id(\"qunit-testresult-controls\");\n  \t\t}\n\n  \t\tif (controls) {\n  \t\t\tcontrols.appendChild(abortTestsButton());\n  \t\t}\n  \t}\n\n  \tfunction appendFilteredTest() {\n  \t\tvar testId = QUnit.config.testId;\n  \t\tif (!testId || testId.length <= 0) {\n  \t\t\treturn \"\";\n  \t\t}\n  \t\treturn \"<div id='qunit-filteredTest'>Rerunning selected tests: \" + escapeText(testId.join(\", \")) + \" <a id='qunit-clearFilter' href='\" + escapeText(unfilteredUrl) + \"'>Run all tests</a></div>\";\n  \t}\n\n  \tfunction appendUserAgent() {\n  \t\tvar userAgent = id(\"qunit-userAgent\");\n\n  \t\tif (userAgent) {\n  \t\t\tuserAgent.innerHTML = \"\";\n  \t\t\tuserAgent.appendChild(document$$1.createTextNode(\"QUnit \" + QUnit.version + \"; \" + navigator.userAgent));\n  \t\t}\n  \t}\n\n  \tfunction appendInterface() {\n  \t\tvar qunit = id(\"qunit\");\n\n  \t\tif (qunit) {\n  \t\t\tqunit.innerHTML = \"<h1 id='qunit-header'>\" + escapeText(document$$1.title) + \"</h1>\" + \"<h2 id='qunit-banner'></h2>\" + \"<div id='qunit-testrunner-toolbar'></div>\" + appendFilteredTest() + \"<h2 id='qunit-userAgent'></h2>\" + \"<ol id='qunit-tests'></ol>\";\n  \t\t}\n\n  \t\tappendHeader();\n  \t\tappendBanner();\n  \t\tappendTestResults();\n  \t\tappendUserAgent();\n  \t\tappendToolbar();\n  \t}\n\n  \tfunction appendTestsList(modules) {\n  \t\tvar i, l, x, z, test, moduleObj;\n\n  \t\tfor (i = 0, l = modules.length; i < l; i++) {\n  \t\t\tmoduleObj = modules[i];\n\n  \t\t\tfor (x = 0, z = moduleObj.tests.length; x < z; x++) {\n  \t\t\t\ttest = moduleObj.tests[x];\n\n  \t\t\t\tappendTest(test.name, test.testId, moduleObj.name);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tfunction appendTest(name, testId, moduleName) {\n  \t\tvar title,\n  \t\t    rerunTrigger,\n  \t\t    testBlock,\n  \t\t    assertList,\n  \t\t    tests = id(\"qunit-tests\");\n\n  \t\tif (!tests) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\ttitle = document$$1.createElement(\"strong\");\n  \t\ttitle.innerHTML = getNameHtml(name, moduleName);\n\n  \t\trerunTrigger = document$$1.createElement(\"a\");\n  \t\trerunTrigger.innerHTML = \"Rerun\";\n  \t\trerunTrigger.href = setUrl({ testId: testId });\n\n  \t\ttestBlock = document$$1.createElement(\"li\");\n  \t\ttestBlock.appendChild(title);\n  \t\ttestBlock.appendChild(rerunTrigger);\n  \t\ttestBlock.id = \"qunit-test-output-\" + testId;\n\n  \t\tassertList = document$$1.createElement(\"ol\");\n  \t\tassertList.className = \"qunit-assert-list\";\n\n  \t\ttestBlock.appendChild(assertList);\n\n  \t\ttests.appendChild(testBlock);\n  \t}\n\n  \t// HTML Reporter initialization and load\n  \tQUnit.begin(function (details) {\n  \t\tvar i, moduleObj, tests;\n\n  \t\t// Sort modules by name for the picker\n  \t\tfor (i = 0; i < details.modules.length; i++) {\n  \t\t\tmoduleObj = details.modules[i];\n  \t\t\tif (moduleObj.name) {\n  \t\t\t\tmodulesList.push(moduleObj.name);\n  \t\t\t}\n  \t\t}\n  \t\tmodulesList.sort(function (a, b) {\n  \t\t\treturn a.localeCompare(b);\n  \t\t});\n\n  \t\t// Initialize QUnit elements\n  \t\tappendInterface();\n  \t\tappendTestsList(details.modules);\n  \t\ttests = id(\"qunit-tests\");\n  \t\tif (tests && config.hidepassed) {\n  \t\t\taddClass(tests, \"hidepass\");\n  \t\t}\n  \t});\n\n  \tQUnit.done(function (details) {\n  \t\tvar banner = id(\"qunit-banner\"),\n  \t\t    tests = id(\"qunit-tests\"),\n  \t\t    abortButton = id(\"qunit-abort-tests-button\"),\n  \t\t    totalTests = stats.passedTests + stats.skippedTests + stats.todoTests + stats.failedTests,\n  \t\t    html = [totalTests, \" tests completed in \", details.runtime, \" milliseconds, with \", stats.failedTests, \" failed, \", stats.skippedTests, \" skipped, and \", stats.todoTests, \" todo.<br />\", \"<span class='passed'>\", details.passed, \"</span> assertions of <span class='total'>\", details.total, \"</span> passed, <span class='failed'>\", details.failed, \"</span> failed.\"].join(\"\"),\n  \t\t    test,\n  \t\t    assertLi,\n  \t\t    assertList;\n\n  \t\t// Update remaing tests to aborted\n  \t\tif (abortButton && abortButton.disabled) {\n  \t\t\thtml = \"Tests aborted after \" + details.runtime + \" milliseconds.\";\n\n  \t\t\tfor (var i = 0; i < tests.children.length; i++) {\n  \t\t\t\ttest = tests.children[i];\n  \t\t\t\tif (test.className === \"\" || test.className === \"running\") {\n  \t\t\t\t\ttest.className = \"aborted\";\n  \t\t\t\t\tassertList = test.getElementsByTagName(\"ol\")[0];\n  \t\t\t\t\tassertLi = document$$1.createElement(\"li\");\n  \t\t\t\t\tassertLi.className = \"fail\";\n  \t\t\t\t\tassertLi.innerHTML = \"Test aborted.\";\n  \t\t\t\t\tassertList.appendChild(assertLi);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tif (banner && (!abortButton || abortButton.disabled === false)) {\n  \t\t\tbanner.className = stats.failedTests ? \"qunit-fail\" : \"qunit-pass\";\n  \t\t}\n\n  \t\tif (abortButton) {\n  \t\t\tabortButton.parentNode.removeChild(abortButton);\n  \t\t}\n\n  \t\tif (tests) {\n  \t\t\tid(\"qunit-testresult-display\").innerHTML = html;\n  \t\t}\n\n  \t\tif (config.altertitle && document$$1.title) {\n\n  \t\t\t// Show ✖ for good, ✔ for bad suite result in title\n  \t\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n  \t\t\tdocument$$1.title = [stats.failedTests ? \"\\u2716\" : \"\\u2714\", document$$1.title.replace(/^[\\u2714\\u2716] /i, \"\")].join(\" \");\n  \t\t}\n\n  \t\t// Scroll back to top to show results\n  \t\tif (config.scrolltop && window.scrollTo) {\n  \t\t\twindow.scrollTo(0, 0);\n  \t\t}\n  \t});\n\n  \tfunction getNameHtml(name, module) {\n  \t\tvar nameHtml = \"\";\n\n  \t\tif (module) {\n  \t\t\tnameHtml = \"<span class='module-name'>\" + escapeText(module) + \"</span>: \";\n  \t\t}\n\n  \t\tnameHtml += \"<span class='test-name'>\" + escapeText(name) + \"</span>\";\n\n  \t\treturn nameHtml;\n  \t}\n\n  \tQUnit.testStart(function (details) {\n  \t\tvar running, testBlock, bad;\n\n  \t\ttestBlock = id(\"qunit-test-output-\" + details.testId);\n  \t\tif (testBlock) {\n  \t\t\ttestBlock.className = \"running\";\n  \t\t} else {\n\n  \t\t\t// Report later registered tests\n  \t\t\tappendTest(details.name, details.testId, details.module);\n  \t\t}\n\n  \t\trunning = id(\"qunit-testresult-display\");\n  \t\tif (running) {\n  \t\t\tbad = QUnit.config.reorder && details.previousFailure;\n\n  \t\t\trunning.innerHTML = (bad ? \"Rerunning previously failed test: <br />\" : \"Running: <br />\") + getNameHtml(details.name, details.module);\n  \t\t}\n  \t});\n\n  \tfunction stripHtml(string) {\n\n  \t\t// Strip tags, html entity and whitespaces\n  \t\treturn string.replace(/<\\/?[^>]+(>|$)/g, \"\").replace(/\\&quot;/g, \"\").replace(/\\s+/g, \"\");\n  \t}\n\n  \tQUnit.log(function (details) {\n  \t\tvar assertList,\n  \t\t    assertLi,\n  \t\t    message,\n  \t\t    expected,\n  \t\t    actual,\n  \t\t    diff,\n  \t\t    showDiff = false,\n  \t\t    testItem = id(\"qunit-test-output-\" + details.testId);\n\n  \t\tif (!testItem) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tmessage = escapeText(details.message) || (details.result ? \"okay\" : \"failed\");\n  \t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n  \t\tmessage += \"<span class='runtime'>@ \" + details.runtime + \" ms</span>\";\n\n  \t\t// The pushFailure doesn't provide details.expected\n  \t\t// when it calls, it's implicit to also not show expected and diff stuff\n  \t\t// Also, we need to check details.expected existence, as it can exist and be undefined\n  \t\tif (!details.result && hasOwn.call(details, \"expected\")) {\n  \t\t\tif (details.negative) {\n  \t\t\t\texpected = \"NOT \" + QUnit.dump.parse(details.expected);\n  \t\t\t} else {\n  \t\t\t\texpected = QUnit.dump.parse(details.expected);\n  \t\t\t}\n\n  \t\t\tactual = QUnit.dump.parse(details.actual);\n  \t\t\tmessage += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + escapeText(expected) + \"</pre></td></tr>\";\n\n  \t\t\tif (actual !== expected) {\n\n  \t\t\t\tmessage += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText(actual) + \"</pre></td></tr>\";\n\n  \t\t\t\t// Don't show diff if actual or expected are booleans\n  \t\t\t\tif (!/^(true|false)$/.test(actual) && !/^(true|false)$/.test(expected)) {\n  \t\t\t\t\tdiff = QUnit.diff(expected, actual);\n  \t\t\t\t\tshowDiff = stripHtml(diff).length !== stripHtml(expected).length + stripHtml(actual).length;\n  \t\t\t\t}\n\n  \t\t\t\t// Don't show diff if expected and actual are totally different\n  \t\t\t\tif (showDiff) {\n  \t\t\t\t\tmessage += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + diff + \"</pre></td></tr>\";\n  \t\t\t\t}\n  \t\t\t} else if (expected.indexOf(\"[object Array]\") !== -1 || expected.indexOf(\"[object Object]\") !== -1) {\n  \t\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" + \"Diff suppressed as the depth of object is more than current max depth (\" + QUnit.config.maxDepth + \").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to \" + \" run with a higher max depth or <a href='\" + escapeText(setUrl({ maxDepth: -1 })) + \"'>\" + \"Rerun</a> without max depth.</p></td></tr>\";\n  \t\t\t} else {\n  \t\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" + \"Diff suppressed as the expected and actual results have an equivalent\" + \" serialization</td></tr>\";\n  \t\t\t}\n\n  \t\t\tif (details.source) {\n  \t\t\t\tmessage += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText(details.source) + \"</pre></td></tr>\";\n  \t\t\t}\n\n  \t\t\tmessage += \"</table>\";\n\n  \t\t\t// This occurs when pushFailure is set and we have an extracted stack trace\n  \t\t} else if (!details.result && details.source) {\n  \t\t\tmessage += \"<table>\" + \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText(details.source) + \"</pre></td></tr>\" + \"</table>\";\n  \t\t}\n\n  \t\tassertList = testItem.getElementsByTagName(\"ol\")[0];\n\n  \t\tassertLi = document$$1.createElement(\"li\");\n  \t\tassertLi.className = details.result ? \"pass\" : \"fail\";\n  \t\tassertLi.innerHTML = message;\n  \t\tassertList.appendChild(assertLi);\n  \t});\n\n  \tQUnit.testDone(function (details) {\n  \t\tvar testTitle,\n  \t\t    time,\n  \t\t    testItem,\n  \t\t    assertList,\n  \t\t    good,\n  \t\t    bad,\n  \t\t    testCounts,\n  \t\t    skipped,\n  \t\t    sourceName,\n  \t\t    tests = id(\"qunit-tests\");\n\n  \t\tif (!tests) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\ttestItem = id(\"qunit-test-output-\" + details.testId);\n\n  \t\tassertList = testItem.getElementsByTagName(\"ol\")[0];\n\n  \t\tgood = details.passed;\n  \t\tbad = details.failed;\n\n  \t\t// This test passed if it has no unexpected failed assertions\n  \t\tvar testPassed = details.failed > 0 ? details.todo : !details.todo;\n\n  \t\tif (testPassed) {\n\n  \t\t\t// Collapse the passing tests\n  \t\t\taddClass(assertList, \"qunit-collapsed\");\n  \t\t} else if (config.collapse) {\n  \t\t\tif (!collapseNext) {\n\n  \t\t\t\t// Skip collapsing the first failing test\n  \t\t\t\tcollapseNext = true;\n  \t\t\t} else {\n\n  \t\t\t\t// Collapse remaining tests\n  \t\t\t\taddClass(assertList, \"qunit-collapsed\");\n  \t\t\t}\n  \t\t}\n\n  \t\t// The testItem.firstChild is the test name\n  \t\ttestTitle = testItem.firstChild;\n\n  \t\ttestCounts = bad ? \"<b class='failed'>\" + bad + \"</b>, \" + \"<b class='passed'>\" + good + \"</b>, \" : \"\";\n\n  \t\ttestTitle.innerHTML += \" <b class='counts'>(\" + testCounts + details.assertions.length + \")</b>\";\n\n  \t\tif (details.skipped) {\n  \t\t\tstats.skippedTests++;\n\n  \t\t\ttestItem.className = \"skipped\";\n  \t\t\tskipped = document$$1.createElement(\"em\");\n  \t\t\tskipped.className = \"qunit-skipped-label\";\n  \t\t\tskipped.innerHTML = \"skipped\";\n  \t\t\ttestItem.insertBefore(skipped, testTitle);\n  \t\t} else {\n  \t\t\taddEvent(testTitle, \"click\", function () {\n  \t\t\t\ttoggleClass(assertList, \"qunit-collapsed\");\n  \t\t\t});\n\n  \t\t\ttestItem.className = testPassed ? \"pass\" : \"fail\";\n\n  \t\t\tif (details.todo) {\n  \t\t\t\tvar todoLabel = document$$1.createElement(\"em\");\n  \t\t\t\ttodoLabel.className = \"qunit-todo-label\";\n  \t\t\t\ttodoLabel.innerHTML = \"todo\";\n  \t\t\t\ttestItem.className += \" todo\";\n  \t\t\t\ttestItem.insertBefore(todoLabel, testTitle);\n  \t\t\t}\n\n  \t\t\ttime = document$$1.createElement(\"span\");\n  \t\t\ttime.className = \"runtime\";\n  \t\t\ttime.innerHTML = details.runtime + \" ms\";\n  \t\t\ttestItem.insertBefore(time, assertList);\n\n  \t\t\tif (!testPassed) {\n  \t\t\t\tstats.failedTests++;\n  \t\t\t} else if (details.todo) {\n  \t\t\t\tstats.todoTests++;\n  \t\t\t} else {\n  \t\t\t\tstats.passedTests++;\n  \t\t\t}\n  \t\t}\n\n  \t\t// Show the source of the test when showing assertions\n  \t\tif (details.source) {\n  \t\t\tsourceName = document$$1.createElement(\"p\");\n  \t\t\tsourceName.innerHTML = \"<strong>Source: </strong>\" + details.source;\n  \t\t\taddClass(sourceName, \"qunit-source\");\n  \t\t\tif (testPassed) {\n  \t\t\t\taddClass(sourceName, \"qunit-collapsed\");\n  \t\t\t}\n  \t\t\taddEvent(testTitle, \"click\", function () {\n  \t\t\t\ttoggleClass(sourceName, \"qunit-collapsed\");\n  \t\t\t});\n  \t\t\ttestItem.appendChild(sourceName);\n  \t\t}\n  \t});\n\n  \t// Avoid readyState issue with phantomjs\n  \t// Ref: #818\n  \tvar notPhantom = function (p) {\n  \t\treturn !(p && p.version && p.version.major > 0);\n  \t}(window.phantom);\n\n  \tif (notPhantom && document$$1.readyState === \"complete\") {\n  \t\tQUnit.load();\n  \t} else {\n  \t\taddEvent(window, \"load\", QUnit.load);\n  \t}\n\n  \t// Wrap window.onerror. We will call the original window.onerror to see if\n  \t// the existing handler fully handles the error; if not, we will call the\n  \t// QUnit.onError function.\n  \tvar originalWindowOnError = window.onerror;\n\n  \t// Cover uncaught exceptions\n  \t// Returning true will suppress the default browser handler,\n  \t// returning false will let it run.\n  \twindow.onerror = function (message, fileName, lineNumber) {\n  \t\tvar ret = false;\n  \t\tif (originalWindowOnError) {\n  \t\t\tfor (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n  \t\t\t\targs[_key - 3] = arguments[_key];\n  \t\t\t}\n\n  \t\t\tret = originalWindowOnError.call.apply(originalWindowOnError, [this, message, fileName, lineNumber].concat(args));\n  \t\t}\n\n  \t\t// Treat return value as window.onerror itself does,\n  \t\t// Only do our handling if not suppressed.\n  \t\tif (ret !== true) {\n  \t\t\tvar error = {\n  \t\t\t\tmessage: message,\n  \t\t\t\tfileName: fileName,\n  \t\t\t\tlineNumber: lineNumber\n  \t\t\t};\n\n  \t\t\tret = QUnit.onError(error);\n  \t\t}\n\n  \t\treturn ret;\n  \t};\n  })();\n\n  /*\n   * This file is a modified version of google-diff-match-patch's JavaScript implementation\n   * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),\n   * modifications are licensed as more fully set forth in LICENSE.txt.\n   *\n   * The original source of google-diff-match-patch is attributable and licensed as follows:\n   *\n   * Copyright 2006 Google Inc.\n   * https://code.google.com/p/google-diff-match-patch/\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   * https://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * More Info:\n   *  https://code.google.com/p/google-diff-match-patch/\n   *\n   * Usage: QUnit.diff(expected, actual)\n   *\n   */\n  QUnit.diff = function () {\n  \tfunction DiffMatchPatch() {}\n\n  \t//  DIFF FUNCTIONS\n\n  \t/**\n    * The data structure representing a diff is an array of tuples:\n    * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n    * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n    */\n  \tvar DIFF_DELETE = -1,\n  \t    DIFF_INSERT = 1,\n  \t    DIFF_EQUAL = 0;\n\n  \t/**\n    * Find the differences between two texts.  Simplifies the problem by stripping\n    * any common prefix or suffix off the texts before diffing.\n    * @param {string} text1 Old string to be diffed.\n    * @param {string} text2 New string to be diffed.\n    * @param {boolean=} optChecklines Optional speedup flag. If present and false,\n    *     then don't run a line-level diff first to identify the changed areas.\n    *     Defaults to true, which does a faster, slightly less optimal diff.\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n    */\n  \tDiffMatchPatch.prototype.DiffMain = function (text1, text2, optChecklines) {\n  \t\tvar deadline, checklines, commonlength, commonprefix, commonsuffix, diffs;\n\n  \t\t// The diff must be complete in up to 1 second.\n  \t\tdeadline = new Date().getTime() + 1000;\n\n  \t\t// Check for null inputs.\n  \t\tif (text1 === null || text2 === null) {\n  \t\t\tthrow new Error(\"Null input. (DiffMain)\");\n  \t\t}\n\n  \t\t// Check for equality (speedup).\n  \t\tif (text1 === text2) {\n  \t\t\tif (text1) {\n  \t\t\t\treturn [[DIFF_EQUAL, text1]];\n  \t\t\t}\n  \t\t\treturn [];\n  \t\t}\n\n  \t\tif (typeof optChecklines === \"undefined\") {\n  \t\t\toptChecklines = true;\n  \t\t}\n\n  \t\tchecklines = optChecklines;\n\n  \t\t// Trim off common prefix (speedup).\n  \t\tcommonlength = this.diffCommonPrefix(text1, text2);\n  \t\tcommonprefix = text1.substring(0, commonlength);\n  \t\ttext1 = text1.substring(commonlength);\n  \t\ttext2 = text2.substring(commonlength);\n\n  \t\t// Trim off common suffix (speedup).\n  \t\tcommonlength = this.diffCommonSuffix(text1, text2);\n  \t\tcommonsuffix = text1.substring(text1.length - commonlength);\n  \t\ttext1 = text1.substring(0, text1.length - commonlength);\n  \t\ttext2 = text2.substring(0, text2.length - commonlength);\n\n  \t\t// Compute the diff on the middle block.\n  \t\tdiffs = this.diffCompute(text1, text2, checklines, deadline);\n\n  \t\t// Restore the prefix and suffix.\n  \t\tif (commonprefix) {\n  \t\t\tdiffs.unshift([DIFF_EQUAL, commonprefix]);\n  \t\t}\n  \t\tif (commonsuffix) {\n  \t\t\tdiffs.push([DIFF_EQUAL, commonsuffix]);\n  \t\t}\n  \t\tthis.diffCleanupMerge(diffs);\n  \t\treturn diffs;\n  \t};\n\n  \t/**\n    * Reduce the number of edits by eliminating operationally trivial equalities.\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n    */\n  \tDiffMatchPatch.prototype.diffCleanupEfficiency = function (diffs) {\n  \t\tvar changes, equalities, equalitiesLength, lastequality, pointer, preIns, preDel, postIns, postDel;\n  \t\tchanges = false;\n  \t\tequalities = []; // Stack of indices where equalities are found.\n  \t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n  \t\t/** @type {?string} */\n  \t\tlastequality = null;\n\n  \t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  \t\tpointer = 0; // Index of current position.\n\n  \t\t// Is there an insertion operation before the last equality.\n  \t\tpreIns = false;\n\n  \t\t// Is there a deletion operation before the last equality.\n  \t\tpreDel = false;\n\n  \t\t// Is there an insertion operation after the last equality.\n  \t\tpostIns = false;\n\n  \t\t// Is there a deletion operation after the last equality.\n  \t\tpostDel = false;\n  \t\twhile (pointer < diffs.length) {\n\n  \t\t\t// Equality found.\n  \t\t\tif (diffs[pointer][0] === DIFF_EQUAL) {\n  \t\t\t\tif (diffs[pointer][1].length < 4 && (postIns || postDel)) {\n\n  \t\t\t\t\t// Candidate found.\n  \t\t\t\t\tequalities[equalitiesLength++] = pointer;\n  \t\t\t\t\tpreIns = postIns;\n  \t\t\t\t\tpreDel = postDel;\n  \t\t\t\t\tlastequality = diffs[pointer][1];\n  \t\t\t\t} else {\n\n  \t\t\t\t\t// Not a candidate, and can never become one.\n  \t\t\t\t\tequalitiesLength = 0;\n  \t\t\t\t\tlastequality = null;\n  \t\t\t\t}\n  \t\t\t\tpostIns = postDel = false;\n\n  \t\t\t\t// An insertion or deletion.\n  \t\t\t} else {\n\n  \t\t\t\tif (diffs[pointer][0] === DIFF_DELETE) {\n  \t\t\t\t\tpostDel = true;\n  \t\t\t\t} else {\n  \t\t\t\t\tpostIns = true;\n  \t\t\t\t}\n\n  \t\t\t\t/*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n  \t\t\t\tif (lastequality && (preIns && preDel && postIns && postDel || lastequality.length < 2 && preIns + preDel + postIns + postDel === 3)) {\n\n  \t\t\t\t\t// Duplicate record.\n  \t\t\t\t\tdiffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastequality]);\n\n  \t\t\t\t\t// Change second copy to insert.\n  \t\t\t\t\tdiffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n  \t\t\t\t\tequalitiesLength--; // Throw away the equality we just deleted;\n  \t\t\t\t\tlastequality = null;\n  \t\t\t\t\tif (preIns && preDel) {\n\n  \t\t\t\t\t\t// No changes made which could affect previous entry, keep going.\n  \t\t\t\t\t\tpostIns = postDel = true;\n  \t\t\t\t\t\tequalitiesLength = 0;\n  \t\t\t\t\t} else {\n  \t\t\t\t\t\tequalitiesLength--; // Throw away the previous equality.\n  \t\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n  \t\t\t\t\t\tpostIns = postDel = false;\n  \t\t\t\t\t}\n  \t\t\t\t\tchanges = true;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tpointer++;\n  \t\t}\n\n  \t\tif (changes) {\n  \t\t\tthis.diffCleanupMerge(diffs);\n  \t\t}\n  \t};\n\n  \t/**\n    * Convert a diff array into a pretty HTML report.\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n    * @param {integer} string to be beautified.\n    * @return {string} HTML representation.\n    */\n  \tDiffMatchPatch.prototype.diffPrettyHtml = function (diffs) {\n  \t\tvar op,\n  \t\t    data,\n  \t\t    x,\n  \t\t    html = [];\n  \t\tfor (x = 0; x < diffs.length; x++) {\n  \t\t\top = diffs[x][0]; // Operation (insert, delete, equal)\n  \t\t\tdata = diffs[x][1]; // Text of change.\n  \t\t\tswitch (op) {\n  \t\t\t\tcase DIFF_INSERT:\n  \t\t\t\t\thtml[x] = \"<ins>\" + escapeText(data) + \"</ins>\";\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase DIFF_DELETE:\n  \t\t\t\t\thtml[x] = \"<del>\" + escapeText(data) + \"</del>\";\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase DIFF_EQUAL:\n  \t\t\t\t\thtml[x] = \"<span>\" + escapeText(data) + \"</span>\";\n  \t\t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t\treturn html.join(\"\");\n  \t};\n\n  \t/**\n    * Determine the common prefix of two strings.\n    * @param {string} text1 First string.\n    * @param {string} text2 Second string.\n    * @return {number} The number of characters common to the start of each\n    *     string.\n    */\n  \tDiffMatchPatch.prototype.diffCommonPrefix = function (text1, text2) {\n  \t\tvar pointermid, pointermax, pointermin, pointerstart;\n\n  \t\t// Quick check for common null cases.\n  \t\tif (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n  \t\t\treturn 0;\n  \t\t}\n\n  \t\t// Binary search.\n  \t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  \t\tpointermin = 0;\n  \t\tpointermax = Math.min(text1.length, text2.length);\n  \t\tpointermid = pointermax;\n  \t\tpointerstart = 0;\n  \t\twhile (pointermin < pointermid) {\n  \t\t\tif (text1.substring(pointerstart, pointermid) === text2.substring(pointerstart, pointermid)) {\n  \t\t\t\tpointermin = pointermid;\n  \t\t\t\tpointerstart = pointermin;\n  \t\t\t} else {\n  \t\t\t\tpointermax = pointermid;\n  \t\t\t}\n  \t\t\tpointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  \t\t}\n  \t\treturn pointermid;\n  \t};\n\n  \t/**\n    * Determine the common suffix of two strings.\n    * @param {string} text1 First string.\n    * @param {string} text2 Second string.\n    * @return {number} The number of characters common to the end of each string.\n    */\n  \tDiffMatchPatch.prototype.diffCommonSuffix = function (text1, text2) {\n  \t\tvar pointermid, pointermax, pointermin, pointerend;\n\n  \t\t// Quick check for common null cases.\n  \t\tif (!text1 || !text2 || text1.charAt(text1.length - 1) !== text2.charAt(text2.length - 1)) {\n  \t\t\treturn 0;\n  \t\t}\n\n  \t\t// Binary search.\n  \t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n  \t\tpointermin = 0;\n  \t\tpointermax = Math.min(text1.length, text2.length);\n  \t\tpointermid = pointermax;\n  \t\tpointerend = 0;\n  \t\twhile (pointermin < pointermid) {\n  \t\t\tif (text1.substring(text1.length - pointermid, text1.length - pointerend) === text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n  \t\t\t\tpointermin = pointermid;\n  \t\t\t\tpointerend = pointermin;\n  \t\t\t} else {\n  \t\t\t\tpointermax = pointermid;\n  \t\t\t}\n  \t\t\tpointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  \t\t}\n  \t\treturn pointermid;\n  \t};\n\n  \t/**\n    * Find the differences between two texts.  Assumes that the texts do not\n    * have any common prefix or suffix.\n    * @param {string} text1 Old string to be diffed.\n    * @param {string} text2 New string to be diffed.\n    * @param {boolean} checklines Speedup flag.  If false, then don't run a\n    *     line-level diff first to identify the changed areas.\n    *     If true, then run a faster, slightly less optimal diff.\n    * @param {number} deadline Time when the diff should be complete by.\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffCompute = function (text1, text2, checklines, deadline) {\n  \t\tvar diffs, longtext, shorttext, i, hm, text1A, text2A, text1B, text2B, midCommon, diffsA, diffsB;\n\n  \t\tif (!text1) {\n\n  \t\t\t// Just add some text (speedup).\n  \t\t\treturn [[DIFF_INSERT, text2]];\n  \t\t}\n\n  \t\tif (!text2) {\n\n  \t\t\t// Just delete some text (speedup).\n  \t\t\treturn [[DIFF_DELETE, text1]];\n  \t\t}\n\n  \t\tlongtext = text1.length > text2.length ? text1 : text2;\n  \t\tshorttext = text1.length > text2.length ? text2 : text1;\n  \t\ti = longtext.indexOf(shorttext);\n  \t\tif (i !== -1) {\n\n  \t\t\t// Shorter text is inside the longer text (speedup).\n  \t\t\tdiffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n\n  \t\t\t// Swap insertions for deletions if diff is reversed.\n  \t\t\tif (text1.length > text2.length) {\n  \t\t\t\tdiffs[0][0] = diffs[2][0] = DIFF_DELETE;\n  \t\t\t}\n  \t\t\treturn diffs;\n  \t\t}\n\n  \t\tif (shorttext.length === 1) {\n\n  \t\t\t// Single character string.\n  \t\t\t// After the previous speedup, the character can't be an equality.\n  \t\t\treturn [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  \t\t}\n\n  \t\t// Check to see if the problem can be split in two.\n  \t\thm = this.diffHalfMatch(text1, text2);\n  \t\tif (hm) {\n\n  \t\t\t// A half-match was found, sort out the return data.\n  \t\t\ttext1A = hm[0];\n  \t\t\ttext1B = hm[1];\n  \t\t\ttext2A = hm[2];\n  \t\t\ttext2B = hm[3];\n  \t\t\tmidCommon = hm[4];\n\n  \t\t\t// Send both pairs off for separate processing.\n  \t\t\tdiffsA = this.DiffMain(text1A, text2A, checklines, deadline);\n  \t\t\tdiffsB = this.DiffMain(text1B, text2B, checklines, deadline);\n\n  \t\t\t// Merge the results.\n  \t\t\treturn diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\n  \t\t}\n\n  \t\tif (checklines && text1.length > 100 && text2.length > 100) {\n  \t\t\treturn this.diffLineMode(text1, text2, deadline);\n  \t\t}\n\n  \t\treturn this.diffBisect(text1, text2, deadline);\n  \t};\n\n  \t/**\n    * Do the two texts share a substring which is at least half the length of the\n    * longer text?\n    * This speedup can produce non-minimal diffs.\n    * @param {string} text1 First string.\n    * @param {string} text2 Second string.\n    * @return {Array.<string>} Five element Array, containing the prefix of\n    *     text1, the suffix of text1, the prefix of text2, the suffix of\n    *     text2 and the common middle.  Or null if there was no match.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffHalfMatch = function (text1, text2) {\n  \t\tvar longtext, shorttext, dmp, text1A, text2B, text2A, text1B, midCommon, hm1, hm2, hm;\n\n  \t\tlongtext = text1.length > text2.length ? text1 : text2;\n  \t\tshorttext = text1.length > text2.length ? text2 : text1;\n  \t\tif (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n  \t\t\treturn null; // Pointless.\n  \t\t}\n  \t\tdmp = this; // 'this' becomes 'window' in a closure.\n\n  \t\t/**\n     * Does a substring of shorttext exist within longtext such that the substring\n     * is at least half the length of longtext?\n     * Closure, but does not reference any external variables.\n     * @param {string} longtext Longer string.\n     * @param {string} shorttext Shorter string.\n     * @param {number} i Start index of quarter length substring within longtext.\n     * @return {Array.<string>} Five element Array, containing the prefix of\n     *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n     *     of shorttext and the common middle.  Or null if there was no match.\n     * @private\n     */\n  \t\tfunction diffHalfMatchI(longtext, shorttext, i) {\n  \t\t\tvar seed, j, bestCommon, prefixLength, suffixLength, bestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB;\n\n  \t\t\t// Start with a 1/4 length substring at position i as a seed.\n  \t\t\tseed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n  \t\t\tj = -1;\n  \t\t\tbestCommon = \"\";\n  \t\t\twhile ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n  \t\t\t\tprefixLength = dmp.diffCommonPrefix(longtext.substring(i), shorttext.substring(j));\n  \t\t\t\tsuffixLength = dmp.diffCommonSuffix(longtext.substring(0, i), shorttext.substring(0, j));\n  \t\t\t\tif (bestCommon.length < suffixLength + prefixLength) {\n  \t\t\t\t\tbestCommon = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n  \t\t\t\t\tbestLongtextA = longtext.substring(0, i - suffixLength);\n  \t\t\t\t\tbestLongtextB = longtext.substring(i + prefixLength);\n  \t\t\t\t\tbestShorttextA = shorttext.substring(0, j - suffixLength);\n  \t\t\t\t\tbestShorttextB = shorttext.substring(j + prefixLength);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tif (bestCommon.length * 2 >= longtext.length) {\n  \t\t\t\treturn [bestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB, bestCommon];\n  \t\t\t} else {\n  \t\t\t\treturn null;\n  \t\t\t}\n  \t\t}\n\n  \t\t// First check if the second quarter is the seed for a half-match.\n  \t\thm1 = diffHalfMatchI(longtext, shorttext, Math.ceil(longtext.length / 4));\n\n  \t\t// Check again based on the third quarter.\n  \t\thm2 = diffHalfMatchI(longtext, shorttext, Math.ceil(longtext.length / 2));\n  \t\tif (!hm1 && !hm2) {\n  \t\t\treturn null;\n  \t\t} else if (!hm2) {\n  \t\t\thm = hm1;\n  \t\t} else if (!hm1) {\n  \t\t\thm = hm2;\n  \t\t} else {\n\n  \t\t\t// Both matched.  Select the longest.\n  \t\t\thm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  \t\t}\n\n  \t\t// A half-match was found, sort out the return data.\n  \t\tif (text1.length > text2.length) {\n  \t\t\ttext1A = hm[0];\n  \t\t\ttext1B = hm[1];\n  \t\t\ttext2A = hm[2];\n  \t\t\ttext2B = hm[3];\n  \t\t} else {\n  \t\t\ttext2A = hm[0];\n  \t\t\ttext2B = hm[1];\n  \t\t\ttext1A = hm[2];\n  \t\t\ttext1B = hm[3];\n  \t\t}\n  \t\tmidCommon = hm[4];\n  \t\treturn [text1A, text1B, text2A, text2B, midCommon];\n  \t};\n\n  \t/**\n    * Do a quick line-level diff on both strings, then rediff the parts for\n    * greater accuracy.\n    * This speedup can produce non-minimal diffs.\n    * @param {string} text1 Old string to be diffed.\n    * @param {string} text2 New string to be diffed.\n    * @param {number} deadline Time when the diff should be complete by.\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffLineMode = function (text1, text2, deadline) {\n  \t\tvar a, diffs, linearray, pointer, countInsert, countDelete, textInsert, textDelete, j;\n\n  \t\t// Scan the text on a line-by-line basis first.\n  \t\ta = this.diffLinesToChars(text1, text2);\n  \t\ttext1 = a.chars1;\n  \t\ttext2 = a.chars2;\n  \t\tlinearray = a.lineArray;\n\n  \t\tdiffs = this.DiffMain(text1, text2, false, deadline);\n\n  \t\t// Convert the diff back to original text.\n  \t\tthis.diffCharsToLines(diffs, linearray);\n\n  \t\t// Eliminate freak matches (e.g. blank lines)\n  \t\tthis.diffCleanupSemantic(diffs);\n\n  \t\t// Rediff any replacement blocks, this time character-by-character.\n  \t\t// Add a dummy entry at the end.\n  \t\tdiffs.push([DIFF_EQUAL, \"\"]);\n  \t\tpointer = 0;\n  \t\tcountDelete = 0;\n  \t\tcountInsert = 0;\n  \t\ttextDelete = \"\";\n  \t\ttextInsert = \"\";\n  \t\twhile (pointer < diffs.length) {\n  \t\t\tswitch (diffs[pointer][0]) {\n  \t\t\t\tcase DIFF_INSERT:\n  \t\t\t\t\tcountInsert++;\n  \t\t\t\t\ttextInsert += diffs[pointer][1];\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase DIFF_DELETE:\n  \t\t\t\t\tcountDelete++;\n  \t\t\t\t\ttextDelete += diffs[pointer][1];\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase DIFF_EQUAL:\n\n  \t\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n  \t\t\t\t\tif (countDelete >= 1 && countInsert >= 1) {\n\n  \t\t\t\t\t\t// Delete the offending records and add the merged ones.\n  \t\t\t\t\t\tdiffs.splice(pointer - countDelete - countInsert, countDelete + countInsert);\n  \t\t\t\t\t\tpointer = pointer - countDelete - countInsert;\n  \t\t\t\t\t\ta = this.DiffMain(textDelete, textInsert, false, deadline);\n  \t\t\t\t\t\tfor (j = a.length - 1; j >= 0; j--) {\n  \t\t\t\t\t\t\tdiffs.splice(pointer, 0, a[j]);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\tpointer = pointer + a.length;\n  \t\t\t\t\t}\n  \t\t\t\t\tcountInsert = 0;\n  \t\t\t\t\tcountDelete = 0;\n  \t\t\t\t\ttextDelete = \"\";\n  \t\t\t\t\ttextInsert = \"\";\n  \t\t\t\t\tbreak;\n  \t\t\t}\n  \t\t\tpointer++;\n  \t\t}\n  \t\tdiffs.pop(); // Remove the dummy entry at the end.\n\n  \t\treturn diffs;\n  \t};\n\n  \t/**\n    * Find the 'middle snake' of a diff, split the problem in two\n    * and return the recursively constructed diff.\n    * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n    * @param {string} text1 Old string to be diffed.\n    * @param {string} text2 New string to be diffed.\n    * @param {number} deadline Time at which to bail if not yet complete.\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffBisect = function (text1, text2, deadline) {\n  \t\tvar text1Length, text2Length, maxD, vOffset, vLength, v1, v2, x, delta, front, k1start, k1end, k2start, k2end, k2Offset, k1Offset, x1, x2, y1, y2, d, k1, k2;\n\n  \t\t// Cache the text lengths to prevent multiple calls.\n  \t\ttext1Length = text1.length;\n  \t\ttext2Length = text2.length;\n  \t\tmaxD = Math.ceil((text1Length + text2Length) / 2);\n  \t\tvOffset = maxD;\n  \t\tvLength = 2 * maxD;\n  \t\tv1 = new Array(vLength);\n  \t\tv2 = new Array(vLength);\n\n  \t\t// Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  \t\t// integers and undefined.\n  \t\tfor (x = 0; x < vLength; x++) {\n  \t\t\tv1[x] = -1;\n  \t\t\tv2[x] = -1;\n  \t\t}\n  \t\tv1[vOffset + 1] = 0;\n  \t\tv2[vOffset + 1] = 0;\n  \t\tdelta = text1Length - text2Length;\n\n  \t\t// If the total number of characters is odd, then the front path will collide\n  \t\t// with the reverse path.\n  \t\tfront = delta % 2 !== 0;\n\n  \t\t// Offsets for start and end of k loop.\n  \t\t// Prevents mapping of space beyond the grid.\n  \t\tk1start = 0;\n  \t\tk1end = 0;\n  \t\tk2start = 0;\n  \t\tk2end = 0;\n  \t\tfor (d = 0; d < maxD; d++) {\n\n  \t\t\t// Bail out if deadline is reached.\n  \t\t\tif (new Date().getTime() > deadline) {\n  \t\t\t\tbreak;\n  \t\t\t}\n\n  \t\t\t// Walk the front path one step.\n  \t\t\tfor (k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n  \t\t\t\tk1Offset = vOffset + k1;\n  \t\t\t\tif (k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1]) {\n  \t\t\t\t\tx1 = v1[k1Offset + 1];\n  \t\t\t\t} else {\n  \t\t\t\t\tx1 = v1[k1Offset - 1] + 1;\n  \t\t\t\t}\n  \t\t\t\ty1 = x1 - k1;\n  \t\t\t\twhile (x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1)) {\n  \t\t\t\t\tx1++;\n  \t\t\t\t\ty1++;\n  \t\t\t\t}\n  \t\t\t\tv1[k1Offset] = x1;\n  \t\t\t\tif (x1 > text1Length) {\n\n  \t\t\t\t\t// Ran off the right of the graph.\n  \t\t\t\t\tk1end += 2;\n  \t\t\t\t} else if (y1 > text2Length) {\n\n  \t\t\t\t\t// Ran off the bottom of the graph.\n  \t\t\t\t\tk1start += 2;\n  \t\t\t\t} else if (front) {\n  \t\t\t\t\tk2Offset = vOffset + delta - k1;\n  \t\t\t\t\tif (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n\n  \t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n  \t\t\t\t\t\tx2 = text1Length - v2[k2Offset];\n  \t\t\t\t\t\tif (x1 >= x2) {\n\n  \t\t\t\t\t\t\t// Overlap detected.\n  \t\t\t\t\t\t\treturn this.diffBisectSplit(text1, text2, x1, y1, deadline);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\t// Walk the reverse path one step.\n  \t\t\tfor (k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n  \t\t\t\tk2Offset = vOffset + k2;\n  \t\t\t\tif (k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1]) {\n  \t\t\t\t\tx2 = v2[k2Offset + 1];\n  \t\t\t\t} else {\n  \t\t\t\t\tx2 = v2[k2Offset - 1] + 1;\n  \t\t\t\t}\n  \t\t\t\ty2 = x2 - k2;\n  \t\t\t\twhile (x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1)) {\n  \t\t\t\t\tx2++;\n  \t\t\t\t\ty2++;\n  \t\t\t\t}\n  \t\t\t\tv2[k2Offset] = x2;\n  \t\t\t\tif (x2 > text1Length) {\n\n  \t\t\t\t\t// Ran off the left of the graph.\n  \t\t\t\t\tk2end += 2;\n  \t\t\t\t} else if (y2 > text2Length) {\n\n  \t\t\t\t\t// Ran off the top of the graph.\n  \t\t\t\t\tk2start += 2;\n  \t\t\t\t} else if (!front) {\n  \t\t\t\t\tk1Offset = vOffset + delta - k2;\n  \t\t\t\t\tif (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n  \t\t\t\t\t\tx1 = v1[k1Offset];\n  \t\t\t\t\t\ty1 = vOffset + x1 - k1Offset;\n\n  \t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n  \t\t\t\t\t\tx2 = text1Length - x2;\n  \t\t\t\t\t\tif (x1 >= x2) {\n\n  \t\t\t\t\t\t\t// Overlap detected.\n  \t\t\t\t\t\t\treturn this.diffBisectSplit(text1, text2, x1, y1, deadline);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\t// Diff took too long and hit the deadline or\n  \t\t// number of diffs equals number of characters, no commonality at all.\n  \t\treturn [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  \t};\n\n  \t/**\n    * Given the location of the 'middle snake', split the diff in two parts\n    * and recurse.\n    * @param {string} text1 Old string to be diffed.\n    * @param {string} text2 New string to be diffed.\n    * @param {number} x Index of split point in text1.\n    * @param {number} y Index of split point in text2.\n    * @param {number} deadline Time at which to bail if not yet complete.\n    * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffBisectSplit = function (text1, text2, x, y, deadline) {\n  \t\tvar text1a, text1b, text2a, text2b, diffs, diffsb;\n  \t\ttext1a = text1.substring(0, x);\n  \t\ttext2a = text2.substring(0, y);\n  \t\ttext1b = text1.substring(x);\n  \t\ttext2b = text2.substring(y);\n\n  \t\t// Compute both diffs serially.\n  \t\tdiffs = this.DiffMain(text1a, text2a, false, deadline);\n  \t\tdiffsb = this.DiffMain(text1b, text2b, false, deadline);\n\n  \t\treturn diffs.concat(diffsb);\n  \t};\n\n  \t/**\n    * Reduce the number of edits by eliminating semantically trivial equalities.\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n    */\n  \tDiffMatchPatch.prototype.diffCleanupSemantic = function (diffs) {\n  \t\tvar changes, equalities, equalitiesLength, lastequality, pointer, lengthInsertions2, lengthDeletions2, lengthInsertions1, lengthDeletions1, deletion, insertion, overlapLength1, overlapLength2;\n  \t\tchanges = false;\n  \t\tequalities = []; // Stack of indices where equalities are found.\n  \t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n  \t\t/** @type {?string} */\n  \t\tlastequality = null;\n\n  \t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  \t\tpointer = 0; // Index of current position.\n\n  \t\t// Number of characters that changed prior to the equality.\n  \t\tlengthInsertions1 = 0;\n  \t\tlengthDeletions1 = 0;\n\n  \t\t// Number of characters that changed after the equality.\n  \t\tlengthInsertions2 = 0;\n  \t\tlengthDeletions2 = 0;\n  \t\twhile (pointer < diffs.length) {\n  \t\t\tif (diffs[pointer][0] === DIFF_EQUAL) {\n  \t\t\t\t// Equality found.\n  \t\t\t\tequalities[equalitiesLength++] = pointer;\n  \t\t\t\tlengthInsertions1 = lengthInsertions2;\n  \t\t\t\tlengthDeletions1 = lengthDeletions2;\n  \t\t\t\tlengthInsertions2 = 0;\n  \t\t\t\tlengthDeletions2 = 0;\n  \t\t\t\tlastequality = diffs[pointer][1];\n  \t\t\t} else {\n  \t\t\t\t// An insertion or deletion.\n  \t\t\t\tif (diffs[pointer][0] === DIFF_INSERT) {\n  \t\t\t\t\tlengthInsertions2 += diffs[pointer][1].length;\n  \t\t\t\t} else {\n  \t\t\t\t\tlengthDeletions2 += diffs[pointer][1].length;\n  \t\t\t\t}\n\n  \t\t\t\t// Eliminate an equality that is smaller or equal to the edits on both\n  \t\t\t\t// sides of it.\n  \t\t\t\tif (lastequality && lastequality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastequality.length <= Math.max(lengthInsertions2, lengthDeletions2)) {\n\n  \t\t\t\t\t// Duplicate record.\n  \t\t\t\t\tdiffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastequality]);\n\n  \t\t\t\t\t// Change second copy to insert.\n  \t\t\t\t\tdiffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n\n  \t\t\t\t\t// Throw away the equality we just deleted.\n  \t\t\t\t\tequalitiesLength--;\n\n  \t\t\t\t\t// Throw away the previous equality (it needs to be reevaluated).\n  \t\t\t\t\tequalitiesLength--;\n  \t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n\n  \t\t\t\t\t// Reset the counters.\n  \t\t\t\t\tlengthInsertions1 = 0;\n  \t\t\t\t\tlengthDeletions1 = 0;\n  \t\t\t\t\tlengthInsertions2 = 0;\n  \t\t\t\t\tlengthDeletions2 = 0;\n  \t\t\t\t\tlastequality = null;\n  \t\t\t\t\tchanges = true;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tpointer++;\n  \t\t}\n\n  \t\t// Normalize the diff.\n  \t\tif (changes) {\n  \t\t\tthis.diffCleanupMerge(diffs);\n  \t\t}\n\n  \t\t// Find any overlaps between deletions and insertions.\n  \t\t// e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  \t\t//   -> <del>abc</del>xxx<ins>def</ins>\n  \t\t// e.g: <del>xxxabc</del><ins>defxxx</ins>\n  \t\t//   -> <ins>def</ins>xxx<del>abc</del>\n  \t\t// Only extract an overlap if it is as big as the edit ahead or behind it.\n  \t\tpointer = 1;\n  \t\twhile (pointer < diffs.length) {\n  \t\t\tif (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n  \t\t\t\tdeletion = diffs[pointer - 1][1];\n  \t\t\t\tinsertion = diffs[pointer][1];\n  \t\t\t\toverlapLength1 = this.diffCommonOverlap(deletion, insertion);\n  \t\t\t\toverlapLength2 = this.diffCommonOverlap(insertion, deletion);\n  \t\t\t\tif (overlapLength1 >= overlapLength2) {\n  \t\t\t\t\tif (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) {\n\n  \t\t\t\t\t\t// Overlap found.  Insert an equality and trim the surrounding edits.\n  \t\t\t\t\t\tdiffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]);\n  \t\t\t\t\t\tdiffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1);\n  \t\t\t\t\t\tdiffs[pointer + 1][1] = insertion.substring(overlapLength1);\n  \t\t\t\t\t\tpointer++;\n  \t\t\t\t\t}\n  \t\t\t\t} else {\n  \t\t\t\t\tif (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) {\n\n  \t\t\t\t\t\t// Reverse overlap found.\n  \t\t\t\t\t\t// Insert an equality and swap and trim the surrounding edits.\n  \t\t\t\t\t\tdiffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]);\n\n  \t\t\t\t\t\tdiffs[pointer - 1][0] = DIFF_INSERT;\n  \t\t\t\t\t\tdiffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2);\n  \t\t\t\t\t\tdiffs[pointer + 1][0] = DIFF_DELETE;\n  \t\t\t\t\t\tdiffs[pointer + 1][1] = deletion.substring(overlapLength2);\n  \t\t\t\t\t\tpointer++;\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\tpointer++;\n  \t\t\t}\n  \t\t\tpointer++;\n  \t\t}\n  \t};\n\n  \t/**\n    * Determine if the suffix of one string is the prefix of another.\n    * @param {string} text1 First string.\n    * @param {string} text2 Second string.\n    * @return {number} The number of characters common to the end of the first\n    *     string and the start of the second string.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffCommonOverlap = function (text1, text2) {\n  \t\tvar text1Length, text2Length, textLength, best, length, pattern, found;\n\n  \t\t// Cache the text lengths to prevent multiple calls.\n  \t\ttext1Length = text1.length;\n  \t\ttext2Length = text2.length;\n\n  \t\t// Eliminate the null case.\n  \t\tif (text1Length === 0 || text2Length === 0) {\n  \t\t\treturn 0;\n  \t\t}\n\n  \t\t// Truncate the longer string.\n  \t\tif (text1Length > text2Length) {\n  \t\t\ttext1 = text1.substring(text1Length - text2Length);\n  \t\t} else if (text1Length < text2Length) {\n  \t\t\ttext2 = text2.substring(0, text1Length);\n  \t\t}\n  \t\ttextLength = Math.min(text1Length, text2Length);\n\n  \t\t// Quick check for the worst case.\n  \t\tif (text1 === text2) {\n  \t\t\treturn textLength;\n  \t\t}\n\n  \t\t// Start by looking for a single character match\n  \t\t// and increase length until no match is found.\n  \t\t// Performance analysis: https://neil.fraser.name/news/2010/11/04/\n  \t\tbest = 0;\n  \t\tlength = 1;\n  \t\twhile (true) {\n  \t\t\tpattern = text1.substring(textLength - length);\n  \t\t\tfound = text2.indexOf(pattern);\n  \t\t\tif (found === -1) {\n  \t\t\t\treturn best;\n  \t\t\t}\n  \t\t\tlength += found;\n  \t\t\tif (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) {\n  \t\t\t\tbest = length;\n  \t\t\t\tlength++;\n  \t\t\t}\n  \t\t}\n  \t};\n\n  \t/**\n    * Split two texts into an array of strings.  Reduce the texts to a string of\n    * hashes where each Unicode character represents one line.\n    * @param {string} text1 First string.\n    * @param {string} text2 Second string.\n    * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n    *     An object containing the encoded text1, the encoded text2 and\n    *     the array of unique strings.\n    *     The zeroth element of the array of unique strings is intentionally blank.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffLinesToChars = function (text1, text2) {\n  \t\tvar lineArray, lineHash, chars1, chars2;\n  \t\tlineArray = []; // E.g. lineArray[4] === 'Hello\\n'\n  \t\tlineHash = {}; // E.g. lineHash['Hello\\n'] === 4\n\n  \t\t// '\\x00' is a valid character, but various debuggers don't like it.\n  \t\t// So we'll insert a junk entry to avoid generating a null character.\n  \t\tlineArray[0] = \"\";\n\n  \t\t/**\n     * Split a text into an array of strings.  Reduce the texts to a string of\n     * hashes where each Unicode character represents one line.\n     * Modifies linearray and linehash through being a closure.\n     * @param {string} text String to encode.\n     * @return {string} Encoded string.\n     * @private\n     */\n  \t\tfunction diffLinesToCharsMunge(text) {\n  \t\t\tvar chars, lineStart, lineEnd, lineArrayLength, line;\n  \t\t\tchars = \"\";\n\n  \t\t\t// Walk the text, pulling out a substring for each line.\n  \t\t\t// text.split('\\n') would would temporarily double our memory footprint.\n  \t\t\t// Modifying text would create many large strings to garbage collect.\n  \t\t\tlineStart = 0;\n  \t\t\tlineEnd = -1;\n\n  \t\t\t// Keeping our own length variable is faster than looking it up.\n  \t\t\tlineArrayLength = lineArray.length;\n  \t\t\twhile (lineEnd < text.length - 1) {\n  \t\t\t\tlineEnd = text.indexOf(\"\\n\", lineStart);\n  \t\t\t\tif (lineEnd === -1) {\n  \t\t\t\t\tlineEnd = text.length - 1;\n  \t\t\t\t}\n  \t\t\t\tline = text.substring(lineStart, lineEnd + 1);\n  \t\t\t\tlineStart = lineEnd + 1;\n\n  \t\t\t\tif (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== undefined) {\n  \t\t\t\t\tchars += String.fromCharCode(lineHash[line]);\n  \t\t\t\t} else {\n  \t\t\t\t\tchars += String.fromCharCode(lineArrayLength);\n  \t\t\t\t\tlineHash[line] = lineArrayLength;\n  \t\t\t\t\tlineArray[lineArrayLength++] = line;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\treturn chars;\n  \t\t}\n\n  \t\tchars1 = diffLinesToCharsMunge(text1);\n  \t\tchars2 = diffLinesToCharsMunge(text2);\n  \t\treturn {\n  \t\t\tchars1: chars1,\n  \t\t\tchars2: chars2,\n  \t\t\tlineArray: lineArray\n  \t\t};\n  \t};\n\n  \t/**\n    * Rehydrate the text in a diff from a string of line hashes to real lines of\n    * text.\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n    * @param {!Array.<string>} lineArray Array of unique strings.\n    * @private\n    */\n  \tDiffMatchPatch.prototype.diffCharsToLines = function (diffs, lineArray) {\n  \t\tvar x, chars, text, y;\n  \t\tfor (x = 0; x < diffs.length; x++) {\n  \t\t\tchars = diffs[x][1];\n  \t\t\ttext = [];\n  \t\t\tfor (y = 0; y < chars.length; y++) {\n  \t\t\t\ttext[y] = lineArray[chars.charCodeAt(y)];\n  \t\t\t}\n  \t\t\tdiffs[x][1] = text.join(\"\");\n  \t\t}\n  \t};\n\n  \t/**\n    * Reorder and merge like edit sections.  Merge equalities.\n    * Any edit section can move as long as it doesn't cross an equality.\n    * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n    */\n  \tDiffMatchPatch.prototype.diffCleanupMerge = function (diffs) {\n  \t\tvar pointer, countDelete, countInsert, textInsert, textDelete, commonlength, changes, diffPointer, position;\n  \t\tdiffs.push([DIFF_EQUAL, \"\"]); // Add a dummy entry at the end.\n  \t\tpointer = 0;\n  \t\tcountDelete = 0;\n  \t\tcountInsert = 0;\n  \t\ttextDelete = \"\";\n  \t\ttextInsert = \"\";\n\n  \t\twhile (pointer < diffs.length) {\n  \t\t\tswitch (diffs[pointer][0]) {\n  \t\t\t\tcase DIFF_INSERT:\n  \t\t\t\t\tcountInsert++;\n  \t\t\t\t\ttextInsert += diffs[pointer][1];\n  \t\t\t\t\tpointer++;\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase DIFF_DELETE:\n  \t\t\t\t\tcountDelete++;\n  \t\t\t\t\ttextDelete += diffs[pointer][1];\n  \t\t\t\t\tpointer++;\n  \t\t\t\t\tbreak;\n  \t\t\t\tcase DIFF_EQUAL:\n\n  \t\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n  \t\t\t\t\tif (countDelete + countInsert > 1) {\n  \t\t\t\t\t\tif (countDelete !== 0 && countInsert !== 0) {\n\n  \t\t\t\t\t\t\t// Factor out any common prefixes.\n  \t\t\t\t\t\t\tcommonlength = this.diffCommonPrefix(textInsert, textDelete);\n  \t\t\t\t\t\t\tif (commonlength !== 0) {\n  \t\t\t\t\t\t\t\tif (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL) {\n  \t\t\t\t\t\t\t\t\tdiffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(0, commonlength);\n  \t\t\t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\t\t\tdiffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]);\n  \t\t\t\t\t\t\t\t\tpointer++;\n  \t\t\t\t\t\t\t\t}\n  \t\t\t\t\t\t\t\ttextInsert = textInsert.substring(commonlength);\n  \t\t\t\t\t\t\t\ttextDelete = textDelete.substring(commonlength);\n  \t\t\t\t\t\t\t}\n\n  \t\t\t\t\t\t\t// Factor out any common suffixies.\n  \t\t\t\t\t\t\tcommonlength = this.diffCommonSuffix(textInsert, textDelete);\n  \t\t\t\t\t\t\tif (commonlength !== 0) {\n  \t\t\t\t\t\t\t\tdiffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1];\n  \t\t\t\t\t\t\t\ttextInsert = textInsert.substring(0, textInsert.length - commonlength);\n  \t\t\t\t\t\t\t\ttextDelete = textDelete.substring(0, textDelete.length - commonlength);\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t\t// Delete the offending records and add the merged ones.\n  \t\t\t\t\t\tif (countDelete === 0) {\n  \t\t\t\t\t\t\tdiffs.splice(pointer - countInsert, countDelete + countInsert, [DIFF_INSERT, textInsert]);\n  \t\t\t\t\t\t} else if (countInsert === 0) {\n  \t\t\t\t\t\t\tdiffs.splice(pointer - countDelete, countDelete + countInsert, [DIFF_DELETE, textDelete]);\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tdiffs.splice(pointer - countDelete - countInsert, countDelete + countInsert, [DIFF_DELETE, textDelete], [DIFF_INSERT, textInsert]);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t\tpointer = pointer - countDelete - countInsert + (countDelete ? 1 : 0) + (countInsert ? 1 : 0) + 1;\n  \t\t\t\t\t} else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n\n  \t\t\t\t\t\t// Merge this equality with the previous one.\n  \t\t\t\t\t\tdiffs[pointer - 1][1] += diffs[pointer][1];\n  \t\t\t\t\t\tdiffs.splice(pointer, 1);\n  \t\t\t\t\t} else {\n  \t\t\t\t\t\tpointer++;\n  \t\t\t\t\t}\n  \t\t\t\t\tcountInsert = 0;\n  \t\t\t\t\tcountDelete = 0;\n  \t\t\t\t\ttextDelete = \"\";\n  \t\t\t\t\ttextInsert = \"\";\n  \t\t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t\tif (diffs[diffs.length - 1][1] === \"\") {\n  \t\t\tdiffs.pop(); // Remove the dummy entry at the end.\n  \t\t}\n\n  \t\t// Second pass: look for single edits surrounded on both sides by equalities\n  \t\t// which can be shifted sideways to eliminate an equality.\n  \t\t// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  \t\tchanges = false;\n  \t\tpointer = 1;\n\n  \t\t// Intentionally ignore the first and last element (don't need checking).\n  \t\twhile (pointer < diffs.length - 1) {\n  \t\t\tif (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n\n  \t\t\t\tdiffPointer = diffs[pointer][1];\n  \t\t\t\tposition = diffPointer.substring(diffPointer.length - diffs[pointer - 1][1].length);\n\n  \t\t\t\t// This is a single edit surrounded by equalities.\n  \t\t\t\tif (position === diffs[pointer - 1][1]) {\n\n  \t\t\t\t\t// Shift the edit over the previous equality.\n  \t\t\t\t\tdiffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n  \t\t\t\t\tdiffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n  \t\t\t\t\tdiffs.splice(pointer - 1, 1);\n  \t\t\t\t\tchanges = true;\n  \t\t\t\t} else if (diffPointer.substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n\n  \t\t\t\t\t// Shift the edit over the next equality.\n  \t\t\t\t\tdiffs[pointer - 1][1] += diffs[pointer + 1][1];\n  \t\t\t\t\tdiffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n  \t\t\t\t\tdiffs.splice(pointer + 1, 1);\n  \t\t\t\t\tchanges = true;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tpointer++;\n  \t\t}\n\n  \t\t// If shifts were made, the diff needs reordering and another shift sweep.\n  \t\tif (changes) {\n  \t\t\tthis.diffCleanupMerge(diffs);\n  \t\t}\n  \t};\n\n  \treturn function (o, n) {\n  \t\tvar diff, output, text;\n  \t\tdiff = new DiffMatchPatch();\n  \t\toutput = diff.DiffMain(o, n);\n  \t\tdiff.diffCleanupEfficiency(output);\n  \t\ttext = diff.diffPrettyHtml(output);\n\n  \t\treturn text;\n  \t};\n  }();\n\n}((function() { return this; }())));\n","var racer = require('racer');\nvar Socket = require('./socket');\nvar CLIENT_OPTIONS = JSON.parse('{\"base\":\"/channel\",\"reconnect\":true,\"browserChannelOnly\":false,\"timeout\":10000,\"timeoutIncrement\":10000}');\n\nracer.Model.prototype._createSocket = function(bundle) {\n  return new Socket(CLIENT_OPTIONS);\n};\n\n","module.exports = Socket;\n\nvar BCSocket = require('browserchannel/dist/bcsocket-uncompressed').BCSocket;\n\nfunction Socket(options) {\n  this._options = options;\n  this._messageQueue = [];\n  this._connectedOnce = false;\n  this._attemptNum = 0;\n  this._url = getWebSocketURL(options);\n\n  if (supportWebSockets() && !options.browserChannelOnly) {\n    this._createWebSocket();\n  } else {\n    this._createBrowserChannel();\n  }\n}\n\nSocket.prototype._createWebSocket = function() {\n\n  this._type = 'websocket';\n  this._socket = new WebSocket(this._url);\n\n  this.open = this._createWebSocket.bind(this);\n  this._syncState();\n\n  this._socket.onmessage = this._ws_onmessage.bind(this);\n  this._socket.onopen = this._ws_onopen.bind(this);\n  this._socket.onclose = this._ws_onclose.bind(this);\n\n};\n\nSocket.prototype._createBrowserChannel = function() {\n  this._type = 'browserchannel';\n  this._socket = BCSocket(this._options.base, this._options);\n\n  this.open = this._createBrowserChannel.bind(this);\n  this._syncState();\n\n  this._socket.onmessage = this._bc_onmessage.bind(this);\n  this._socket.onopen = this._bc_onopen.bind(this);\n  this._socket.onclose = this._bc_onclose.bind(this);\n};\n\nSocket.prototype._ws_onmessage = function(message) {\n  this._syncState();\n  message.data = JSON.parse(message.data);\n  this.onmessage && this.onmessage(message);\n};\n\nSocket.prototype._ws_onopen = function(event) {\n  this._attemptNum = 0;\n  this._connectedOnce = true;\n\n  this._syncState();\n  this._flushQueue();\n\n  this.onopen && this.onopen(event);\n};\n\nSocket.prototype._ws_onclose = function(event) {\n  this._syncState();\n  console.log('WebSocket: connection is broken', event);\n\n  this.onclose && this.onclose(event);\n\n  if (!this._connectedOnce) {\n    return this._createBrowserChannel();\n  }\n\n  var socket = this;\n\n  if (this._options.reconnect && !event.wasClean) {\n    setTimeout(function(){\n      if (socket.readyState === socket.CLOSED) {\n        socket._createWebSocket();\n      }\n    }, this._getTimeout());\n  }\n  this._attemptNum++;\n};\n\nSocket.prototype._getTimeout = function(){\n  var base = this._options.timeout;\n  var increment = this._options.timeoutIncrement * this._attemptNum;\n  var maxTimeout = base + increment;\n  return getRandom(maxTimeout / 3, maxTimeout);\n};\n\nSocket.prototype._bc_onmessage = function(data) {\n  this._syncState();\n  this.onmessage && this.onmessage(data);\n};\n\nSocket.prototype._bc_onopen = function(event) {\n  this._syncState();\n  this.onopen && this.onopen(event);\n};\n\nSocket.prototype._bc_onclose = function(event) {\n  this._syncState();\n  this.onclose && this.onclose(event);\n};\n\nSocket.prototype._flushQueue = function(){\n  while (this._messageQueue.length !== 0) {\n    var data = this._messageQueue.shift();\n    this._send(data);\n  }\n};\n\nSocket.prototype._send = function(data){\n  if (this._type === 'websocket' && (typeof data !== 'string')) data = JSON.stringify(data);\n\n  this._socket.send(data);\n};\n\nSocket.prototype.send = function(data){\n  if (this._type === 'websocket') {\n    if (this._socket.readyState === WebSocket.OPEN && this._messageQueue.length === 0) {\n      this._send(data);\n    } else {\n      this._messageQueue.push(data);\n    }\n  } else {\n    this._send(data);\n  }\n};\n\nSocket.prototype.close = function(){\n  this._socket.close();\n};\n\nSocket.prototype._syncState = function(){\n  this.readyState = this._socket.readyState;\n};\n\nSocket.prototype.reconnect = function(){\n  if (this._type === 'websocket' && this.readyState === this.CLOSED){\n    this._createWebSocket();\n  }\n};\n\n// ShareJS constants\nSocket.prototype.canSendWhileConnecting = true;\nSocket.prototype.canSendJSON = true;\n\n// WebSocket constants\nSocket.prototype.CONNECTING = 0;\nSocket.prototype.OPEN = 1;\nSocket.prototype.CLOSING = 2;\nSocket.prototype.CLOSED = 3;\n\nfunction getRandom(min, max){\n  return Math.random() * (max - min) + min;\n}\n\nfunction supportWebSockets(){\n  // The condition is from Modernizr\n  // https://github.com/Modernizr/Modernizr/blob/master/feature-detects/websockets.js#L28\n  return 'WebSocket' in window && window.WebSocket.CLOSING === 2;\n}\n\nfunction getWebSocketURL(options){\n  var port;\n\n  if (window.location.port !== '') {\n    port = \":\" + window.location.port;\n  }\n\n  var srvPort = options.srvPort;\n  var srvSecurePort = options.srvSecurePort;\n\n  var srvHost = options.srvHost || window.location.hostname;\n  var srvProtocol = options.srvProtocol || window.location.protocol;\n\n  var protocol = (srvProtocol === 'https:' ? 'wss:' : 'ws:');\n\n  if (protocol === 'ws:' && srvPort) {\n    port = \":\" + srvPort;\n  } else if (protocol === 'wss:' && srvSecurePort) {\n    port = \":\" + srvSecurePort;\n  }\n  return protocol + '//' + srvHost + (port || \"\") + options.base;\n}\n\n// Maybe need to use reconnection timing algorithm from\n// http://blog.johnryding.com/post/78544969349/how-to-reconnect-web-sockets-in-a-realtime-web-app\n","module.exports = CollectionCounter;\n\nfunction CollectionCounter() {\n  this.reset();\n}\nCollectionCounter.prototype.reset = function() {\n  this.collections = {};\n};\nCollectionCounter.prototype.get = function(collectionName, id) {\n  var collection = this.collections[collectionName];\n  return collection && collection[id];\n};\nCollectionCounter.prototype.increment = function(collectionName, id) {\n  var collection = this.collections[collectionName] ||\n    (this.collections[collectionName] = {});\n  var count = (collection[id] || 0) + 1;\n  collection[id] = count;\n  return count;\n};\nCollectionCounter.prototype.decrement = function(collectionName, id) {\n  var collection = this.collections[collectionName];\n  var count = collection && collection[id];\n  if (count == null) return;\n  if (count > 1) {\n    count--;\n    collection[id] = count;\n    return count;\n  }\n  delete collection[id];\n  // Check if the collection still has any keys\n  // eslint-disable-next-line no-unused-vars\n  for (var key in collection) return 0;\n  delete this.collections[collection];\n  return 0;\n};\nCollectionCounter.prototype.toJSON = function() {\n  // Check to see if we have any keys\n  // eslint-disable-next-line no-unused-vars\n  for (var key in this.collections) {\n    return this.collections;\n  }\n  return;\n};\n","module.exports = Doc;\n\nfunction Doc(model, collectionName, id) {\n  this.collectionName = collectionName;\n  this.id = id;\n  this.collectionData = model && model.data[collectionName];\n}\n\nDoc.prototype.path = function(segments) {\n  var path = this.collectionName + '.' + this.id;\n  if (segments && segments.lenth) path += '.' + segments.join('.');\n  return path;\n};\n\nDoc.prototype._errorMessage = function(description, segments, value) {\n  return description + ' at ' + this.path(segments) + ': ' +\n    JSON.stringify(value, null, 2);\n};\n","var Doc = require('./Doc');\nvar util = require('../util');\n\nmodule.exports = LocalDoc;\n\nfunction LocalDoc(model, collectionName, id, data) {\n  Doc.call(this, model, collectionName, id);\n  this.data = data;\n  this._updateCollectionData();\n}\n\nLocalDoc.prototype = new Doc();\n\nLocalDoc.prototype._updateCollectionData = function() {\n  this.collectionData[this.id] = this.data;\n};\n\nLocalDoc.prototype.create = function(value, cb) {\n  if (this.data !== undefined) {\n    var message = this._errorMessage('create on local document with data', null, this.data);\n    var err = new Error(message);\n    return cb(err);\n  }\n  this.data = value;\n  this._updateCollectionData();\n  cb();\n};\n\nLocalDoc.prototype.set = function(segments, value, cb) {\n  function set(node, key) {\n    var previous = node[key];\n    node[key] = value;\n    return previous;\n  }\n  return this._apply(segments, set, cb);\n};\n\nLocalDoc.prototype.del = function(segments, cb) {\n  // Don't do anything if the value is already undefined, since\n  // apply creates objects as it traverses, and the del method\n  // should not create anything\n  var previous = this.get(segments);\n  if (previous === undefined) {\n    cb();\n    return;\n  }\n  function del(node, key) {\n    delete node[key];\n    return previous;\n  }\n  return this._apply(segments, del, cb);\n};\n\nLocalDoc.prototype.increment = function(segments, byNumber, cb) {\n  var self = this;\n  function validate(value) {\n    if (typeof value === 'number' || value == null) return;\n    return new TypeError(self._errorMessage(\n      'increment on non-number', segments, value\n    ));\n  }\n  function increment(node, key) {\n    var value = (node[key] || 0) + byNumber;\n    node[key] = value;\n    return value;\n  }\n  return this._validatedApply(segments, validate, increment, cb);\n};\n\nLocalDoc.prototype.push = function(segments, value, cb) {\n  function push(arr) {\n    return arr.push(value);\n  }\n  return this._arrayApply(segments, push, cb);\n};\n\nLocalDoc.prototype.unshift = function(segments, value, cb) {\n  function unshift(arr) {\n    return arr.unshift(value);\n  }\n  return this._arrayApply(segments, unshift, cb);\n};\n\nLocalDoc.prototype.insert = function(segments, index, values, cb) {\n  function insert(arr) {\n    arr.splice.apply(arr, [index, 0].concat(values));\n    return arr.length;\n  }\n  return this._arrayApply(segments, insert, cb);\n};\n\nLocalDoc.prototype.pop = function(segments, cb) {\n  function pop(arr) {\n    return arr.pop();\n  }\n  return this._arrayApply(segments, pop, cb);\n};\n\nLocalDoc.prototype.shift = function(segments, cb) {\n  function shift(arr) {\n    return arr.shift();\n  }\n  return this._arrayApply(segments, shift, cb);\n};\n\nLocalDoc.prototype.remove = function(segments, index, howMany, cb) {\n  function remove(arr) {\n    return arr.splice(index, howMany);\n  }\n  return this._arrayApply(segments, remove, cb);\n};\n\nLocalDoc.prototype.move = function(segments, from, to, howMany, cb) {\n  function move(arr) {\n    // Remove from old location\n    var values = arr.splice(from, howMany);\n    // Insert in new location\n    arr.splice.apply(arr, [to, 0].concat(values));\n    return values;\n  }\n  return this._arrayApply(segments, move, cb);\n};\n\nLocalDoc.prototype.stringInsert = function(segments, index, value, cb) {\n  var self = this;\n  function validate(value) {\n    if (typeof value === 'string' || value == null) return;\n    return new TypeError(self._errorMessage(\n      'stringInsert on non-string', segments, value\n    ));\n  }\n  function stringInsert(node, key) {\n    var previous = node[key];\n    if (previous == null) {\n      node[key] = value;\n      return previous;\n    }\n    node[key] = previous.slice(0, index) + value + previous.slice(index);\n    return previous;\n  }\n  return this._validatedApply(segments, validate, stringInsert, cb);\n};\n\nLocalDoc.prototype.stringRemove = function(segments, index, howMany, cb) {\n  var self = this;\n  function validate(value) {\n    if (typeof value === 'string' || value == null) return;\n    return new TypeError(self._errorMessage(\n      'stringRemove on non-string', segments, value\n    ));\n  }\n  function stringRemove(node, key) {\n    var previous = node[key];\n    if (previous == null) return previous;\n    if (index < 0) index += previous.length;\n    node[key] = previous.slice(0, index) + previous.slice(index + howMany);\n    return previous;\n  }\n  return this._validatedApply(segments, validate, stringRemove, cb);\n};\n\nLocalDoc.prototype.get = function(segments) {\n  return util.lookup(segments, this.data);\n};\n\n/**\n * @param {Array} segments is the array representing a path\n * @param {Function} fn(node, key) applies a mutation on node[key]\n * @return {Object} returns the return value of fn(node, key)\n */\nLocalDoc.prototype._createImplied = function(segments, fn) {\n  var node = this;\n  var key = 'data';\n  var i = 0;\n  var nextKey = segments[i++];\n  while (nextKey != null) {\n    // Get or create implied object or array\n    node = node[key] || (node[key] = /^\\d+$/.test(nextKey) ? [] : {});\n    key = nextKey;\n    nextKey = segments[i++];\n  }\n  return fn(node, key);\n};\n\nLocalDoc.prototype._apply = function(segments, fn, cb) {\n  var out = this._createImplied(segments, fn);\n  this._updateCollectionData();\n  cb();\n  return out;\n};\n\nLocalDoc.prototype._validatedApply = function(segments, validate, fn, cb) {\n  var out = this._createImplied(segments, function(node, key) {\n    var err = validate(node[key]);\n    if (err) return cb(err);\n    return fn(node, key);\n  });\n  this._updateCollectionData();\n  cb();\n  return out;\n};\n\nLocalDoc.prototype._arrayApply = function(segments, fn, cb) {\n  // Lookup a pointer to the property or nested property &\n  // return the current value or create a new array\n  var arr = this._createImplied(segments, nodeCreateArray);\n\n  if (!Array.isArray(arr)) {\n    var message = this._errorMessage(fn.name + ' on non-array', segments, arr);\n    var err = new TypeError(message);\n    return cb(err);\n  }\n  var out = fn(arr);\n  this._updateCollectionData();\n  cb();\n  return out;\n};\n\nfunction nodeCreateArray(node, key) {\n  var node = node[key] || (node[key] = []);\n  return node;\n}\n","var uuid = require('uuid');\n\nModel.INITS = [];\n\nmodule.exports = Model;\n\nfunction Model(options) {\n  this.root = this;\n\n  var inits = Model.INITS;\n  if (!options) options = {};\n  this.debug = options.debug || {};\n  for (var i = 0; i < inits.length; i++) {\n    inits[i](this, options);\n  }\n}\n\nModel.prototype.id = function() {\n  return uuid.v4();\n};\n\nModel.prototype._child = function() {\n  return new ChildModel(this);\n};\n\nModel.ChildModel = ChildModel;\n\nfunction ChildModel(model) {\n  // Shared properties should be accessed via the root. This makes inheritance\n  // cheap and easily extensible\n  this.root = model.root;\n\n  // EventEmitter methods access these properties directly, so they must be\n  // inherited manually instead of via the root\n  this._events = model._events;\n  this._maxListeners = model._maxListeners;\n\n  // Properties specific to a child instance\n  this._context = model._context;\n  this._at = model._at;\n  this._pass = model._pass;\n  this._silent = model._silent;\n  this._eventContext = model._eventContext;\n  this._preventCompose = model._preventCompose;\n}\nChildModel.prototype = new Model();\n","var util = require('../util');\nvar Model = require('./Model');\nvar defaultType = require('sharedb/lib/client').types.defaultType;\n\nmodule.exports = Query;\n\nModel.INITS.push(function(model) {\n  model.root._queries = new Queries();\n});\n\nModel.prototype.query = function(collectionName, expression, options) {\n  expression = this.sanitizeQuery(expression);\n  // DEPRECATED: Passing in a string as the third argument specifies the db\n  // option for backward compatibility\n  if (typeof options === 'string') {\n    options = {db: options};\n  }\n  var query = this.root._queries.get(collectionName, expression, options);\n  if (query) return query;\n  query = new Query(this, collectionName, expression, options);\n  this.root._queries.add(query);\n  return query;\n};\n\n// This method replaces undefined in query objects with null, because\n// undefined properties are removed in JSON stringify. This can be dangerous\n// in queries, where presenece of a property may indicate that it should be a\n// filter and absence means that all values are accepted. We aren't checking\n// for cycles, which aren't allowed in JSON, so this could throw a max call\n// stack error\nModel.prototype.sanitizeQuery = function(expression) {\n  if (expression && typeof expression === 'object') {\n    for (var key in expression) {\n      if (expression.hasOwnProperty(key)) {\n        var value = expression[key];\n        if (value === undefined) {\n          expression[key] = null;\n        } else {\n          this.sanitizeQuery(value);\n        }\n      }\n    }\n  }\n  return expression;\n};\n\n// Called during initialization of the bundle on page load.\nModel.prototype._initQueries = function(items) {\n  var queries = this.root._queries;\n  for (var i = 0; i < items.length; i++) {\n    var item = items[i];\n    var counts = item[0];\n    var collectionName = item[1];\n    var expression = item[2];\n    var results = item[3] || [];\n    var options = item[4];\n    var extra = item[5];\n    var query = new Query(this, collectionName, expression, options);\n    queries.add(query);\n    query._setExtra(extra);\n\n    var ids = [];\n    for (var resultIndex = 0; resultIndex < results.length; resultIndex++) {\n      var result = results[resultIndex];\n      if (typeof result === 'string') {\n        ids.push(result);\n        continue;\n      }\n      var data = result[0];\n      var v = result[1];\n      var id = result[2] || data.id;\n      var type = result[3];\n      ids.push(id);\n      var snapshot = {data: data, v: v, type: type};\n      this.getOrCreateDoc(collectionName, id, snapshot);\n    }\n    query._addMapIds(ids);\n    this._set(query.idsSegments, ids);\n\n    for (var countIndex = 0; countIndex < counts.length; countIndex++) {\n      var count = counts[countIndex];\n      var subscribed = count[0] || 0;\n      var fetched = count[1] || 0;\n      var contextId = count[2];\n      if (contextId) query.model.setContext(contextId);\n      while (subscribed--) {\n        query.subscribe();\n      }\n      query.fetchCount += fetched;\n      while (fetched--) {\n        query.model._context.fetchQuery(query);\n      }\n    }\n  }\n};\n\nfunction Queries() {\n  // Map is a flattened map of queries by hash. Currently used in contexts\n  this.map = {};\n  // Collections is a nested map of queries by collection then hash\n  this.collections = {};\n}\nQueries.prototype.add = function(query) {\n  this.map[query.hash] = query;\n  var collection = this.collections[query.collectionName] ||\n    (this.collections[query.collectionName] = {});\n  collection[query.hash] = query;\n};\nQueries.prototype.remove = function(query) {\n  delete this.map[query.hash];\n  var collection = this.collections[query.collectionName];\n  if (!collection) return;\n  delete collection[query.hash];\n  // Check if the collection still has any keys\n  // eslint-disable-next-line no-unused-vars\n  for (var key in collection) return;\n  delete this.collections[collection];\n};\nQueries.prototype.get = function(collectionName, expression, options) {\n  var hash = queryHash(collectionName, expression, options);\n  return this.map[hash];\n};\nQueries.prototype.toJSON = function() {\n  var out = [];\n  for (var hash in this.map) {\n    var query = this.map[hash];\n    if (query.subscribeCount || query.fetchCount) {\n      out.push(query.serialize());\n    }\n  }\n  return out;\n};\n\nfunction Query(model, collectionName, expression, options) {\n  this.model = model.pass({$query: this});\n  this.collectionName = collectionName;\n  this.expression = expression;\n  this.options = options;\n  this.hash = queryHash(collectionName, expression, options);\n  this.segments = ['$queries', this.hash];\n  this.idsSegments = ['$queries', this.hash, 'ids'];\n  this.extraSegments = ['$queries', this.hash, 'extra'];\n\n  this._pendingSubscribeCallbacks = [];\n\n  // These are used to help cleanup appropriately when calling unsubscribe and\n  // unfetch. A query won't be fully cleaned up until unfetch and unsubscribe\n  // are called the same number of times that fetch and subscribe were called.\n  this.subscribeCount = 0;\n  this.fetchCount = 0;\n\n  this.created = false;\n  this.shareQuery = null;\n\n  // idMap is checked in maybeUnload to see if the query is currently holding\n  // a reference to an id in its results set. This map is duplicative of the\n  // actual results id list stored in the model, but we are maintaining it,\n  // because otherwise maybeUnload would be looping through the entire results\n  // set of each query on the same collection for every doc checked\n  //\n  // Map of id -> true\n  this.idMap = {};\n}\n\nQuery.prototype.create = function() {\n  this.created = true;\n  this.model.root._queries.add(this);\n};\n\nQuery.prototype.destroy = function() {\n  var ids = this.getIds();\n  this.created = false;\n  if (this.shareQuery) {\n    this.shareQuery.destroy();\n    this.shareQuery = null;\n  }\n  this.model.root._queries.remove(this);\n  this.idMap = {};\n  this.model._del(this.segments);\n  this._maybeUnloadDocs(ids);\n};\n\nQuery.prototype.fetch = function(cb) {\n  cb = this.model.wrapCallback(cb);\n  this.model._context.fetchQuery(this);\n\n  this.fetchCount++;\n\n  if (!this.created) this.create();\n\n  var query = this;\n  function fetchCb(err, results, extra) {\n    if (err) return cb(err);\n    query._setExtra(extra);\n    query._setResults(results);\n    cb();\n  }\n  this.model.root.connection.createFetchQuery(\n    this.collectionName,\n    this.expression,\n    this.options,\n    fetchCb\n  );\n  return this;\n};\n\nQuery.prototype.subscribe = function(cb) {\n  cb = this.model.wrapCallback(cb);\n  this.model._context.subscribeQuery(this);\n\n  if (this.subscribeCount++) {\n    var query = this;\n    process.nextTick(function() {\n      var data = query.model._get(query.segments);\n      if (data) {\n        cb();\n      } else {\n        query._pendingSubscribeCallbacks.push(cb);\n      }\n    });\n    return this;\n  }\n\n  if (!this.created) this.create();\n\n  var options = (this.options) ? util.copy(this.options) : {};\n  options.results = this._getShareResults();\n\n  // When doing server-side rendering, we actually do a fetch the first time\n  // that subscribe is called, but keep track of the state as if subscribe\n  // were called for proper initialization in the client\n  if (this.model.root.fetchOnly) {\n    this._shareFetchedSubscribe(options, cb);\n  } else {\n    this._shareSubscribe(options, cb);\n  }\n\n  return this;\n};\n\nQuery.prototype._subscribeCb = function(cb) {\n  var query = this;\n  return function subscribeCb(err, results, extra) {\n    if (err) return query._flushSubscribeCallbacks(err, cb);\n    query._setExtra(extra);\n    query._setResults(results);\n    query._flushSubscribeCallbacks(null, cb);\n  };\n};\n\nQuery.prototype._shareFetchedSubscribe = function(options, cb) {\n  this.model.root.connection.createFetchQuery(\n    this.collectionName,\n    this.expression,\n    options,\n    this._subscribeCb(cb)\n  );\n};\n\nQuery.prototype._shareSubscribe = function(options, cb) {\n  var query = this;\n  // Sanity check, though this shouldn't happen\n  if (this.shareQuery) {\n    this.shareQuery.destroy();\n  }\n  this.shareQuery = this.model.root.connection.createSubscribeQuery(\n    this.collectionName,\n    this.expression,\n    options,\n    this._subscribeCb(cb)\n  );\n  this.shareQuery.on('insert', function(shareDocs, index) {\n    var ids = resultsIds(shareDocs);\n    query._addMapIds(ids);\n    query.model._insert(query.idsSegments, index, ids);\n  });\n  this.shareQuery.on('remove', function(shareDocs, index) {\n    var ids = resultsIds(shareDocs);\n    query._removeMapIds(ids);\n    query.model._remove(query.idsSegments, index, shareDocs.length);\n  });\n  this.shareQuery.on('move', function(shareDocs, from, to) {\n    query.model._move(query.idsSegments, from, to, shareDocs.length);\n  });\n  this.shareQuery.on('extra', function(extra) {\n    query.model._setDiffDeep(query.extraSegments, extra);\n  });\n  this.shareQuery.on('error', function(err) {\n    query.model._emitError(err, query.hash);\n  });\n};\n\nQuery.prototype._removeMapIds = function(ids) {\n  for (var i = ids.length; i--;) {\n    var id = ids[i];\n    delete this.idMap[id];\n  }\n  // Technically this isn't quite right and we might not wait the full unload\n  // delay if someone else calls maybeUnload for the same doc id. However,\n  // it is a lot easier to implement than delaying the removal until later and\n  // dealing with adds that might happen in the meantime. This will probably\n  // work to avoid thrashing subscribe/unsubscribe in expected cases\n  if (this.model.root.unloadDelay) {\n    var query = this;\n    setTimeout(function() {\n      query._maybeUnloadDocs(ids);\n    }, this.model.root.unloadDelay);\n    return;\n  }\n  this._maybeUnloadDocs(ids);\n};\nQuery.prototype._addMapIds = function(ids) {\n  for (var i = ids.length; i--;) {\n    var id = ids[i];\n    this.idMap[id] = true;\n  }\n};\nQuery.prototype._diffMapIds = function(ids) {\n  var addedIds = [];\n  var removedIds = [];\n  var newMap = {};\n  for (var i = ids.length; i--;) {\n    var id = ids[i];\n    newMap[id] = true;\n    if (this.idMap[id]) continue;\n    addedIds.push(id);\n  }\n  for (var id in this.idMap) {\n    if (newMap[id]) continue;\n    removedIds.push(id);\n  }\n  if (addedIds.length) this._addMapIds(addedIds);\n  if (removedIds.length) this._removeMapIds(removedIds);\n};\nQuery.prototype._setExtra = function(extra) {\n  if (extra === undefined) return;\n  this.model._setDiffDeep(this.extraSegments, extra);\n};\nQuery.prototype._setResults = function(results) {\n  var ids = resultsIds(results);\n  this._setResultIds(ids);\n};\nQuery.prototype._setResultIds = function(ids) {\n  this._diffMapIds(ids);\n  this.model._setArrayDiff(this.idsSegments, ids);\n};\nQuery.prototype._maybeUnloadDocs = function(ids) {\n  for (var i = 0; i < ids.length; i++) {\n    var id = ids[i];\n    this.model._maybeUnloadDoc(this.collectionName, id);\n  }\n};\n\n// Flushes `_pendingSubscribeCallbacks`, calling each callback in the array,\n// with an optional error to pass into each. `_pendingSubscribeCallbacks` will\n// be empty after this runs.\nQuery.prototype._flushSubscribeCallbacks = function(err, cb) {\n  cb(err);\n  var pendingCallback;\n  while ((pendingCallback = this._pendingSubscribeCallbacks.shift())) {\n    pendingCallback(err);\n  }\n};\n\nQuery.prototype.unfetch = function(cb) {\n  cb = this.model.wrapCallback(cb);\n  this.model._context.unfetchQuery(this);\n\n  // No effect if the query is not currently fetched\n  if (!this.fetchCount) {\n    cb();\n    return this;\n  }\n\n  var query = this;\n  if (this.model.root.unloadDelay) {\n    setTimeout(finishUnfetchQuery, this.model.root.unloadDelay);\n  } else {\n    finishUnfetchQuery();\n  }\n  function finishUnfetchQuery() {\n    var count = --query.fetchCount;\n    if (count) return cb(null, count);\n    // Cleanup when no fetches or subscribes remain\n    if (!query.subscribeCount) query.destroy();\n    cb(null, 0);\n  }\n  return this;\n};\n\nQuery.prototype.unsubscribe = function(cb) {\n  cb = this.model.wrapCallback(cb);\n  this.model._context.unsubscribeQuery(this);\n\n  // No effect if the query is not currently subscribed\n  if (!this.subscribeCount) {\n    cb();\n    return this;\n  }\n\n  var query = this;\n  if (this.model.root.unloadDelay) {\n    setTimeout(finishUnsubscribeQuery, this.model.root.unloadDelay);\n  } else {\n    finishUnsubscribeQuery();\n  }\n  function finishUnsubscribeQuery() {\n    var count = --query.subscribeCount;\n    if (count) return cb(null, count);\n\n    if (query.shareQuery) {\n      query.shareQuery.destroy();\n      query.shareQuery = null;\n    }\n\n    unsubscribeQueryCallback();\n  }\n  function unsubscribeQueryCallback(err) {\n    if (err) return cb(err);\n    // Cleanup when no fetches or subscribes remain\n    if (!query.fetchCount) query.destroy();\n    cb(null, 0);\n  }\n  return this;\n};\n\nQuery.prototype._getShareResults = function() {\n  var ids = this.model._get(this.idsSegments);\n  if (!ids) return;\n\n  var collection = this.model.getCollection(this.collectionName);\n  if (!collection) return;\n\n  var results = [];\n  for (var i = 0; i < ids.length; i++) {\n    var id = ids[i];\n    var doc = collection.docs[id];\n    results.push(doc && doc.shareDoc);\n  }\n  return results;\n};\n\nQuery.prototype.get = function() {\n  var results = [];\n  var data = this.model._get(this.segments);\n  if (!data) {\n    console.warn('You must fetch or subscribe to a query before getting its results.');\n    return results;\n  }\n  var ids = data.ids;\n  if (!ids) return results;\n\n  var collection = this.model.getCollection(this.collectionName);\n  for (var i = 0, l = ids.length; i < l; i++) {\n    var id = ids[i];\n    var doc = collection && collection.docs[id];\n    results.push(doc && doc.get());\n  }\n  return results;\n};\n\nQuery.prototype.getIds = function() {\n  return this.model._get(this.idsSegments) || [];\n};\n\nQuery.prototype.getExtra = function() {\n  return this.model._get(this.extraSegments);\n};\n\nQuery.prototype.ref = function(from) {\n  var idsPath = this.idsSegments.join('.');\n  return this.model.refList(from, this.collectionName, idsPath);\n};\n\nQuery.prototype.refIds = function(from) {\n  var idsPath = this.idsSegments.join('.');\n  return this.model.root.ref(from, idsPath);\n};\n\nQuery.prototype.refExtra = function(from, relPath) {\n  var extraPath = this.extraSegments.join('.');\n  if (relPath) extraPath += '.' + relPath;\n  return this.model.root.ref(from, extraPath);\n};\n\nQuery.prototype.serialize = function() {\n  var ids = this.getIds();\n  var collection = this.model.getCollection(this.collectionName);\n  var results;\n  if (collection) {\n    results = [];\n    for (var i = 0; i < ids.length; i++) {\n      var id = ids[i];\n      var doc = collection.docs[id];\n      if (doc) {\n        delete collection.docs[id];\n        var data = doc.shareDoc.data;\n        var result = [data, doc.shareDoc.version];\n        if (!data || data.id !== id) {\n          result[2] = id;\n        }\n        if (doc.shareDoc.type !== defaultType) {\n          result[3] = doc.shareDoc.type && doc.shareDoc.type.name;\n        }\n        results.push(result);\n      } else {\n        results.push(id);\n      }\n    }\n  }\n  var counts = [];\n  var contexts = this.model.root._contexts;\n  for (var key in contexts) {\n    var context = contexts[key];\n    var subscribed = context.subscribedQueries[this.hash] || 0;\n    var fetched = context.fetchedQueries[this.hash] || 0;\n    if (subscribed || fetched) {\n      if (key !== 'root') {\n        counts.push([subscribed, fetched, key]);\n      } else if (fetched) {\n        counts.push([subscribed, fetched]);\n      } else {\n        counts.push([subscribed]);\n      }\n    }\n  }\n  var serialized = [\n    counts,\n    this.collectionName,\n    this.expression,\n    results,\n    this.options,\n    this.getExtra()\n  ];\n  while (serialized[serialized.length - 1] == null) {\n    serialized.pop();\n  }\n  return serialized;\n};\n\nfunction queryHash(collectionName, expression, options) {\n  var args = [collectionName, expression, options];\n  return JSON.stringify(args).replace(/\\./g, '|');\n}\n\nfunction resultsIds(results) {\n  var ids = [];\n  for (var i = 0; i < results.length; i++) {\n    var shareDoc = results[i];\n    ids.push(shareDoc.id);\n  }\n  return ids;\n}\n","/**\n * RemoteDoc adapts the ShareJS operation protocol to Racer's mutator\n * interface.\n *\n * 1. It maps Racer's mutator methods to outgoing ShareJS operations.\n * 2. It maps incoming ShareJS operations to Racer events.\n */\n\nvar Doc = require('./Doc');\nvar util = require('../util');\n\nmodule.exports = RemoteDoc;\n\nfunction RemoteDoc(model, collectionName, id, snapshot, collection) {\n  // This is a bit messy, but we have to immediately register this doc on the\n  // collection that added it, so that when we create the shareDoc and the\n  // connection emits the 'doc' event, we'll find this doc instead of\n  // creating a new one\n  if (collection) collection.docs[id] = this;\n\n  Doc.call(this, model, collectionName, id);\n  this.model = model.pass({$remote: true});\n  this.debugMutations = model.root.debug.remoteMutations;\n\n  // Get or create the Share document. Note that we must have already added\n  // this doc to the collection to avoid creating a duplicate doc\n  this.shareDoc = model.root.connection.get(collectionName, id);\n  this.shareDoc.ingestSnapshot(snapshot);\n  this._initShareDoc();\n}\n\nRemoteDoc.prototype = new Doc();\n\nRemoteDoc.prototype._initShareDoc = function() {\n  var doc = this;\n  var model = this.model;\n  var collectionName = this.collectionName;\n  var id = this.id;\n  var shareDoc = this.shareDoc;\n  // Override submitOp to disable all writes and perform a dry-run\n  if (model.root.debug.disableSubmit) {\n    shareDoc.submitOp = function() {};\n    shareDoc.create = function() {};\n    shareDoc.del = function() {};\n  }\n  // Subscribe to doc events\n  shareDoc.on('op', function(op, isLocal) {\n    // Don't emit on local operations, since they are emitted in the mutator\n    if (isLocal) return;\n    doc._updateCollectionData();\n    doc._onOp(op);\n  });\n  shareDoc.on('del', function(previous, isLocal) {\n    // Calling the shareDoc.del method does not emit an operation event,\n    // so we create the appropriate event here.\n    if (isLocal) return;\n    delete doc.collectionData[id];\n    model.emit('change', [collectionName, id], [undefined, previous, model._pass]);\n  });\n  shareDoc.on('create', function(isLocal) {\n    // Local creates should not emit an event, since they only happen\n    // implicitly as a result of another mutation, and that operation will\n    // emit the appropriate event. Remote creates can set the snapshot data\n    // without emitting an operation event, so an event needs to be emitted\n    // for them.\n    if (isLocal) return;\n    doc._updateCollectionData();\n    var value = shareDoc.data;\n    model.emit('change', [collectionName, id], [value, undefined, model._pass]);\n  });\n  shareDoc.on('error', function(err) {\n    model._emitError(err, collectionName + '.' + id);\n  });\n  shareDoc.on('load', function() {\n    doc._updateCollectionData();\n    var value = shareDoc.data;\n    // If we subscribe to an uncreated document, no need to emit 'load' event\n    if (value === undefined) return;\n    model.emit('load', [collectionName, id], [value, model._pass]);\n  });\n  this._updateCollectionData();\n};\n\nRemoteDoc.prototype._updateCollectionData = function() {\n  var data = this.shareDoc.data;\n  if (typeof data === 'object' && !Array.isArray(data) && data !== null) {\n    data.id = this.id;\n  }\n  this.collectionData[this.id] = data;\n};\n\nRemoteDoc.prototype.create = function(value, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc create', this.path(), value);\n  }\n  // We copy the snapshot data at time of create to prevent the id added\n  // outside of ShareJS from getting stored in the data\n  var data = util.deepCopy(value);\n  if (data) delete data.id;\n  this.shareDoc.create(data, cb);\n  // The id value will get added to the data that was passed in\n  this.shareDoc.data = value;\n  this._updateCollectionData();\n  this.model._context.createDoc(this.collectionName, this.id);\n  return;\n};\n\nRemoteDoc.prototype.set = function(segments, value, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc set', this.path(segments), value);\n  }\n  var previous = this._createImplied(segments);\n  var lastSegment = segments[segments.length - 1];\n  if (previous instanceof ImpliedOp) {\n    previous.value[lastSegment] = value;\n    this.shareDoc.submitOp(previous.op, cb);\n    this._updateCollectionData();\n    return;\n  }\n  var op = (util.isArrayIndex(lastSegment)) ?\n    [new ListReplaceOp(segments.slice(0, -1), lastSegment, previous, value)] :\n    [new ObjectReplaceOp(segments, previous, value)];\n  this.shareDoc.submitOp(op, cb);\n  this._updateCollectionData();\n  return previous;\n};\n\nRemoteDoc.prototype.del = function(segments, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc del', this.path(segments));\n  }\n  if (segments.length === 0) {\n    var previous = this.get();\n    this.shareDoc.del(cb);\n    delete this.collectionData[this.id];\n    return previous;\n  }\n  // Don't do anything if the value is already undefined, since\n  // the del method should not create anything\n  var previous = this.get(segments);\n  if (previous === undefined) {\n    cb();\n    return;\n  }\n  var op = [new ObjectDeleteOp(segments, previous)];\n  this.shareDoc.submitOp(op, cb);\n  this._updateCollectionData();\n  return previous;\n};\n\nRemoteDoc.prototype.increment = function(segments, byNumber, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc increment', this.path(segments), byNumber);\n  }\n  var previous = this._createImplied(segments);\n  if (previous instanceof ImpliedOp) {\n    var lastSegment = segments[segments.length - 1];\n    previous.value[lastSegment] = byNumber;\n    this.shareDoc.submitOp(previous.op, cb);\n    this._updateCollectionData();\n    return byNumber;\n  }\n  if (previous == null) {\n    var lastSegment = segments[segments.length - 1];\n    var op = (util.isArrayIndex(lastSegment)) ?\n      [new ListInsertOp(segments.slice(0, -1), lastSegment, byNumber)] :\n      [new ObjectInsertOp(segments, byNumber)];\n    this.shareDoc.submitOp(op, cb);\n    this._updateCollectionData();\n    return byNumber;\n  }\n  var op = [new IncrementOp(segments, byNumber)];\n  this.shareDoc.submitOp(op, cb);\n  this._updateCollectionData();\n  return previous + byNumber;\n};\n\nRemoteDoc.prototype.push = function(segments, value, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc push', this.path(segments), value);\n  }\n  var shareDoc = this.shareDoc;\n  function push(arr, fnCb) {\n    var op = [new ListInsertOp(segments, arr.length, value)];\n    shareDoc.submitOp(op, fnCb);\n    return arr.length;\n  }\n  return this._arrayApply(segments, push, cb);\n};\n\nRemoteDoc.prototype.unshift = function(segments, value, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc unshift', this.path(segments), value);\n  }\n  var shareDoc = this.shareDoc;\n  function unshift(arr, fnCb) {\n    var op = [new ListInsertOp(segments, 0, value)];\n    shareDoc.submitOp(op, fnCb);\n    return arr.length;\n  }\n  return this._arrayApply(segments, unshift, cb);\n};\n\nRemoteDoc.prototype.insert = function(segments, index, values, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc insert', this.path(segments), index, values);\n  }\n  var shareDoc = this.shareDoc;\n  function insert(arr, fnCb) {\n    var op = createInsertOp(segments, index, values);\n    shareDoc.submitOp(op, fnCb);\n    return arr.length;\n  }\n  return this._arrayApply(segments, insert, cb);\n};\n\nfunction createInsertOp(segments, index, values) {\n  if (!Array.isArray(values)) {\n    return [new ListInsertOp(segments, index, values)];\n  }\n  var op = [];\n  for (var i = 0, len = values.length; i < len; i++) {\n    op.push(new ListInsertOp(segments, index++, values[i]));\n  }\n  return op;\n}\n\nRemoteDoc.prototype.pop = function(segments, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc pop', this.path(segments));\n  }\n  var shareDoc = this.shareDoc;\n  function pop(arr, fnCb) {\n    var index = arr.length - 1;\n    var value = arr[index];\n    var op = [new ListRemoveOp(segments, index, value)];\n    shareDoc.submitOp(op, fnCb);\n    return value;\n  }\n  return this._arrayApply(segments, pop, cb);\n};\n\nRemoteDoc.prototype.shift = function(segments, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc shift', this.path(segments));\n  }\n  var shareDoc = this.shareDoc;\n  function shift(arr, fnCb) {\n    var value = arr[0];\n    var op = [new ListRemoveOp(segments, 0, value)];\n    shareDoc.submitOp(op, fnCb);\n    return value;\n  }\n  return this._arrayApply(segments, shift, cb);\n};\n\nRemoteDoc.prototype.remove = function(segments, index, howMany, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc remove', this.path(segments), index, howMany);\n  }\n  var shareDoc = this.shareDoc;\n  function remove(arr, fnCb) {\n    var values = arr.slice(index, index + howMany);\n    var op = [];\n    for (var i = 0, len = values.length; i < len; i++) {\n      op.push(new ListRemoveOp(segments, index, values[i]));\n    }\n    shareDoc.submitOp(op, fnCb);\n    return values;\n  }\n  return this._arrayApply(segments, remove, cb);\n};\n\nRemoteDoc.prototype.move = function(segments, from, to, howMany, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc move', this.path(segments), from, to, howMany);\n  }\n  var shareDoc = this.shareDoc;\n  function move(arr, fnCb) {\n    // Get the return value\n    var values = arr.slice(from, from + howMany);\n\n    // Build an op that moves each item individually\n    var op = [];\n    for (var i = 0; i < howMany; i++) {\n      op.push(new ListMoveOp(segments, (from < to) ? from : from + howMany - 1, (from < to) ? to + howMany - 1 : to));\n    }\n    shareDoc.submitOp(op, fnCb);\n\n    return values;\n  }\n  return this._arrayApply(segments, move, cb);\n};\n\nRemoteDoc.prototype.stringInsert = function(segments, index, value, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc stringInsert', this.path(segments), index, value);\n  }\n  var previous = this._createImplied(segments);\n  if (previous instanceof ImpliedOp) {\n    var lastSegment = segments[segments.length - 1];\n    previous.value[lastSegment] = value;\n    this.shareDoc.submitOp(previous.op, cb);\n    this._updateCollectionData();\n    return;\n  }\n  if (previous == null) {\n    var lastSegment = segments[segments.length - 1];\n    var op = (util.isArrayIndex(lastSegment)) ?\n      [new ListInsertOp(segments.slice(0, -1), lastSegment, value)] :\n      [new ObjectInsertOp(segments, value)];\n    this.shareDoc.submitOp(op, cb);\n    this._updateCollectionData();\n    return previous;\n  }\n  var op = [new StringInsertOp(segments, index, value)];\n  this.shareDoc.submitOp(op, cb);\n  this._updateCollectionData();\n  return previous;\n};\n\nRemoteDoc.prototype.stringRemove = function(segments, index, howMany, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc stringRemove', this.path(segments), index, howMany);\n  }\n  var previous = this._createImplied(segments);\n  if (previous instanceof ImpliedOp) return;\n  if (previous == null) return previous;\n  var removed = previous.slice(index, index + howMany);\n  var op = [new StringRemoveOp(segments, index, removed)];\n  this.shareDoc.submitOp(op, cb);\n  this._updateCollectionData();\n  return previous;\n};\n\nRemoteDoc.prototype.subtypeSubmit = function(segments, subtype, subtypeOp, cb) {\n  if (this.debugMutations) {\n    console.log('RemoteDoc subtypeSubmit', this.path(segments), subtype, subtypeOp);\n  }\n  var previous = this._createImplied(segments);\n  if (previous instanceof ImpliedOp) {\n    this.shareDoc.submitOp(previous.op);\n    previous = undefined;\n  }\n  var op = new SubtypeOp(segments, subtype, subtypeOp);\n  this.shareDoc.submitOp(op, cb);\n  this._updateCollectionData();\n  return previous;\n};\n\nRemoteDoc.prototype.get = function(segments) {\n  return util.lookup(segments, this.shareDoc.data);\n};\n\nRemoteDoc.prototype._createImplied = function(segments) {\n  if (!this.shareDoc.type) {\n    throw new Error('Mutation on uncreated remote document');\n  }\n  var parent = this.shareDoc;\n  var key = 'data';\n  var node = parent[key];\n  var i = 0;\n  var nextKey = segments[i++];\n  var op, value;\n  while (nextKey != null) {\n    if (!node) {\n      if (op) {\n        value = value[key] = util.isArrayIndex(nextKey) ? [] : {};\n      } else {\n        value = util.isArrayIndex(nextKey) ? [] : {};\n        if (Array.isArray(parent)) {\n          if (key >= parent.length) {\n            op = new ListInsertOp(segments.slice(0, i - 2), key, value);\n          } else {\n            op = new ListReplaceOp(segments.slice(0, i - 2), key, node, value);\n          }\n        } else {\n          op = new ObjectInsertOp(segments.slice(0, i - 1), value);\n        }\n      }\n      node = value;\n    }\n    parent = node;\n    key = nextKey;\n    node = parent[key];\n    nextKey = segments[i++];\n  }\n  if (op) return new ImpliedOp(op, value);\n  return node;\n};\n\nfunction ImpliedOp(op, value) {\n  this.op = op;\n  this.value = value;\n}\n\nRemoteDoc.prototype._arrayApply = function(segments, fn, cb) {\n  var arr = this._createImplied(segments);\n  if (arr instanceof ImpliedOp) {\n    this.shareDoc.submitOp(arr.op);\n    arr = this.get(segments);\n  }\n  if (arr == null) {\n    var lastSegment = segments[segments.length - 1];\n    var op = (util.isArrayIndex(lastSegment)) ?\n      [new ListInsertOp(segments.slice(0, -1), lastSegment, [])] :\n      [new ObjectInsertOp(segments, [])];\n    this.shareDoc.submitOp(op);\n    arr = this.get(segments);\n  }\n\n  if (!Array.isArray(arr)) {\n    var message = this._errorMessage(fn.name + ' on non-array', segments, arr);\n    var err = new TypeError(message);\n    return cb(err);\n  }\n  var out = fn(arr, cb);\n  this._updateCollectionData();\n  return out;\n};\n\nRemoteDoc.prototype._onOp = function(op) {\n  var item;\n  if (op.length === 1) {\n    // ShareDB docs shatter json0 ops into single components during apply\n    item = op[0];\n  } else if (op.length === 0) {\n    // Ignore no-ops\n    return;\n  } else {\n    try {\n      op = JSON.stringify(op);\n    } catch (err) {}\n    throw new Error('Received op with multiple components from ShareDB ' + op);\n  }\n  var segments = [this.collectionName, this.id].concat(item.p);\n  var model = this.model;\n\n  // ObjectReplaceOp, ObjectInsertOp, or ObjectDeleteOp\n  if (defined(item.oi) || defined(item.od)) {\n    var value = item.oi;\n    var previous = item.od;\n    model.emit('change', segments, [value, previous, model._pass]);\n\n  // ListReplaceOp\n  } else if (defined(item.li) && defined(item.ld)) {\n    var value = item.li;\n    var previous = item.ld;\n    model.emit('change', segments, [value, previous, model._pass]);\n\n  // ListInsertOp\n  } else if (defined(item.li)) {\n    var index = segments[segments.length - 1];\n    var values = [item.li];\n    model.emit('insert', segments.slice(0, -1), [index, values, model._pass]);\n\n  // ListRemoveOp\n  } else if (defined(item.ld)) {\n    var index = segments[segments.length - 1];\n    var removed = [item.ld];\n    model.emit('remove', segments.slice(0, -1), [index, removed, model._pass]);\n\n  // ListMoveOp\n  } else if (defined(item.lm)) {\n    var from = segments[segments.length - 1];\n    var to = item.lm;\n    var howMany = 1;\n    model.emit('move', segments.slice(0, -1), [from, to, howMany, model._pass]);\n\n  // StringInsertOp\n  } else if (defined(item.si)) {\n    var index = segments[segments.length - 1];\n    var text = item.si;\n    segments = segments.slice(0, -1);\n    var value = model._get(segments);\n    var previous = value.slice(0, index) + value.slice(index + text.length);\n    var pass = model.pass({$stringInsert: {index: index, text: text}})._pass;\n    model.emit('change', segments, [value, previous, pass]);\n\n  // StringRemoveOp\n  } else if (defined(item.sd)) {\n    var index = segments[segments.length - 1];\n    var text = item.sd;\n    var howMany = text.length;\n    segments = segments.slice(0, -1);\n    var value = model._get(segments);\n    var previous = value.slice(0, index) + text + value.slice(index);\n    var pass = model.pass({$stringRemove: {index: index, howMany: howMany}})._pass;\n    model.emit('change', segments, [value, previous, pass]);\n\n  // IncrementOp\n  } else if (defined(item.na)) {\n    var value = this.get(item.p);\n    var previous = value - item.na;\n    model.emit('change', segments, [value, previous, model._pass]);\n\n  // SubtypeOp\n  } else if (defined(item.t)) {\n    var value = this.get(item.p);\n    // Since this is generic to all subtypes, we don't know how to get a copy\n    // of the previous value efficiently. We could make a copy eagerly, but\n    // given that embedded types are likely to be used for custom editors,\n    // we'll assume they primarily use the returned op and are unlikely to\n    // need the previous snapshot data\n    var previous = undefined;\n    var type = item.t;\n    var op = item.o;\n    var pass = model.pass({$subtype: {type: type, op: op}})._pass;\n    model.emit('change', segments, [value, previous, pass]);\n  }\n};\n\nfunction ObjectReplaceOp(segments, before, after) {\n  this.p = util.castSegments(segments);\n  this.od = before;\n  this.oi = (after === undefined) ? null : after;\n}\nfunction ObjectInsertOp(segments, value) {\n  this.p = util.castSegments(segments);\n  this.oi = (value === undefined) ? null : value;\n}\nfunction ObjectDeleteOp(segments, value) {\n  this.p = util.castSegments(segments);\n  this.od = (value === undefined) ? null : value;\n}\nfunction ListReplaceOp(segments, index, before, after) {\n  this.p = util.castSegments(segments.concat(index));\n  this.ld = before;\n  this.li = (after === undefined) ? null : after;\n}\nfunction ListInsertOp(segments, index, value) {\n  this.p = util.castSegments(segments.concat(index));\n  this.li = (value === undefined) ? null : value;\n}\nfunction ListRemoveOp(segments, index, value) {\n  this.p = util.castSegments(segments.concat(index));\n  this.ld = (value === undefined) ? null : value;\n}\nfunction ListMoveOp(segments, from, to) {\n  this.p = util.castSegments(segments.concat(from));\n  this.lm = to;\n}\nfunction StringInsertOp(segments, index, value) {\n  this.p = util.castSegments(segments.concat(index));\n  this.si = value;\n}\nfunction StringRemoveOp(segments, index, value) {\n  this.p = util.castSegments(segments.concat(index));\n  this.sd = value;\n}\nfunction IncrementOp(segments, byNumber) {\n  this.p = util.castSegments(segments);\n  this.na = byNumber;\n}\nfunction SubtypeOp(segments, subtype, subtypeOp) {\n  this.p = util.castSegments(segments);\n  this.t = subtype;\n  this.o = subtypeOp;\n}\n\nfunction defined(value) {\n  return value !== undefined;\n}\n","var Model = require('./Model');\nvar LocalDoc = require('./LocalDoc');\nvar util = require('../util');\n\nfunction CollectionMap() {}\nfunction ModelData() {}\nfunction DocMap() {}\nfunction CollectionData() {}\n\nModel.INITS.push(function(model) {\n  model.root.collections = new CollectionMap();\n  model.root.data = new ModelData();\n});\n\nModel.prototype.getCollection = function(collectionName) {\n  return this.root.collections[collectionName];\n};\nModel.prototype.getDoc = function(collectionName, id) {\n  var collection = this.root.collections[collectionName];\n  return collection && collection.docs[id];\n};\nModel.prototype.get = function(subpath) {\n  var segments = this._splitPath(subpath);\n  return this._get(segments);\n};\nModel.prototype._get = function(segments) {\n  return util.lookup(segments, this.root.data);\n};\nModel.prototype.getCopy = function(subpath) {\n  var segments = this._splitPath(subpath);\n  return this._getCopy(segments);\n};\nModel.prototype._getCopy = function(segments) {\n  var value = this._get(segments);\n  return util.copy(value);\n};\nModel.prototype.getDeepCopy = function(subpath) {\n  var segments = this._splitPath(subpath);\n  return this._getDeepCopy(segments);\n};\nModel.prototype._getDeepCopy = function(segments) {\n  var value = this._get(segments);\n  return util.deepCopy(value);\n};\nModel.prototype.getOrCreateCollection = function(name) {\n  var collection = this.root.collections[name];\n  if (collection) return collection;\n  var Doc = this._getDocConstructor(name);\n  collection = new Collection(this.root, name, Doc);\n  this.root.collections[name] = collection;\n  return collection;\n};\nModel.prototype._getDocConstructor = function() {\n  // Only create local documents. This is overriden in ./connection.js, so that\n  // the RemoteDoc behavior can be selectively included\n  return LocalDoc;\n};\n\n/**\n * Returns an existing document with id in a collection. If the document does\n * not exist, then creates the document with id in a collection and returns the\n * new document.\n * @param {String} collectionName\n * @param {String} id\n * @param {Object} [data] data to create if doc with id does not exist in collection\n */\nModel.prototype.getOrCreateDoc = function(collectionName, id, data) {\n  var collection = this.getOrCreateCollection(collectionName);\n  return collection.docs[id] || collection.add(id, data);\n};\n\n/**\n * @param {String} subpath\n */\nModel.prototype.destroy = function(subpath) {\n  var segments = this._splitPath(subpath);\n  // Silently remove all types of listeners within subpath\n  var silentModel = this.silent();\n  silentModel.removeAllListeners(null, subpath);\n  silentModel._removeAllRefs(segments);\n  silentModel._stopAll(segments);\n  silentModel._removeAllFilters(segments);\n  // Silently remove all model data within subpath\n  if (segments.length === 0) {\n    this.root.collections = new CollectionMap();\n    // Delete each property of data instead of creating a new object so that\n    // it is possible to continue using a reference to the original data object\n    var data = this.root.data;\n    for (var key in data) {\n      delete data[key];\n    }\n  } else if (segments.length === 1) {\n    var collection = this.getCollection(segments[0]);\n    collection && collection.destroy();\n  } else {\n    silentModel._del(segments);\n  }\n};\n\nfunction Collection(model, name, Doc) {\n  this.model = model;\n  this.name = name;\n  this.Doc = Doc;\n  this.docs = new DocMap();\n  this.data = model.data[name] = new CollectionData();\n}\n\n/**\n * Adds a document with `id` and `data` to `this` Collection.\n * @param {String} id\n * @param {Object} data\n * @return {LocalDoc|RemoteDoc} doc\n */\nCollection.prototype.add = function(id, data) {\n  var doc = new this.Doc(this.model, this.name, id, data, this);\n  this.docs[id] = doc;\n  return doc;\n};\nCollection.prototype.destroy = function() {\n  delete this.model.collections[this.name];\n  delete this.model.data[this.name];\n};\n\n/**\n * Removes the document with `id` from `this` Collection. If there are no more\n * documents in the Collection after the given document is removed, then this\n * also destroys the Collection.\n * @param {String} id\n */\nCollection.prototype.remove = function(id) {\n  delete this.docs[id];\n  delete this.data[id];\n  if (noKeys(this.docs)) this.destroy();\n};\n\n/**\n * Returns an object that maps doc ids to fully resolved documents.\n * @return {Object}\n */\nCollection.prototype.get = function() {\n  return this.data;\n};\n\nfunction noKeys(object) {\n  // eslint-disable-next-line no-unused-vars\n  for (var key in object) {\n    return false;\n  }\n  return true;\n}\n","var Connection = require('sharedb/lib/client').Connection;\nvar Model = require('./Model');\nvar LocalDoc = require('./LocalDoc');\nvar RemoteDoc = require('./RemoteDoc');\n\nModel.INITS.push(function(model) {\n  model.root._preventCompose = false;\n});\n\nModel.prototype.preventCompose = function() {\n  var model = this._child();\n  model._preventCompose = true;\n  return model;\n};\n\nModel.prototype.allowCompose = function() {\n  var model = this._child();\n  model._preventCompose = false;\n  return model;\n};\n\nModel.prototype.createConnection = function(bundle) {\n  // Model::_createSocket should be defined by the socket plugin\n  this.root.socket = this._createSocket(bundle);\n\n  // The Share connection will bind to the socket by defining the onopen,\n  // onmessage, etc. methods\n  var model = this;\n  this.root.connection = new Connection(this.root.socket);\n  this.root.connection.on('state', function(state, reason) {\n    model._setDiff(['$connection', 'state'], state);\n    model._setDiff(['$connection', 'reason'], reason);\n  });\n  this._set(['$connection', 'state'], 'connected');\n\n  this._finishCreateConnection();\n};\n\nModel.prototype._finishCreateConnection = function() {\n  var model = this;\n  this.root.connection.on('error', function(err) {\n    model._emitError(err);\n  });\n  // Share docs can be created by queries, so we need to register them\n  // with Racer as soon as they are created to capture their events\n  this.root.connection.on('doc', function(shareDoc) {\n    model.getOrCreateDoc(shareDoc.collection, shareDoc.id);\n  });\n};\n\nModel.prototype.connect = function() {\n  this.root.socket.open();\n};\nModel.prototype.disconnect = function() {\n  this.root.socket.close();\n};\nModel.prototype.reconnect = function() {\n  this.disconnect();\n  this.connect();\n};\n// Clean delayed disconnect\nModel.prototype.close = function(cb) {\n  cb = this.wrapCallback(cb);\n  var model = this;\n  this.whenNothingPending(function() {\n    model.root.socket.close();\n    cb();\n  });\n};\n\n// Returns a reference to the ShareDB agent if it is connected directly on the\n// server. Will return null if the ShareDB connection has been disconnected or\n// if we are not in the same process and we do not have a reference to the\n// server-side agent object\nModel.prototype.getAgent = function() {\n  return this.root.connection.agent;\n};\n\nModel.prototype._isLocal = function(name) {\n  // Whether the collection is local or remote is determined by its name.\n  // Collections starting with an underscore ('_') are for user-defined local\n  // collections, those starting with a dollar sign ('$'') are for\n  // framework-defined local collections, and all others are remote.\n  var firstCharcter = name.charAt(0);\n  return firstCharcter === '_' || firstCharcter === '$';\n};\n\nModel.prototype._getDocConstructor = function(name) {\n  return (this._isLocal(name)) ? LocalDoc : RemoteDoc;\n};\n\nModel.prototype.hasPending = function() {\n  return this.root.connection.hasPending();\n};\nModel.prototype.hasWritePending = function() {\n  return this.root.connection.hasWritePending();\n};\nModel.prototype.whenNothingPending = function(cb) {\n  return this.root.connection.whenNothingPending(cb);\n};\n","/**\n * Contexts are useful for keeping track of the origin of subscribes.\n */\n\nvar Model = require('./Model');\nvar CollectionCounter = require('./CollectionCounter');\n\nModel.INITS.push(function(model) {\n  model.root._contexts = new Contexts();\n  model.root.setContext('root');\n});\n\nModel.prototype.context = function(id) {\n  var model = this._child();\n  model.setContext(id);\n  return model;\n};\n\nModel.prototype.setContext = function(id) {\n  this._context = this.getOrCreateContext(id);\n};\n\nModel.prototype.getOrCreateContext = function(id) {\n  var context = this.root._contexts[id] ||\n    (this.root._contexts[id] = new Context(this, id));\n  return context;\n};\n\nModel.prototype.unload = function(id) {\n  var context = (id) ? this.root._contexts[id] : this._context;\n  context && context.unload();\n};\n\nModel.prototype.unloadAll = function() {\n  var contexts = this.root._contexts;\n  for (var key in contexts) {\n    contexts[key].unload();\n  }\n};\n\nfunction Contexts() {}\n\nfunction FetchedQueries() {}\nfunction SubscribedQueries() {}\n\nfunction Context(model, id) {\n  this.model = model;\n  this.id = id;\n  this.fetchedDocs = new CollectionCounter();\n  this.subscribedDocs = new CollectionCounter();\n  this.createdDocs = new CollectionCounter();\n  this.fetchedQueries = new FetchedQueries();\n  this.subscribedQueries = new SubscribedQueries();\n}\n\nContext.prototype.toJSON = function() {\n  var fetchedDocs = this.fetchedDocs.toJSON();\n  var subscribedDocs = this.subscribedDocs.toJSON();\n  var createdDocs = this.createdDocs.toJSON();\n  if (!fetchedDocs && !subscribedDocs && !createdDocs) return;\n  return {\n    fetchedDocs: fetchedDocs,\n    subscribedDocs: subscribedDocs,\n    createdDocs: createdDocs\n  };\n};\n\nContext.prototype.fetchDoc = function(collectionName, id) {\n  this.fetchedDocs.increment(collectionName, id);\n};\nContext.prototype.subscribeDoc = function(collectionName, id) {\n  this.subscribedDocs.increment(collectionName, id);\n};\nContext.prototype.unfetchDoc = function(collectionName, id) {\n  this.fetchedDocs.decrement(collectionName, id);\n};\nContext.prototype.unsubscribeDoc = function(collectionName, id) {\n  this.subscribedDocs.decrement(collectionName, id);\n};\nContext.prototype.createDoc = function(collectionName, id) {\n  this.createdDocs.increment(collectionName, id);\n};\nContext.prototype.fetchQuery = function(query) {\n  mapIncrement(this.fetchedQueries, query.hash);\n};\nContext.prototype.subscribeQuery = function(query) {\n  mapIncrement(this.subscribedQueries, query.hash);\n};\nContext.prototype.unfetchQuery = function(query) {\n  mapDecrement(this.fetchedQueries, query.hash);\n};\nContext.prototype.unsubscribeQuery = function(query) {\n  mapDecrement(this.subscribedQueries, query.hash);\n};\nfunction mapIncrement(map, key) {\n  map[key] = (map[key] || 0) + 1;\n}\nfunction mapDecrement(map, key) {\n  map[key] && map[key]--;\n  if (!map[key]) delete map[key];\n}\n\nContext.prototype.unload = function() {\n  var model = this.model;\n  for (var hash in this.fetchedQueries) {\n    var query = model.root._queries.map[hash];\n    if (!query) continue;\n    var count = this.fetchedQueries[hash];\n    while (count--) query.unfetch();\n  }\n  for (var hash in this.subscribedQueries) {\n    var query = model.root._queries.map[hash];\n    if (!query) continue;\n    var count = this.subscribedQueries[hash];\n    while (count--) query.unsubscribe();\n  }\n  for (var collectionName in this.fetchedDocs.collections) {\n    var collection = this.fetchedDocs.collections[collectionName];\n    for (var id in collection) {\n      var count = collection[id];\n      while (count--) model.unfetchDoc(collectionName, id);\n    }\n  }\n  for (var collectionName in this.subscribedDocs.collections) {\n    var collection = this.subscribedDocs.collections[collectionName];\n    for (var id in collection) {\n      var count = collection[id];\n      while (count--) model.unsubscribeDoc(collectionName, id);\n    }\n  }\n  for (var collectionName in this.createdDocs.collections) {\n    var collection = this.createdDocs.collections[collectionName];\n    for (var id in collection) {\n      model._maybeUnloadDoc(collectionName, id);\n    }\n  }\n  this.createdDocs.reset();\n};\n","var defaultFns = module.exports = new DefaultFns();\n\ndefaultFns.reverse = new FnPair(getReverse, setReverse);\ndefaultFns.asc = asc;\ndefaultFns.desc = desc;\n\nfunction DefaultFns() {}\nfunction FnPair(get, set) {\n  this.get = get;\n  this.set = set;\n}\n\nfunction getReverse(array) {\n  return array && array.slice().reverse();\n}\nfunction setReverse(values) {\n  return {0: getReverse(values)};\n}\n\nfunction asc(a, b) {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n}\nfunction desc(a, b) {\n  if (a > b) return -1;\n  if (a < b) return 1;\n  return 0;\n}\n","var EventEmitter = require('events').EventEmitter;\nvar util = require('../util');\nvar Model = require('./Model');\n\n// These events are re-emitted as 'all' events, and they are queued up and\n// emitted in sequence, so that events generated by other events are not\n// seen in a different order by later listeners\nModel.MUTATOR_EVENTS = {\n  change: true,\n  insert: true,\n  remove: true,\n  move: true,\n  load: true,\n  unload: true\n};\n\nModel.INITS.push(function(model) {\n  EventEmitter.call(this);\n\n  // Set max listeners to unlimited\n  model.setMaxListeners(0);\n\n  // Used in async methods to emit an error event if a callback is not supplied.\n  // This will throw if there is no handler for model.on('error')\n  model.root._defaultCallback = defaultCallback;\n  function defaultCallback(err) {\n    if (err) model._emitError(err);\n  }\n\n  model.root._mutatorEventQueue = null;\n  model.root._pass = new Passed({}, {});\n  model.root._silent = null;\n  model.root._eventContext = null;\n});\n\nutil.mergeInto(Model.prototype, EventEmitter.prototype);\n\nModel.prototype.wrapCallback = function(cb) {\n  if (!cb) return this.root._defaultCallback;\n  var model = this;\n  return function wrappedCallback() {\n    try {\n      return cb.apply(this, arguments);\n    } catch (err) {\n      model._emitError(err);\n    }\n  };\n};\n\nModel.prototype._emitError = function(err, context) {\n  var message = (err.message) ? err.message :\n    (typeof err === 'string') ? err :\n    'Unknown model error';\n  if (context) {\n    message += ' ' + context;\n  }\n  if (err.data) {\n    try {\n      message += ' ' + JSON.stringify(err.data);\n    } catch (stringifyErr) {}\n  }\n  if (err instanceof Error) {\n    err.message = message;\n  } else {\n    err = new Error(message);\n  }\n  this.emit('error', err);\n};\n\n// EventEmitter.prototype.on, EventEmitter.prototype.addListener, and\n// EventEmitter.prototype.once return `this`. The Model equivalents return\n// the listener instead, since it is made internally for method subscriptions\n// and may need to be passed to removeListener.\n\nModel.prototype._emit = EventEmitter.prototype.emit;\nModel.prototype.emit = function(type) {\n  if (type === 'error') {\n    return this._emit.apply(this, arguments);\n  }\n  if (Model.MUTATOR_EVENTS[type]) {\n    if (this._silent) return this;\n    var segments = arguments[1];\n    var eventArgs = arguments[2];\n    this._emit(type + 'Immediate', segments, eventArgs);\n    if (this.root._mutatorEventQueue) {\n      this.root._mutatorEventQueue.push([type, segments, eventArgs]);\n      return this;\n    }\n    this.root._mutatorEventQueue = [];\n    this._emit(type, segments, eventArgs);\n    this._emit('all', segments, [type].concat(eventArgs));\n    while (this.root._mutatorEventQueue.length) {\n      var queued = this.root._mutatorEventQueue.shift();\n      type = queued[0];\n      segments = queued[1];\n      eventArgs = queued[2];\n      this._emit(type, segments, eventArgs);\n      this._emit('all', segments, [type].concat(eventArgs));\n    }\n    this.root._mutatorEventQueue = null;\n    return this;\n  }\n  return this._emit.apply(this, arguments);\n};\n\nModel.prototype._on = EventEmitter.prototype.on;\nModel.prototype.addListener =\nModel.prototype.on = function(type, pattern, cb) {\n  var listener = eventListener(this, pattern, cb);\n  this._on(type, listener);\n  return listener;\n};\n\nModel.prototype.once = function(type, pattern, cb) {\n  var listener = eventListener(this, pattern, cb);\n  function g() {\n    var matches = listener.apply(null, arguments);\n    if (matches) this.removeListener(type, g);\n  }\n  this._on(type, g);\n  return g;\n};\n\nModel.prototype._removeAllListeners = EventEmitter.prototype.removeAllListeners;\nModel.prototype.removeAllListeners = function(type, subpattern) {\n  // If a pattern is specified without an event type, remove all model event\n  // listeners under that pattern for all events\n  if (!type) {\n    for (var key in this._events) {\n      this.removeAllListeners(key, subpattern);\n    }\n    return this;\n  }\n\n  var pattern = this.path(subpattern);\n  // If no pattern is specified, remove all listeners like normal\n  if (!pattern) {\n    if (arguments.length === 0) {\n      return this._removeAllListeners();\n    }\n    return this._removeAllListeners(type);\n  }\n\n  // Remove all listeners for an event under a pattern\n  var listeners = this.listeners(type);\n  var segments = pattern.split('.');\n  // Make sure to iterate in reverse, since the array might be\n  // mutated as listeners are removed\n  for (var i = listeners.length; i--;) {\n    var listener = listeners[i];\n    if (patternContained(pattern, segments, listener)) {\n      this.removeListener(type, listener);\n    }\n  }\n  return this;\n};\n\nfunction patternContained(pattern, segments, listener) {\n  var listenerSegments = listener.patternSegments;\n  if (!listenerSegments) return false;\n  if (pattern === listener.pattern || pattern === '**') return true;\n  var len = segments.length;\n  if (len > listenerSegments.length) return false;\n  for (var i = 0; i < len; i++) {\n    if (segments[i] !== listenerSegments[i]) return false;\n  }\n  return true;\n}\n\nModel.prototype.pass = function(object, invert) {\n  var model = this._child();\n  model._pass = (invert) ?\n    new Passed(object, this._pass) :\n    new Passed(this._pass, object);\n  return model;\n};\n\nfunction Passed(previous, value) {\n  for (var key in previous) {\n    this[key] = previous[key];\n  }\n  for (var key in value) {\n    this[key] = value[key];\n  }\n}\n\n/**\n * The returned Model will or won't trigger event handlers when the model emits\n * events, depending on `value`\n * @param {Boolean|Null} value defaults to true\n * @return {Model}\n */\nModel.prototype.silent = function(value) {\n  var model = this._child();\n  model._silent = (value == null) ? true : value;\n  return model;\n};\n\nModel.prototype.eventContext = function(value) {\n  var model = this._child();\n  model._eventContext = value;\n  return model;\n};\n\nModel.prototype.removeContextListeners = function(value) {\n  if (arguments.length === 0) {\n    value = this._eventContext;\n  }\n  // Remove all events created within a given context\n  for (var type in this._events) {\n    var listeners = this.listeners(type);\n    // Make sure to iterate in reverse, since the array might be\n    // mutated as listeners are removed\n    for (var i = listeners.length; i--;) {\n      var listener = listeners[i];\n      if (listener.eventContext === value) {\n        this.removeListener(type, listener);\n      }\n    }\n  }\n  return this;\n};\n\nfunction eventListener(model, subpattern, cb) {\n  if (cb) {\n    // For signatures:\n    // model.on('change', 'example.subpath', callback)\n    // model.at('example').on('change', 'subpath', callback)\n    var pattern = model.path(subpattern);\n    return modelEventListener(pattern, cb, model._eventContext);\n  }\n  var path = model.path();\n  cb = arguments[1];\n  // For signature:\n  // model.at('example').on('change', callback)\n  if (path) return modelEventListener(path, cb, model._eventContext);\n  // For signature:\n  // model.on('normalEvent', callback)\n  return cb;\n}\n\nfunction modelEventListener(pattern, cb, eventContext) {\n  var patternSegments = util.castSegments(pattern.split('.'));\n  var testFn = testPatternFn(pattern, patternSegments);\n\n  function modelListener(segments, eventArgs) {\n    var captures = testFn(segments);\n    if (!captures) return;\n\n    var args = (captures.length) ? captures.concat(eventArgs) : eventArgs;\n    cb.apply(null, args);\n    return true;\n  }\n\n  // Used in Model#removeAllListeners\n  modelListener.pattern = pattern;\n  modelListener.patternSegments = patternSegments;\n  modelListener.eventContext = eventContext;\n\n  return modelListener;\n}\n\nfunction testPatternFn(pattern, patternSegments) {\n  if (pattern === '**') {\n    return function testPattern(segments) {\n      return [segments.join('.')];\n    };\n  }\n\n  var endingRest = stripRestWildcard(patternSegments);\n\n  return function testPattern(segments) {\n    // Any pattern with more segments does not match\n    var patternLen = patternSegments.length;\n    if (patternLen > segments.length) return;\n\n    // A pattern with the same number of segments matches if each\n    // of the segments are wildcards or equal. A shorter pattern matches\n    // if it ends in a rest wildcard and each of the corresponding\n    // segments are wildcards or equal.\n    if (patternLen === segments.length || endingRest) {\n      var captures = [];\n      for (var i = 0; i < patternLen; i++) {\n        var patternSegment = patternSegments[i];\n        var segment = segments[i];\n        if (patternSegment === '*' || patternSegment === '**') {\n          captures.push(segment);\n          continue;\n        }\n        if (patternSegment !== segment) return;\n      }\n      if (endingRest) {\n        var remainder = segments.slice(i).join('.');\n        captures.push(remainder);\n      }\n      return captures;\n    }\n  };\n}\n\nfunction stripRestWildcard(segments) {\n  // ['example', '**'] -> ['example']; return true\n  var lastIndex = segments.length - 1;\n  if (segments[lastIndex] === '**') {\n    segments.pop();\n    return true;\n  }\n  // ['example', 'subpath**'] -> ['example', 'subpath']; return true\n  var match = /^([^\\*]+)\\*\\*$/.exec(segments[lastIndex]);\n  if (!match) return false;\n  segments[lastIndex] = match[1];\n  return true;\n}\n","var util = require('../util');\nvar Model = require('./Model');\nvar defaultFns = require('./defaultFns');\n\nModel.INITS.push(function(model) {\n  model.root._filters = new Filters(model);\n  model.on('all', filterListener);\n  function filterListener(segments, eventArgs) {\n    var pass = eventArgs[eventArgs.length - 1];\n    var map = model.root._filters.fromMap;\n    for (var path in map) {\n      var filter = map[path];\n      if (pass.$filter === filter) continue;\n      if (\n        util.mayImpact(filter.segments, segments) ||\n        (filter.inputsSegments && util.mayImpactAny(filter.inputsSegments, segments))\n      ) {\n        filter.update(pass);\n      }\n    }\n  }\n});\n\nfunction parseFilterArguments(model, args) {\n  var fn = args.pop();\n  var options;\n  if (!model.isPath(args[args.length - 1])) {\n    options = args.pop();\n  }\n  var path = model.path(args.shift());\n  var i = args.length;\n  while (i--) {\n    args[i] = model.path(args[i]);\n  }\n  return {\n    path: path,\n    inputPaths: (args.length) ? args : null,\n    options: options,\n    fn: fn\n  };\n}\n\nModel.prototype.filter = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var parsed = parseFilterArguments(this, args);\n  return this.root._filters.add(\n    parsed.path,\n    parsed.fn,\n    null,\n    parsed.inputPaths,\n    parsed.options\n  );\n};\n\nModel.prototype.sort = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var parsed = parseFilterArguments(this, args);\n  return this.root._filters.add(\n    parsed.path,\n    null,\n    parsed.fn || 'asc',\n    parsed.inputPaths,\n    parsed.options\n  );\n};\n\nModel.prototype.removeAllFilters = function(subpath) {\n  var segments = this._splitPath(subpath);\n  this._removeAllFilters(segments);\n};\nModel.prototype._removeAllFilters = function(segments) {\n  var filters = this.root._filters.fromMap;\n  for (var from in filters) {\n    if (util.contains(segments, filters[from].fromSegments)) {\n      filters[from].destroy();\n    }\n  }\n};\n\nfunction FromMap() {}\nfunction Filters(model) {\n  this.model = model;\n  this.fromMap = new FromMap();\n}\n\nFilters.prototype.add = function(path, filterFn, sortFn, inputPaths, options) {\n  return new Filter(this, path, filterFn, sortFn, inputPaths, options);\n};\n\nFilters.prototype.toJSON = function() {\n  var out = [];\n  for (var from in this.fromMap) {\n    var filter = this.fromMap[from];\n    // Don't try to bundle if functions were passed directly instead of by name\n    if (!filter.bundle) continue;\n    var args = [from, filter.path, filter.filterName, filter.sortName, filter.inputPaths];\n    if (filter.options) args.push(filter.options);\n    out.push(args);\n  }\n  return out;\n};\n\nfunction Filter(filters, path, filterFn, sortFn, inputPaths, options) {\n  this.filters = filters;\n  this.model = filters.model.pass({$filter: this});\n  this.path = path;\n  this.segments = path.split('.');\n  this.filterName = null;\n  this.sortName = null;\n  this.bundle = true;\n  this.filterFn = null;\n  this.sortFn = null;\n  this.inputPaths = inputPaths;\n  this.inputsSegments = null;\n  if (inputPaths) {\n    this.inputsSegments = [];\n    for (var i = 0; i < this.inputPaths.length; i++) {\n      var segments = this.inputPaths[i].split('.');\n      this.inputsSegments.push(segments);\n    }\n  }\n  this.options = options;\n  this.skip = options && options.skip;\n  this.limit = options && options.limit;\n  if (filterFn) this.filter(filterFn);\n  if (sortFn) this.sort(sortFn);\n  this.idsSegments = null;\n  this.from = null;\n  this.fromSegments = null;\n}\n\nFilter.prototype.filter = function(fn) {\n  if (typeof fn === 'function') {\n    this.filterFn = fn;\n    this.bundle = false;\n    return this;\n  } else if (typeof fn === 'string') {\n    this.filterName = fn;\n    this.filterFn = this.model.root._namedFns[fn] || defaultFns[fn];\n    if (!this.filterFn) {\n      throw new TypeError('Filter function not found: ' + fn);\n    }\n  }\n  return this;\n};\n\nFilter.prototype.sort = function(fn) {\n  if (!fn) fn = 'asc';\n  if (typeof fn === 'function') {\n    this.sortFn = fn;\n    this.bundle = false;\n    return this;\n  } else if (typeof fn === 'string') {\n    this.sortName = fn;\n    this.sortFn = this.model.root._namedFns[fn] || defaultFns[fn];\n    if (!this.sortFn) {\n      throw new TypeError('Sort function not found: ' + fn);\n    }\n  }\n  return this;\n};\n\nFilter.prototype._slice = function(results) {\n  if (this.skip == null && this.limit == null) return results;\n  var begin = this.skip || 0;\n  // A limit of zero is equivalent to setting no limit\n  var end;\n  if (this.limit) end = begin + this.limit;\n  return results.slice(begin, end);\n};\n\nFilter.prototype.getInputs = function() {\n  if (!this.inputsSegments) return;\n  var inputs = [];\n  for (var i = 0, len = this.inputsSegments.length; i < len; i++) {\n    var input = this.model._get(this.inputsSegments[i]);\n    inputs.push(input);\n  }\n  return inputs;\n};\n\nFilter.prototype.callFilter = function(items, key, inputs) {\n  var item = items[key];\n  return (inputs) ?\n    this.filterFn.apply(this.model, [item, key, items].concat(inputs)) :\n    this.filterFn.call(this.model, item, key, items);\n};\n\nFilter.prototype.ids = function() {\n  var items = this.model._get(this.segments);\n  var ids = [];\n  if (!items) return ids;\n  if (Array.isArray(items)) {\n    throw new Error('model.filter is not currently supported on arrays');\n  }\n  if (this.filterFn) {\n    var inputs = this.getInputs();\n    for (var key in items) {\n      if (items.hasOwnProperty(key) && this.callFilter(items, key, inputs)) {\n        ids.push(key);\n      }\n    }\n  } else {\n    ids = Object.keys(items);\n  }\n  var sortFn = this.sortFn;\n  if (sortFn) {\n    ids.sort(function(a, b) {\n      return sortFn(items[a], items[b]);\n    });\n  }\n  return this._slice(ids);\n};\n\nFilter.prototype.get = function() {\n  var items = this.model._get(this.segments);\n  var results = [];\n  if (Array.isArray(items)) {\n    throw new Error('model.filter is not currently supported on arrays');\n  }\n  if (this.filterFn) {\n    var inputs = this.getInputs();\n    for (var key in items) {\n      if (items.hasOwnProperty(key) && this.callFilter(items, key, inputs)) {\n        results.push(items[key]);\n      }\n    }\n  } else {\n    for (var key in items) {\n      if (items.hasOwnProperty(key)) {\n        results.push(items[key]);\n      }\n    }\n  }\n  if (this.sortFn) results.sort(this.sortFn);\n  return this._slice(results);\n};\n\nFilter.prototype.update = function(pass) {\n  var ids = this.ids();\n  this.model.pass(pass, true)._setArrayDiff(this.idsSegments, ids);\n};\n\nFilter.prototype.ref = function(from) {\n  from = this.model.path(from);\n  this.from = from;\n  this.fromSegments = from.split('.');\n  this.filters.fromMap[from] = this;\n  this.idsSegments = ['$filters', from.replace(/\\./g, '|')];\n  this.update();\n  return this.model.refList(from, this.path, this.idsSegments.join('.'));\n};\n\nFilter.prototype.destroy = function() {\n  delete this.filters.fromMap[this.from];\n  this.model._removeRef(this.idsSegments);\n  this.model._del(this.idsSegments);\n};\n","var util = require('../util');\nvar Model = require('./Model');\nvar defaultFns = require('./defaultFns');\n\nfunction NamedFns() {}\n\nModel.INITS.push(function(model) {\n  model.root._namedFns = new NamedFns();\n  model.root._fns = new Fns(model);\n  model.on('all', fnListener);\n  function fnListener(segments, eventArgs) {\n    var pass = eventArgs[eventArgs.length - 1];\n    var map = model.root._fns.fromMap;\n    for (var path in map) {\n      var fn = map[path];\n      if (pass.$fn === fn) continue;\n      if (util.mayImpactAny(fn.inputsSegments, segments)) {\n        // Mutation affecting input path\n        fn.onInput(pass);\n      } else if (util.mayImpact(fn.fromSegments, segments)) {\n        // Mutation affecting output path\n        fn.onOutput(pass);\n      }\n    }\n  }\n});\n\nModel.prototype.fn = function(name, fns) {\n  this.root._namedFns[name] = fns;\n};\n\nfunction parseStartArguments(model, args, hasPath) {\n  var last = args.pop();\n  var fns, name;\n  if (typeof last === 'string') {\n    name = last;\n  } else {\n    fns = last;\n  }\n  var path;\n  if (hasPath) {\n    path = model.path(args.shift());\n  }\n  var options;\n  if (!model.isPath(args[args.length - 1])) {\n    options = args.pop();\n  }\n  var i = args.length;\n  while (i--) {\n    args[i] = model.path(args[i]);\n  }\n  return {\n    name: name,\n    path: path,\n    inputPaths: args,\n    fns: fns,\n    options: options\n  };\n}\n\nModel.prototype.evaluate = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var parsed = parseStartArguments(this, args, false);\n  return this.root._fns.get(parsed.name, parsed.inputPaths, parsed.fns, parsed.options);\n};\n\nModel.prototype.start = function() {\n  var args = Array.prototype.slice.call(arguments);\n  var parsed = parseStartArguments(this, args, true);\n  return this.root._fns.start(parsed.name, parsed.path, parsed.inputPaths, parsed.fns, parsed.options);\n};\n\nModel.prototype.stop = function(subpath) {\n  var path = this.path(subpath);\n  this._stop(path);\n};\nModel.prototype._stop = function(fromPath) {\n  this.root._fns.stop(fromPath);\n};\n\nModel.prototype.stopAll = function(subpath) {\n  var segments = this._splitPath(subpath);\n  this._stopAll(segments);\n};\nModel.prototype._stopAll = function(segments) {\n  var fns = this.root._fns.fromMap;\n  for (var from in fns) {\n    var fromSegments = fns[from].fromSegments;\n    if (util.contains(segments, fromSegments)) {\n      this._stop(from);\n    }\n  }\n};\n\nfunction FromMap() {}\nfunction Fns(model) {\n  this.model = model;\n  this.nameMap = model.root._namedFns;\n  this.fromMap = new FromMap();\n}\n\nFns.prototype.get = function(name, inputPaths, fns, options) {\n  fns || (fns = this.nameMap[name] || defaultFns[name]);\n  var fn = new Fn(this.model, name, null, inputPaths, fns, options);\n  return fn.get();\n};\n\nFns.prototype.start = function(name, path, inputPaths, fns, options) {\n  fns || (fns = this.nameMap[name] || defaultFns[name]);\n  var fn = new Fn(this.model, name, path, inputPaths, fns, options);\n  this.fromMap[path] = fn;\n  return fn.onInput();\n};\n\nFns.prototype.stop = function(path) {\n  var fn = this.fromMap[path];\n  delete this.fromMap[path];\n  return fn;\n};\n\nFns.prototype.toJSON = function() {\n  var out = [];\n  for (var from in this.fromMap) {\n    var fn = this.fromMap[from];\n    // Don't try to bundle non-named functions that were started via\n    // model.start directly instead of by name\n    if (!fn.name) continue;\n    var args = [fn.from].concat(fn.inputPaths);\n    if (fn.options) args.push(fn.options);\n    args.push(fn.name);\n    out.push(args);\n  }\n  return out;\n};\n\nfunction Fn(model, name, from, inputPaths, fns, options) {\n  this.model = model.pass({$fn: this});\n  this.name = name;\n  this.from = from;\n  this.inputPaths = inputPaths;\n  this.options = options;\n  if (!fns) {\n    throw new TypeError('Model function not found: ' + name);\n  }\n  this.getFn = fns.get || fns;\n  this.setFn = fns.set;\n  this.fromSegments = from && from.split('.');\n  this.inputsSegments = [];\n  for (var i = 0; i < this.inputPaths.length; i++) {\n    var segments = this.inputPaths[i].split('.');\n    this.inputsSegments.push(segments);\n  }\n\n  // Copy can be 'output', 'input', 'both', or 'none'\n  var copy = (options && options.copy) || 'output';\n  this.copyInput = (copy === 'input' || copy === 'both');\n  this.copyOutput = (copy === 'output' || copy === 'both');\n\n  // Mode can be 'diffDeep', 'diff', 'arrayDeep', or 'array'\n  this.mode = (options && options.mode) || 'diffDeep';\n}\n\nFn.prototype.apply = function(fn, inputs) {\n  for (var i = 0, len = this.inputsSegments.length; i < len; i++) {\n    var input = this.model._get(this.inputsSegments[i]);\n    inputs.push(this.copyInput ? util.deepCopy(input) : input);\n  }\n  return fn.apply(this.model, inputs);\n};\n\nFn.prototype.get = function() {\n  return this.apply(this.getFn, []);\n};\n\nFn.prototype.set = function(value, pass) {\n  if (!this.setFn) return;\n  var out = this.apply(this.setFn, [value]);\n  if (!out) return;\n  var inputsSegments = this.inputsSegments;\n  var model = this.model.pass(pass, true);\n  for (var key in out) {\n    var value = (this.copyOutput) ? util.deepCopy(out[key]) : out[key];\n    this._setValue(model, inputsSegments[key], value);\n  }\n};\n\nFn.prototype.onInput = function(pass) {\n  var value = (this.copyOutput) ? util.deepCopy(this.get()) : this.get();\n  this._setValue(this.model.pass(pass, true), this.fromSegments, value);\n  return value;\n};\n\nFn.prototype.onOutput = function(pass) {\n  var value = this.model._get(this.fromSegments);\n  return this.set(value, pass);\n};\n\nFn.prototype._setValue = function(model, segments, value) {\n  if (this.mode === 'diffDeep') {\n    model._setDiffDeep(segments, value);\n  } else if (this.mode === 'arrayDeep') {\n    model._setArrayDiffDeep(segments, value);\n  } else if (this.mode === 'array') {\n    model._setArrayDiff(segments, value);\n  } else {\n    model._setDiff(segments, value);\n  }\n};\n","module.exports = require('./Model');\nvar util = require('../util');\n\n// Extend model on both server and client //\nrequire('./unbundle');\nrequire('./events');\nrequire('./paths');\nrequire('./collections');\nrequire('./mutators');\nrequire('./setDiff');\n\nrequire('./connection');\nrequire('./subscriptions');\nrequire('./Query');\nrequire('./contexts');\n\nrequire('./fn');\nrequire('./filter');\nrequire('./refList');\nrequire('./ref');\n\n// Extend model for server //\nutil.serverRequire(module, './bundle');\nutil.serverRequire(module, './connection.server');\n","var util = require('../util');\nvar Model = require('./Model');\n\nModel.prototype._mutate = function(segments, fn, cb) {\n  cb = this.wrapCallback(cb);\n  var collectionName = segments[0];\n  var id = segments[1];\n  if (!collectionName || !id) {\n    var message = fn.name + ' must be performed under a collection ' +\n      'and document id. Invalid path: ' + segments.join('.');\n    return cb(new Error(message));\n  }\n  var doc = this.getOrCreateDoc(collectionName, id);\n  var docSegments = segments.slice(2);\n  if (this._preventCompose && doc.shareDoc) {\n    var oldPreventCompose = doc.shareDoc.preventCompose;\n    doc.shareDoc.preventCompose = true;\n    var out = fn(doc, docSegments, cb);\n    doc.shareDoc.preventCompose = oldPreventCompose;\n    return out;\n  }\n  return fn(doc, docSegments, cb);\n};\n\nModel.prototype.set = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._set(segments, value, cb);\n};\nModel.prototype._set = function(segments, value, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function set(doc, docSegments, fnCb) {\n    var previous = doc.set(docSegments, value, fnCb);\n    // On setting the entire doc, remote docs sometimes do a copy to add the\n    // id without it being stored in the database by ShareJS\n    if (docSegments.length === 0) value = doc.get(docSegments);\n    model.emit('change', segments, [value, previous, model._pass]);\n    return previous;\n  }\n  return this._mutate(segments, set, cb);\n};\n\nModel.prototype.setNull = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._setNull(segments, value, cb);\n};\nModel.prototype._setNull = function(segments, value, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function setNull(doc, docSegments, fnCb) {\n    var previous = doc.get(docSegments);\n    if (previous != null) {\n      fnCb();\n      return previous;\n    }\n    doc.set(docSegments, value, fnCb);\n    model.emit('change', segments, [value, previous, model._pass]);\n    return value;\n  }\n  return this._mutate(segments, setNull, cb);\n};\n\nModel.prototype.setEach = function() {\n  var subpath, object, cb;\n  if (arguments.length === 1) {\n    object = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    object = arguments[1];\n  } else {\n    subpath = arguments[0];\n    object = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._setEach(segments, object, cb);\n};\nModel.prototype._setEach = function(segments, object, cb) {\n  segments = this._dereference(segments);\n  var group = util.asyncGroup(this.wrapCallback(cb));\n  for (var key in object) {\n    var value = object[key];\n    this._set(segments.concat(key), value, group());\n  }\n};\n\nModel.prototype.create = function() {\n  var subpath, value, cb;\n  if (arguments.length === 0) {\n    value = {};\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      value = {};\n      cb = arguments[0];\n    } else {\n      value = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[1] === 'function') {\n      value = arguments[0];\n      cb = arguments[1];\n    } else {\n      subpath = arguments[0];\n      value = arguments[1];\n    }\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._create(segments, value, cb);\n};\nModel.prototype._create = function(segments, value, cb) {\n  segments = this._dereference(segments);\n  if (segments.length !== 2) {\n    var message = 'create may only be used on a document path. ' +\n      'Invalid path: ' + segments.join('.');\n    cb = this.wrapCallback(cb);\n    return cb(new Error(message));\n  }\n  var model = this;\n  function create(doc, docSegments, fnCb) {\n    var previous;\n    doc.create(value, fnCb);\n    // On creating the doc, remote docs do a copy to add the id without\n    // it being stored in the database by ShareJS\n    value = doc.get();\n    model.emit('change', segments, [value, previous, model._pass]);\n  }\n  this._mutate(segments, create, cb);\n};\n\nModel.prototype.createNull = function() {\n  var subpath, value, cb;\n  if (arguments.length === 0) {\n    value = {};\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      value = {};\n      cb = arguments[0];\n    } else {\n      value = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[1] === 'function') {\n      value = arguments[0];\n      cb = arguments[1];\n    } else {\n      subpath = arguments[0];\n      value = arguments[1];\n    }\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._createNull(segments, value, cb);\n};\nModel.prototype._createNull = function(segments, value, cb) {\n  segments = this._dereference(segments);\n  var doc = this.getDoc(segments[0], segments[1]);\n  if (doc && doc.get() != null) return;\n  this._create(segments, value, cb);\n};\n\nModel.prototype.add = function() {\n  var subpath, value, cb;\n  if (arguments.length === 0) {\n    value = {};\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      value = {};\n      cb = arguments[0];\n    } else {\n      value = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[1] === 'function') {\n      value = arguments[0];\n      cb = arguments[1];\n    } else {\n      subpath = arguments[0];\n      value = arguments[1];\n    }\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._add(segments, value, cb);\n};\nModel.prototype._add = function(segments, value, cb) {\n  if (typeof value !== 'object') {\n    var message = 'add requires an object value. Invalid value: ' + value;\n    cb = this.wrapCallback(cb);\n    return cb(new Error(message));\n  }\n  var id = value.id || this.id();\n  value.id = id;\n  segments = this._dereference(segments.concat(id));\n  var model = this;\n  function add(doc, docSegments, fnCb) {\n    var previous;\n    if (docSegments.length) {\n      previous = doc.set(docSegments, value, fnCb);\n    } else {\n      doc.create(value, fnCb);\n      // On creating the doc, remote docs do a copy to add the id without\n      // it being stored in the database by ShareJS\n      value = doc.get();\n    }\n    model.emit('change', segments, [value, previous, model._pass]);\n  }\n  this._mutate(segments, add, cb);\n  return id;\n};\n\nModel.prototype.del = function() {\n  var subpath, cb;\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      cb = arguments[0];\n    } else {\n      subpath = arguments[0];\n    }\n  } else {\n    subpath = arguments[0];\n    cb = arguments[1];\n  }\n  var segments = this._splitPath(subpath);\n  return this._del(segments, cb);\n};\nModel.prototype._del = function(segments, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function del(doc, docSegments, fnCb) {\n    var previous = doc.del(docSegments, fnCb);\n    // When deleting an entire document, also remove the reference to the\n    // document object from its collection\n    if (segments.length === 2) {\n      var collectionName = segments[0];\n      var id = segments[1];\n      model.root.collections[collectionName].remove(id);\n    }\n    model.emit('change', segments, [undefined, previous, model._pass]);\n    return previous;\n  }\n  return this._mutate(segments, del, cb);\n};\n\nModel.prototype.increment = function() {\n  var subpath, byNumber, cb;\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      cb = arguments[0];\n    } else if (typeof arguments[0] === 'number') {\n      byNumber = arguments[0];\n    } else {\n      subpath = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[1] === 'function') {\n      cb = arguments[1];\n      if (typeof arguments[0] === 'number') {\n        byNumber = arguments[0];\n      } else {\n        subpath = arguments[0];\n      }\n    } else {\n      subpath = arguments[0];\n      byNumber = arguments[1];\n    }\n  } else {\n    subpath = arguments[0];\n    byNumber = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._increment(segments, byNumber, cb);\n};\nModel.prototype._increment = function(segments, byNumber, cb) {\n  segments = this._dereference(segments);\n  if (byNumber == null) byNumber = 1;\n  var model = this;\n  function increment(doc, docSegments, fnCb) {\n    var value = doc.increment(docSegments, byNumber, fnCb);\n    var previous = value - byNumber;\n    model.emit('change', segments, [value, previous, model._pass]);\n    return value;\n  }\n  return this._mutate(segments, increment, cb);\n};\n\nModel.prototype.push = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._push(segments, value, cb);\n};\nModel.prototype._push = function(segments, value, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  var model = this;\n  function push(doc, docSegments, fnCb) {\n    var length = doc.push(docSegments, value, fnCb);\n    model.emit('insert', segments, [length - 1, [value], model._pass]);\n    return length;\n  }\n  return this._mutate(segments, push, cb);\n};\n\nModel.prototype.unshift = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._unshift(segments, value, cb);\n};\nModel.prototype._unshift = function(segments, value, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  var model = this;\n  function unshift(doc, docSegments, fnCb) {\n    var length = doc.unshift(docSegments, value, fnCb);\n    model.emit('insert', segments, [0, [value], model._pass]);\n    return length;\n  }\n  return this._mutate(segments, unshift, cb);\n};\n\nModel.prototype.insert = function() {\n  var subpath, index, values, cb;\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments for insert');\n  } else if (arguments.length === 2) {\n    index = arguments[0];\n    values = arguments[1];\n  } else if (arguments.length === 3) {\n    subpath = arguments[0];\n    index = arguments[1];\n    values = arguments[2];\n  } else {\n    subpath = arguments[0];\n    index = arguments[1];\n    values = arguments[2];\n    cb = arguments[3];\n  }\n  var segments = this._splitPath(subpath);\n  return this._insert(segments, +index, values, cb);\n};\nModel.prototype._insert = function(segments, index, values, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  var model = this;\n  function insert(doc, docSegments, fnCb) {\n    var inserted = (Array.isArray(values)) ? values : [values];\n    var length = doc.insert(docSegments, index, inserted, fnCb);\n    model.emit('insert', segments, [index, inserted, model._pass]);\n    return length;\n  }\n  return this._mutate(segments, insert, cb);\n};\n\nModel.prototype.pop = function() {\n  var subpath, cb;\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      cb = arguments[0];\n    } else {\n      subpath = arguments[0];\n    }\n  } else {\n    subpath = arguments[0];\n    cb = arguments[1];\n  }\n  var segments = this._splitPath(subpath);\n  return this._pop(segments, cb);\n};\nModel.prototype._pop = function(segments, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  var model = this;\n  function pop(doc, docSegments, fnCb) {\n    var arr = doc.get(docSegments);\n    var length = arr && arr.length;\n    if (!length) {\n      fnCb();\n      return;\n    }\n    var value = doc.pop(docSegments, fnCb);\n    model.emit('remove', segments, [length - 1, [value], model._pass]);\n    return value;\n  }\n  return this._mutate(segments, pop, cb);\n};\n\nModel.prototype.shift = function() {\n  var subpath, cb;\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      cb = arguments[0];\n    } else {\n      subpath = arguments[0];\n    }\n  } else {\n    subpath = arguments[0];\n    cb = arguments[1];\n  }\n  var segments = this._splitPath(subpath);\n  return this._shift(segments, cb);\n};\nModel.prototype._shift = function(segments, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  var model = this;\n  function shift(doc, docSegments, fnCb) {\n    var arr = doc.get(docSegments);\n    var length = arr && arr.length;\n    if (!length) {\n      fnCb();\n      return;\n    }\n    var value = doc.shift(docSegments, fnCb);\n    model.emit('remove', segments, [0, [value], model._pass]);\n    return value;\n  }\n  return this._mutate(segments, shift, cb);\n};\n\nModel.prototype.remove = function() {\n  var subpath, index, howMany, cb;\n  if (arguments.length < 2) {\n    index = arguments[0];\n  } else if (arguments.length === 2) {\n    if (typeof arguments[1] === 'function') {\n      cb = arguments[1];\n      if (typeof arguments[0] === 'number') {\n        index = arguments[0];\n      } else {\n        subpath = arguments[0];\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (typeof arguments[0] === 'number') {\n        index = arguments[0];\n        howMany = arguments[1];\n      } else {\n        subpath = arguments[0];\n        index = arguments[1];\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'function') {\n      cb = arguments[2];\n      if (typeof arguments[0] === 'number') {\n        index = arguments[0];\n        howMany = arguments[1];\n      } else {\n        subpath = arguments[0];\n        index = arguments[1];\n      }\n    } else {\n      subpath = arguments[0];\n      index = arguments[1];\n      howMany = arguments[2];\n    }\n  } else {\n    subpath = arguments[0];\n    index = arguments[1];\n    howMany = arguments[2];\n    cb = arguments[3];\n  }\n  var segments = this._splitPath(subpath);\n  if (index == null) index = segments.pop();\n  return this._remove(segments, +index, howMany, cb);\n};\nModel.prototype._remove = function(segments, index, howMany, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  if (howMany == null) howMany = 1;\n  var model = this;\n  function remove(doc, docSegments, fnCb) {\n    var removed = doc.remove(docSegments, index, howMany, fnCb);\n    model.emit('remove', segments, [index, removed, model._pass]);\n    return removed;\n  }\n  return this._mutate(segments, remove, cb);\n};\n\nModel.prototype.move = function() {\n  var subpath, from, to, howMany, cb;\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments for move');\n  } else if (arguments.length === 2) {\n    from = arguments[0];\n    to = arguments[1];\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'function') {\n      from = arguments[0];\n      to = arguments[1];\n      cb = arguments[2];\n    } else if (typeof arguments[0] === 'number') {\n      from = arguments[0];\n      to = arguments[1];\n      howMany = arguments[2];\n    } else {\n      subpath = arguments[0];\n      from = arguments[1];\n      to = arguments[2];\n    }\n  } else if (arguments.length === 4) {\n    if (typeof arguments[3] === 'function') {\n      cb = arguments[3];\n      if (typeof arguments[0] === 'number') {\n        from = arguments[0];\n        to = arguments[1];\n        howMany = arguments[2];\n      } else {\n        subpath = arguments[0];\n        from = arguments[1];\n        to = arguments[2];\n      }\n    } else {\n      subpath = arguments[0];\n      from = arguments[1];\n      to = arguments[2];\n      howMany = arguments[3];\n    }\n  } else {\n    subpath = arguments[0];\n    from = arguments[1];\n    to = arguments[2];\n    howMany = arguments[3];\n    cb = arguments[4];\n  }\n  var segments = this._splitPath(subpath);\n  return this._move(segments, from, to, howMany, cb);\n};\nModel.prototype._move = function(segments, from, to, howMany, cb) {\n  var forArrayMutator = true;\n  segments = this._dereference(segments, forArrayMutator);\n  if (howMany == null) howMany = 1;\n  var model = this;\n  function move(doc, docSegments, fnCb) {\n    // Cast to numbers\n    from = +from;\n    to = +to;\n    // Convert negative indices into positive\n    if (from < 0 || to < 0) {\n      var len = doc.get(docSegments).length;\n      if (from < 0) from += len;\n      if (to < 0) to += len;\n    }\n    var moved = doc.move(docSegments, from, to, howMany, fnCb);\n    model.emit('move', segments, [from, to, moved.length, model._pass]);\n    return moved;\n  }\n  return this._mutate(segments, move, cb);\n};\n\nModel.prototype.stringInsert = function() {\n  var subpath, index, text, cb;\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments for stringInsert');\n  } else if (arguments.length === 2) {\n    index = arguments[0];\n    text = arguments[1];\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'function') {\n      index = arguments[0];\n      text = arguments[1];\n      cb = arguments[2];\n    } else {\n      subpath = arguments[0];\n      index = arguments[1];\n      text = arguments[2];\n    }\n  } else {\n    subpath = arguments[0];\n    index = arguments[1];\n    text = arguments[2];\n    cb = arguments[3];\n  }\n  var segments = this._splitPath(subpath);\n  return this._stringInsert(segments, index, text, cb);\n};\nModel.prototype._stringInsert = function(segments, index, text, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function stringInsert(doc, docSegments, fnCb) {\n    var previous = doc.stringInsert(docSegments, index, text, fnCb);\n    var value = doc.get(docSegments);\n    var pass = model.pass({$stringInsert: {index: index, text: text}})._pass;\n    model.emit('change', segments, [value, previous, pass]);\n    return;\n  }\n  return this._mutate(segments, stringInsert, cb);\n};\n\nModel.prototype.stringRemove = function() {\n  var subpath, index, howMany, cb;\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments for stringRemove');\n  } else if (arguments.length === 2) {\n    index = arguments[0];\n    howMany = arguments[1];\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'function') {\n      index = arguments[0];\n      howMany = arguments[1];\n      cb = arguments[2];\n    } else {\n      subpath = arguments[0];\n      index = arguments[1];\n      howMany = arguments[2];\n    }\n  } else {\n    subpath = arguments[0];\n    index = arguments[1];\n    howMany = arguments[2];\n    cb = arguments[3];\n  }\n  var segments = this._splitPath(subpath);\n  return this._stringRemove(segments, index, howMany, cb);\n};\nModel.prototype._stringRemove = function(segments, index, howMany, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function stringRemove(doc, docSegments, fnCb) {\n    var previous = doc.stringRemove(docSegments, index, howMany, fnCb);\n    var value = doc.get(docSegments);\n    var pass = model.pass({$stringRemove: {index: index, howMany: howMany}})._pass;\n    model.emit('change', segments, [value, previous, pass]);\n    return;\n  }\n  return this._mutate(segments, stringRemove, cb);\n};\n\nModel.prototype.subtypeSubmit = function() {\n  var subpath, subtype, subtypeOp, cb;\n  if (arguments.length < 2) {\n    throw new Error('Not enough arguments for subtypeSubmit');\n  } else if (arguments.length === 2) {\n    subtype = arguments[0];\n    subtypeOp = arguments[1];\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'function') {\n      subtype = arguments[0];\n      subtypeOp = arguments[1];\n      cb = arguments[2];\n    } else {\n      subpath = arguments[0];\n      subtype = arguments[1];\n      subtypeOp = arguments[2];\n    }\n  } else {\n    subpath = arguments[0];\n    subtype = arguments[1];\n    subtypeOp = arguments[2];\n    cb = arguments[3];\n  }\n  var segments = this._splitPath(subpath);\n  return this._subtypeSubmit(segments, subtype, subtypeOp, cb);\n};\n\nModel.prototype._subtypeSubmit = function(segments, subtype, subtypeOp, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function subtypeSubmit(doc, docSegments, fnCb) {\n    var previous = doc.subtypeSubmit(docSegments, subtype, subtypeOp, fnCb);\n    var value = doc.get(docSegments);\n    var pass = model.pass({$subtype: {type: subtype, op: subtypeOp}})._pass;\n    // Emit undefined for the previous value, since we don't really know\n    // whether or not the previous value returned by the subtypeSubmit is the\n    // same object returned by reference or not. This may cause change\n    // listeners to over-trigger, but that is usually going to be better than\n    // under-triggering\n    model.emit('change', segments, [value, undefined, pass]);\n    return previous;\n  }\n  return this._mutate(segments, subtypeSubmit, cb);\n};\n","var Model = require('./Model');\n\nexports.mixin = {};\n\nModel.prototype._splitPath = function(subpath) {\n  var path = this.path(subpath);\n  return (path && path.split('.')) || [];\n};\n\n/**\n * Returns the path equivalent to the path of the current scoped model plus\n * (optionally) a suffix subpath\n *\n * @optional @param {String} subpath\n * @return {String} absolute path\n * @api public\n */\nModel.prototype.path = function(subpath) {\n  if (subpath == null || subpath === '') return (this._at) ? this._at : '';\n  if (typeof subpath === 'string' || typeof subpath === 'number') {\n    return (this._at) ? this._at + '.' + subpath : '' + subpath;\n  }\n  if (typeof subpath.path === 'function') return subpath.path();\n};\n\nModel.prototype.isPath = function(subpath) {\n  return this.path(subpath) != null;\n};\n\nModel.prototype.scope = function(path) {\n  var model = this._child();\n  model._at = path;\n  return model;\n};\n\n/**\n * Create a model object scoped to a particular path.\n * Example:\n *     var user = model.at('users.1');\n *     user.set('username', 'brian');\n *     user.on('push', 'todos', function(todo) {\n *       // ...\n *     });\n *\n *  @param {String} segment\n *  @return {Model} a scoped model\n *  @api public\n */\nModel.prototype.at = function(subpath) {\n  var path = this.path(subpath);\n  return this.scope(path);\n};\n\n/**\n * Returns a model scope that is a number of levels above the current scoped\n * path. Number of levels defaults to 1, so this method called without\n * arguments returns the model scope's parent model scope.\n *\n * @optional @param {Number} levels\n * @return {Model} a scoped model\n */\nModel.prototype.parent = function(levels) {\n  if (levels == null) levels = 1;\n  var segments = this._splitPath();\n  var len = Math.max(0, segments.length - levels);\n  var path = segments.slice(0, len).join('.');\n  return this.scope(path);\n};\n\n/**\n * Returns the last property segment of the current model scope path\n *\n * @optional @param {String} path\n * @return {String}\n */\nModel.prototype.leaf = function(path) {\n  if (!path) path = this.path();\n  var i = path.lastIndexOf('.');\n  return path.slice(i + 1);\n};\n","var util = require('../util');\nvar Model = require('./Model');\n\nModel.INITS.push(function(model) {\n  var root = model.root;\n  root._refs = new Refs();\n  addIndexListeners(root);\n  addListener(root, 'change', refChange);\n  addListener(root, 'load', refLoad);\n  addListener(root, 'unload', refUnload);\n  addListener(root, 'insert', refInsert);\n  addListener(root, 'remove', refRemove);\n  addListener(root, 'move', refMove);\n});\n\nfunction addIndexListeners(model) {\n  model.on('insertImmediate', function refInsertIndex(segments, eventArgs) {\n    var index = eventArgs[0];\n    var howMany = eventArgs[1].length;\n    function patchInsert(refIndex) {\n      return (index <= refIndex) ? refIndex + howMany : refIndex;\n    }\n    onIndexChange(segments, patchInsert);\n  });\n  model.on('removeImmediate', function refRemoveIndex(segments, eventArgs) {\n    var index = eventArgs[0];\n    var howMany = eventArgs[1].length;\n    function patchRemove(refIndex) {\n      return (index <= refIndex) ? refIndex - howMany : refIndex;\n    }\n    onIndexChange(segments, patchRemove);\n  });\n  model.on('moveImmediate', function refMoveIndex(segments, eventArgs) {\n    var from = eventArgs[0];\n    var to = eventArgs[1];\n    var howMany = eventArgs[2];\n    function patchMove(refIndex) {\n      // If the index was moved itself\n      if (from <= refIndex && refIndex < from + howMany) {\n        return refIndex + to - from;\n      }\n      // Remove part of a move\n      if (from <= refIndex) refIndex -= howMany;\n      // Insert part of a move\n      if (to <= refIndex) refIndex += howMany;\n      return refIndex;\n    }\n    onIndexChange(segments, patchMove);\n  });\n  function onIndexChange(segments, patch) {\n    var fromMap = model._refs.fromMap;\n    for (var from in fromMap) {\n      var ref = fromMap[from];\n      if (!(ref.updateIndices &&\n        util.contains(segments, ref.toSegments) &&\n        ref.toSegments.length > segments.length)) continue;\n      var index = +ref.toSegments[segments.length];\n      var patched = patch(index);\n      if (index === patched) continue;\n      model._refs.remove(from);\n      ref.toSegments[segments.length] = '' + patched;\n      ref.to = ref.toSegments.join('.');\n      model._refs.add(ref);\n    }\n  }\n}\n\nfunction refChange(model, dereferenced, eventArgs, segments) {\n  var value = eventArgs[0];\n  // Detect if we are deleting vs. setting to undefined\n  if (value === undefined) {\n    var parentSegments = segments.slice();\n    var last = parentSegments.pop();\n    var parent = model._get(parentSegments);\n    if (!parent || !(last in parent)) {\n      model._del(dereferenced);\n      return;\n    }\n  }\n  model._set(dereferenced, value);\n}\nfunction refLoad(model, dereferenced, eventArgs) {\n  var value = eventArgs[0];\n  model._set(dereferenced, value);\n}\nfunction refUnload(model, dereferenced) {\n  model._del(dereferenced);\n}\nfunction refInsert(model, dereferenced, eventArgs) {\n  var index = eventArgs[0];\n  var values = eventArgs[1];\n  model._insert(dereferenced, index, values);\n}\nfunction refRemove(model, dereferenced, eventArgs) {\n  var index = eventArgs[0];\n  var howMany = eventArgs[1].length;\n  model._remove(dereferenced, index, howMany);\n}\nfunction refMove(model, dereferenced, eventArgs) {\n  var from = eventArgs[0];\n  var to = eventArgs[1];\n  var howMany = eventArgs[2];\n  model._move(dereferenced, from, to, howMany);\n}\n\nfunction addListener(model, type, fn) {\n  model.on(type + 'Immediate', refListener);\n  function refListener(segments, eventArgs) {\n    var pass = eventArgs[eventArgs.length - 1];\n    // Find cases where an event is emitted on a path where a reference\n    // is pointing. All original mutations happen on the fully dereferenced\n    // location, so this detection only needs to happen in one direction\n    var toMap = model._refs.toMap;\n    var subpath;\n    for (var i = 0, len = segments.length; i < len; i++) {\n      subpath = (subpath) ? subpath + '.' + segments[i] : segments[i];\n      // If a ref is found pointing to a matching subpath, re-emit on the\n      // place where the reference is coming from as if the mutation also\n      // occured at that path\n      var refs = toMap[subpath];\n      if (!refs) continue;\n      var remaining = segments.slice(i + 1);\n      for (var refIndex = 0, numRefs = refs.length; refIndex < numRefs; refIndex++) {\n        var ref = refs[refIndex];\n        var dereferenced = ref.fromSegments.concat(remaining);\n        // The value may already be up to date via object reference. If so,\n        // simply re-emit the event. Otherwise, perform the same mutation on\n        // the ref's path\n        if (model._get(dereferenced) === model._get(segments)) {\n          model.emit(type, dereferenced, eventArgs);\n        } else {\n          var setterModel = ref.model.pass(pass, true);\n          setterModel._dereference = noopDereference;\n          fn(setterModel, dereferenced, eventArgs, segments);\n        }\n      }\n    }\n    // If a ref points to a child of a matching subpath, get the value in\n    // case it has changed and set if different\n    var parentToMap = model._refs.parentToMap;\n    var refs = parentToMap[subpath];\n    if (!refs) return;\n    for (var refIndex = 0, numRefs = refs.length; refIndex < numRefs; refIndex++) {\n      var ref = refs[refIndex];\n      var value = model._get(ref.toSegments);\n      var previous = model._get(ref.fromSegments);\n      if (previous !== value) {\n        var setterModel = ref.model.pass(pass, true);\n        setterModel._dereference = noopDereference;\n        setterModel._set(ref.fromSegments, value);\n      }\n    }\n  }\n}\n\nModel.prototype._canRefTo = function(value) {\n  return this.isPath(value) || (value && typeof value.ref === 'function');\n};\n\nModel.prototype.ref = function() {\n  var from, to, options;\n  if (arguments.length === 1) {\n    to = arguments[0];\n  } else if (arguments.length === 2) {\n    if (this._canRefTo(arguments[1])) {\n      from = arguments[0];\n      to = arguments[1];\n    } else {\n      to = arguments[0];\n      options = arguments[1];\n    }\n  } else {\n    from = arguments[0];\n    to = arguments[1];\n    options = arguments[2];\n  }\n  var fromPath = this.path(from);\n  var toPath = this.path(to);\n  // Make ref to reffable object, such as query or filter\n  if (!toPath) return to.ref(fromPath);\n  var ref = new Ref(this.root, fromPath, toPath, options);\n  if (ref.fromSegments.length < 2) {\n    throw new Error('ref must be performed under a collection ' +\n      'and document id. Invalid path: ' + fromPath);\n  }\n  this.root._refs.remove(fromPath);\n  this.root._refLists.remove(fromPath);\n  var value = this.get(to);\n  ref.model._set(ref.fromSegments, value);\n  this.root._refs.add(ref);\n  return this.scope(fromPath);\n};\n\nModel.prototype.removeRef = function(subpath) {\n  var segments = this._splitPath(subpath);\n  var fromPath = segments.join('.');\n  this._removeRef(segments, fromPath);\n};\nModel.prototype._removeRef = function(segments, fromPath) {\n  this.root._refs.remove(fromPath);\n  this.root._refLists.remove(fromPath);\n  this._del(segments);\n};\n\nModel.prototype.removeAllRefs = function(subpath) {\n  var segments = this._splitPath(subpath);\n  this._removeAllRefs(segments);\n};\nModel.prototype._removeAllRefs = function(segments) {\n  this._removeMapRefs(segments, this.root._refs.fromMap);\n  this._removeMapRefs(segments, this.root._refLists.fromMap);\n};\nModel.prototype._removeMapRefs = function(segments, map) {\n  for (var from in map) {\n    var fromSegments = map[from].fromSegments;\n    if (util.contains(segments, fromSegments)) {\n      this._removeRef(fromSegments, from);\n    }\n  }\n};\n\nModel.prototype.dereference = function(subpath) {\n  var segments = this._splitPath(subpath);\n  return this._dereference(segments).join('.');\n};\n\nModel.prototype._dereference = function(segments, forArrayMutator, ignore) {\n  if (segments.length === 0) return segments;\n  var refs = this.root._refs.fromMap;\n  var refLists = this.root._refLists.fromMap;\n  var doAgain;\n  do {\n    var subpath = '';\n    doAgain = false;\n    for (var i = 0, len = segments.length; i < len; i++) {\n      subpath = (subpath) ? subpath + '.' + segments[i] : segments[i];\n\n      var ref = refs[subpath];\n      if (ref) {\n        var remaining = segments.slice(i + 1);\n        segments = ref.toSegments.concat(remaining);\n        doAgain = true;\n        break;\n      }\n\n      var refList = refLists[subpath];\n      if (refList && refList !== ignore) {\n        var belowDescendant = i + 2 < len;\n        var belowChild = i + 1 < len;\n        if (!(belowDescendant || forArrayMutator && belowChild)) continue;\n        segments = refList.dereference(segments, i);\n        doAgain = true;\n        break;\n      }\n    }\n  } while (doAgain);\n  // If a dereference fails, return a path that will result in a null value\n  // instead of a path to everything in the model\n  if (segments.length === 0) return ['$null'];\n  return segments;\n};\n\nfunction noopDereference(segments) {\n  return segments;\n}\n\nfunction Ref(model, from, to, options) {\n  this.model = model && model.pass({$ref: this});\n  this.from = from;\n  this.to = to;\n  this.fromSegments = from.split('.');\n  this.toSegments = to.split('.');\n  this.parentTos = [];\n  for (var i = 1, len = this.toSegments.length; i < len; i++) {\n    var parentTo = this.toSegments.slice(0, i).join('.');\n    this.parentTos.push(parentTo);\n  }\n  this.updateIndices = options && options.updateIndices;\n}\nfunction FromMap() {}\nfunction ToMap() {}\n\nfunction Refs() {\n  this.fromMap = new FromMap();\n  this.toMap = new ToMap();\n  this.parentToMap = new ToMap();\n}\n\nRefs.prototype.add = function(ref) {\n  this.fromMap[ref.from] = ref;\n  listMapAdd(this.toMap, ref.to, ref);\n  for (var i = 0, len = ref.parentTos.length; i < len; i++) {\n    listMapAdd(this.parentToMap, ref.parentTos[i], ref);\n  }\n};\n\nRefs.prototype.remove = function(from) {\n  var ref = this.fromMap[from];\n  if (!ref) return;\n  delete this.fromMap[from];\n  listMapRemove(this.toMap, ref.to, ref);\n  for (var i = 0, len = ref.parentTos.length; i < len; i++) {\n    listMapRemove(this.parentToMap, ref.parentTos[i], ref);\n  }\n  return ref;\n};\n\nRefs.prototype.toJSON = function() {\n  var out = [];\n  for (var from in this.fromMap) {\n    var ref = this.fromMap[from];\n    out.push([ref.from, ref.to]);\n  }\n  return out;\n};\n\nfunction listMapAdd(map, name, item) {\n  map[name] || (map[name] = []);\n  map[name].push(item);\n}\n\nfunction listMapRemove(map, name, item) {\n  var items = map[name];\n  if (!items) return;\n  var index = items.indexOf(item);\n  if (index === -1) return;\n  items.splice(index, 1);\n  if (!items.length) delete map[name];\n}\n","var util = require('../util');\nvar Model = require('./Model');\n\nModel.INITS.push(function(model) {\n  var root = model.root;\n  root._refLists = new RefLists();\n  for (var type in Model.MUTATOR_EVENTS) {\n    addListener(root, type);\n  }\n});\n\nfunction addListener(model, type) {\n  model.on(type + 'Immediate', refListListener);\n  function refListListener(segments, eventArgs) {\n    var pass = eventArgs[eventArgs.length - 1];\n    // Check for updates on or underneath paths\n    var fromMap = model._refLists.fromMap;\n    for (var from in fromMap) {\n      var refList = fromMap[from];\n      if (pass.$refList === refList) continue;\n      refList.onMutation(type, segments, eventArgs);\n    }\n  }\n}\n\n/**\n * @param {String} type\n * @param {Array} segments\n * @param {Array} eventArgs\n * @param {RefList} refList\n */\nfunction patchFromEvent(type, segments, eventArgs, refList) {\n  var fromLength = refList.fromSegments.length;\n  var segmentsLength = segments.length;\n  var pass = eventArgs[eventArgs.length - 1];\n  var model = refList.model.pass(pass, true);\n\n  // Mutation on the `from` output itself\n  if (segmentsLength === fromLength) {\n    if (type === 'insert') {\n      var index = eventArgs[0];\n      var values = eventArgs[1];\n      var ids = setNewToValues(model, refList, values);\n      model._insert(refList.idsSegments, index, ids);\n      return;\n    }\n\n    if (type === 'remove') {\n      var index = eventArgs[0];\n      var howMany = eventArgs[1].length;\n      var ids = model._remove(refList.idsSegments, index, howMany);\n      // Delete the appropriate items underneath `to` if the `deleteRemoved`\n      // option was set true\n      if (refList.deleteRemoved) {\n        for (var i = 0; i < ids.length; i++) {\n          var item = refList.itemById(ids[i]);\n          model._del(refList.toSegmentsByItem(item));\n        }\n      }\n      return;\n    }\n\n    if (type === 'move') {\n      var from = eventArgs[0];\n      var to = eventArgs[1];\n      var howMany = eventArgs[2];\n      model._move(refList.idsSegments, from, to, howMany);\n      return;\n    }\n\n    // Change of the entire output\n    var values = (type === 'change') ?\n      eventArgs[0] : model._get(refList.fromSegments);\n    // Set ids to empty list if output is set to null\n    if (!values) {\n      model._set(refList.idsSegments, []);\n      return;\n    }\n    // If the entire output is set, create a list of ids based on the output,\n    // and update the corresponding items\n    var ids = setNewToValues(model, refList, values);\n    model._set(refList.idsSegments, ids);\n    return;\n  }\n\n  // If mutation is on a parent of `from`, we might need to re-create the\n  // entire refList output\n  if (segmentsLength < fromLength) {\n    model._setArrayDiff(refList.fromSegments, refList.get());\n    return;\n  }\n\n  var index = segments[fromLength];\n  var value = model._get(refList.fromSegments.concat(index));\n  var toSegments = refList.toSegmentsByItem(value);\n\n  // Mutation underneath a child of the `from` object.\n  if (segmentsLength > fromLength + 1) {\n    throw new Error('Mutation on descendant of refList `from`' +\n      ' should have been dereferenced: ' + segments.join('.'));\n  }\n\n  // Otherwise, mutation of a child of the `from` object\n\n  // If changing the item itself, it will also have to be re-set on the\n  // original object\n  if (type === 'change') {\n    model._set(toSegments, value);\n    updateIdForValue(model, refList, index, value);\n    return;\n  }\n  if (type === 'insert' || type === 'remove' || type === 'move') {\n    throw new Error('Array mutation on child of refList `from`' +\n      'should have been dereferenced: ' + segments.join('.'));\n  }\n}\n\n/**\n * @private\n * @param {Model} model\n * @param {RefList} refList\n * @param {Array} values\n */\nfunction setNewToValues(model, refList, values) {\n  var ids = [];\n  for (var i = 0; i < values.length; i++) {\n    var value = values[i];\n    var id = refList.idByItem(value);\n    if (id === undefined && typeof value === 'object') {\n      id = value.id = model.id();\n    }\n    var toSegments = refList.toSegmentsByItem(value);\n    if (id === undefined || toSegments === undefined) {\n      throw new Error('Unable to add item to refList: ' + value);\n    }\n    if (model._get(toSegments) !== value) {\n      model._set(toSegments, value);\n    }\n    ids.push(id);\n  }\n  return ids;\n}\nfunction updateIdForValue(model, refList, index, value) {\n  var id = refList.idByItem(value);\n  var outSegments = refList.idsSegments.concat(index);\n  model._set(outSegments, id);\n}\n\nfunction patchToEvent(type, segments, eventArgs, refList) {\n  var toLength = refList.toSegments.length;\n  var segmentsLength = segments.length;\n  var pass = eventArgs[eventArgs.length - 1];\n  var model = refList.model.pass(pass, true);\n\n  // Mutation on the `to` object itself\n  if (segmentsLength === toLength) {\n    if (type === 'insert') {\n      var values = eventArgs[1];\n      for (var i = 0; i < values.length; i++) {\n        var value = values[i];\n        var indices = refList.indicesByItem(value);\n        if (!indices) continue;\n        for (var j = 0; j < indices.length; j++) {\n          var outSegments = refList.fromSegments.concat(indices[j]);\n          model._set(outSegments, value);\n        }\n      }\n      return;\n    }\n\n    if (type === 'remove') {\n      var removeIndex = eventArgs[0];\n      var values = eventArgs[1];\n      var howMany = values.length;\n      for (var i = removeIndex, len = removeIndex + howMany; i < len; i++) {\n        var indices = refList.indicesByItem(values[i]);\n        if (!indices) continue;\n        for (var j = 0, indicesLen = indices.length; j < indicesLen; j++) {\n          var outSegments = refList.fromSegments.concat(indices[j]);\n          model._set(outSegments, undefined);\n        }\n      }\n      return;\n    }\n\n    if (type === 'move') {\n      // Moving items in the `to` object should have no effect on the output\n      return;\n    }\n  }\n\n  // Mutation on or above the `to` object\n  if (segmentsLength <= toLength) {\n    // If the entire `to` object is updated, we need to re-create the\n    // entire refList output and apply what is different\n    model._setArrayDiff(refList.fromSegments, refList.get());\n    return;\n  }\n\n  // Mutation underneath a child of the `to` object. The item will already\n  // be up to date, since it is under an object reference. Just re-emit\n  if (segmentsLength > toLength + 1) {\n    var value = model._get(segments.slice(0, toLength + 1));\n    var indices = refList.indicesByItem(value);\n    if (!indices) return;\n    var remaining = segments.slice(toLength + 1);\n    for (var i = 0; i < indices.length; i++) {\n      var index = indices[i];\n      var dereferenced = refList.fromSegments.concat(index, remaining);\n      dereferenced = model._dereference(dereferenced, null, refList);\n      eventArgs = eventArgs.slice();\n      eventArgs[eventArgs.length - 1] = model._pass;\n      model.emit(type, dereferenced, eventArgs);\n    }\n    return;\n  }\n\n  // Otherwise, mutation of a child of the `to` object\n\n  // If changing the item itself, it will also have to be re-set on the\n  // array created by the refList\n  if (type === 'change' || type === 'load' || type === 'unload') {\n    var value, previous;\n    if (type === 'change') {\n      value = eventArgs[0];\n      previous = eventArgs[1];\n    } else if (type === 'load') {\n      value = eventArgs[0];\n      previous = undefined;\n    } else if (type === 'unload') {\n      value = undefined;\n      previous = eventArgs[0];\n    }\n    var newIndices = refList.indicesByItem(value);\n    var oldIndices = refList.indicesByItem(previous);\n    if (!newIndices && !oldIndices) return;\n    if (oldIndices && !equivalentArrays(oldIndices, newIndices)) {\n      // The changed item used to refer to some indices, but no longer does\n      for (var i = 0; i < oldIndices.length; i++) {\n        var outSegments = refList.fromSegments.concat(oldIndices[i]);\n        model._set(outSegments, undefined);\n      }\n    }\n    if (newIndices) {\n      for (var i = 0; i < newIndices.length; i++) {\n        var outSegments = refList.fromSegments.concat(newIndices[i]);\n        model._set(outSegments, value);\n      }\n    }\n    return;\n  }\n\n  var value = model._get(segments.slice(0, toLength + 1));\n  var indices = refList.indicesByItem(value);\n  if (!indices) return;\n\n  if (type === 'insert' || type === 'remove' || type === 'move') {\n    // Array mutations will have already been updated via an object\n    // reference, so only re-emit\n    for (var i = 0; i < indices.length; i++) {\n      var dereferenced = refList.fromSegments.concat(indices[i]);\n      dereferenced = model._dereference(dereferenced, null, refList);\n      eventArgs = eventArgs.slice();\n      eventArgs[eventArgs.length - 1] = model._pass;\n      model.emit(type, dereferenced, eventArgs);\n    }\n  }\n}\nfunction equivalentArrays(a, b) {\n  if (!a || !b) return false;\n  if (a.length !== b.length) return false;\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nfunction patchIdsEvent(type, segments, eventArgs, refList) {\n  var idsLength = refList.idsSegments.length;\n  var segmentsLength = segments.length;\n  var pass = eventArgs[eventArgs.length - 1];\n  var model = refList.model.pass(pass, true);\n\n  // An array mutation of the ids should be mirrored with a like change in\n  // the output array\n  if (segmentsLength === idsLength) {\n    if (type === 'insert') {\n      var index = eventArgs[0];\n      var inserted = eventArgs[1];\n      var values = [];\n      for (var i = 0; i < inserted.length; i++) {\n        var value = refList.itemById(inserted[i]);\n        values.push(value);\n      }\n      model._insert(refList.fromSegments, index, values);\n      return;\n    }\n\n    if (type === 'remove') {\n      var index = eventArgs[0];\n      var howMany = eventArgs[1].length;\n      model._remove(refList.fromSegments, index, howMany);\n      return;\n    }\n\n    if (type === 'move') {\n      var from = eventArgs[0];\n      var to = eventArgs[1];\n      var howMany = eventArgs[2];\n      model._move(refList.fromSegments, from, to, howMany);\n      return;\n    }\n  }\n\n  // Mutation on the `ids` list itself\n  if (segmentsLength <= idsLength) {\n    // If the entire `ids` array is updated, we need to re-create the\n    // entire refList output and apply what is different\n    model._setArrayDiff(refList.fromSegments, refList.get());\n    return;\n  }\n\n  // Otherwise, direct mutation of a child in the `ids` object or mutation\n  // underneath an item in the `ids` list. Update the item for the appropriate\n  // id if it has changed\n  var index = segments[idsLength];\n  var id = refList.idByIndex(index);\n  var item = refList.itemById(id);\n  var itemSegments = refList.fromSegments.concat(index);\n  if (model._get(itemSegments) !== item) {\n    model._set(itemSegments, item);\n  }\n}\n\nModel.prototype.refList = function() {\n  var from, to, ids, options;\n  if (arguments.length === 2) {\n    to = arguments[0];\n    ids = arguments[1];\n  } else if (arguments.length === 3) {\n    if (this.isPath(arguments[2])) {\n      from = arguments[0];\n      to = arguments[1];\n      ids = arguments[2];\n    } else {\n      to = arguments[0];\n      ids = arguments[1];\n      options = arguments[2];\n    }\n  } else {\n    from = arguments[0];\n    to = arguments[1];\n    ids = arguments[2];\n    options = arguments[3];\n  }\n  var fromPath = this.path(from);\n  var toPath;\n  if (Array.isArray(to)) {\n    toPath = [];\n    for (var i = 0; i < to.length; i++) {\n      toPath.push(this.path(to[i]));\n    }\n  } else {\n    toPath = this.path(to);\n  }\n  var idsPath = this.path(ids);\n  var refList = new RefList(this.root, fromPath, toPath, idsPath, options);\n  this.root._refLists.remove(fromPath);\n  refList.model._setArrayDiff(refList.fromSegments, refList.get());\n  this.root._refLists.add(refList);\n  return this.scope(fromPath);\n};\n\nfunction RefList(model, from, to, ids, options) {\n  this.model = model && model.pass({$refList: this});\n  this.from = from;\n  this.to = to;\n  this.ids = ids;\n  this.fromSegments = from && from.split('.');\n  this.toSegments = to && to.split('.');\n  this.idsSegments = ids && ids.split('.');\n  this.options = options;\n  this.deleteRemoved = options && options.deleteRemoved;\n}\n\n// The default implementation assumes that the ids array is a flat list of\n// keys on the to object. Ideally, this mapping could be customized via\n// inheriting from RefList and overriding these methods without having to\n// modify the above event handling code.\n//\n// In the default refList implementation, `key` and `id` are equal.\n//\n// Terms in the below methods:\n//   `item`  - Object on the `to` path, which gets mirrored on the `from` path\n//   `key`   - The property under `to` at which an item is located\n//   `id`    - String or object in the array at the `ids` path\n//   `index` - The index of an id, which corresponds to an index on `from`\nRefList.prototype.get = function() {\n  var ids = this.model._get(this.idsSegments);\n  if (!ids) return [];\n  var items = this.model._get(this.toSegments);\n  var out = [];\n  for (var i = 0; i < ids.length; i++) {\n    var key = ids[i];\n    out.push(items && items[key]);\n  }\n  return out;\n};\nRefList.prototype.dereference = function(segments, i) {\n  var remaining = segments.slice(i + 1);\n  var key = this.idByIndex(remaining[0]);\n  if (key == null) return [];\n  remaining[0] = key;\n  return this.toSegments.concat(remaining);\n};\nRefList.prototype.toSegmentsByItem = function(item) {\n  var key = this.idByItem(item);\n  if (key === undefined) return;\n  return this.toSegments.concat(key);\n};\nRefList.prototype.idByItem = function(item) {\n  if (item && item.id) return item.id;\n  var items = this.model._get(this.toSegments);\n  for (var key in items) {\n    if (item === items[key]) return key;\n  }\n};\nRefList.prototype.indicesByItem = function(item) {\n  var id = this.idByItem(item);\n  var ids = this.model._get(this.idsSegments);\n  if (!ids) return;\n  var indices;\n  var index = -1;\n  for (;;) {\n    index = ids.indexOf(id, index + 1);\n    if (index === -1) break;\n    if (indices) {\n      indices.push(index);\n    } else {\n      indices = [index];\n    }\n  }\n  return indices;\n};\nRefList.prototype.itemById = function(id) {\n  return this.model._get(this.toSegments.concat(id));\n};\nRefList.prototype.idByIndex = function(index) {\n  return this.model._get(this.idsSegments.concat(index));\n};\nRefList.prototype.onMutation = function(type, segments, eventArgs) {\n  if (util.mayImpact(this.toSegments, segments)) {\n    patchToEvent(type, segments, eventArgs, this);\n  } else if (util.mayImpact(this.idsSegments, segments)) {\n    patchIdsEvent(type, segments, eventArgs, this);\n  } else if (util.mayImpact(this.fromSegments, segments)) {\n    patchFromEvent(type, segments, eventArgs, this);\n  }\n};\n\nfunction FromMap() {}\n\nfunction RefLists() {\n  this.fromMap = new FromMap();\n}\n\nRefLists.prototype.add = function(refList) {\n  this.fromMap[refList.from] = refList;\n};\n\nRefLists.prototype.remove = function(from) {\n  var refList = this.fromMap[from];\n  delete this.fromMap[from];\n  return refList;\n};\n\nRefLists.prototype.toJSON = function() {\n  var out = [];\n  for (var from in this.fromMap) {\n    var refList = this.fromMap[from];\n    out.push([refList.from, refList.to, refList.ids, refList.options]);\n  }\n  return out;\n};\n","var util = require('../util');\nvar Model = require('./Model');\nvar arrayDiff = require('arraydiff');\n\nModel.prototype.setDiff = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._setDiff(segments, value, cb);\n};\nModel.prototype._setDiff = function(segments, value, cb) {\n  segments = this._dereference(segments);\n  var model = this;\n  function setDiff(doc, docSegments, fnCb) {\n    var previous = doc.get(docSegments);\n    if (util.equal(previous, value)) {\n      fnCb();\n      return previous;\n    }\n    doc.set(docSegments, value, fnCb);\n    model.emit('change', segments, [value, previous, model._pass]);\n    return previous;\n  }\n  return this._mutate(segments, setDiff, cb);\n};\n\nModel.prototype.setDiffDeep = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._setDiffDeep(segments, value, cb);\n};\nModel.prototype._setDiffDeep = function(segments, value, cb) {\n  var before = this._get(segments);\n  cb = this.wrapCallback(cb);\n  var group = util.asyncGroup(cb);\n  var finished = group();\n  diffDeep(this, segments, before, value, group);\n  finished();\n};\nfunction diffDeep(model, segments, before, after, group) {\n  if (typeof before !== 'object' || !before ||\n      typeof after !== 'object' || !after) {\n    // Set the entire value if not diffable\n    model._set(segments, after, group());\n    return;\n  }\n  if (Array.isArray(before) && Array.isArray(after)) {\n    var diff = arrayDiff(before, after, util.deepEqual);\n    if (!diff.length) return;\n    // If the only change is a single item replacement, diff the item instead\n    if (\n      diff.length === 2 &&\n      diff[0].index === diff[1].index &&\n      diff[0] instanceof arrayDiff.RemoveDiff &&\n      diff[0].howMany === 1 &&\n      diff[1] instanceof arrayDiff.InsertDiff &&\n      diff[1].values.length === 1\n    ) {\n      var index = diff[0].index;\n      var itemSegments = segments.concat(index);\n      diffDeep(model, itemSegments, before[index], after[index], group);\n      return;\n    }\n    model._applyArrayDiff(segments, diff, group());\n    return;\n  }\n\n  // Delete keys that were in before but not after\n  for (var key in before) {\n    if (key in after) continue;\n    var itemSegments = segments.concat(key);\n    model._del(itemSegments, group());\n  }\n\n  // Diff each property in after\n  for (var key in after) {\n    if (util.deepEqual(before[key], after[key])) continue;\n    var itemSegments = segments.concat(key);\n    diffDeep(model, itemSegments, before[key], after[key], group);\n  }\n}\n\nModel.prototype.setArrayDiff = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._setArrayDiff(segments, value, cb);\n};\nModel.prototype.setArrayDiffDeep = function() {\n  var subpath, value, cb;\n  if (arguments.length === 1) {\n    value = arguments[0];\n  } else if (arguments.length === 2) {\n    subpath = arguments[0];\n    value = arguments[1];\n  } else {\n    subpath = arguments[0];\n    value = arguments[1];\n    cb = arguments[2];\n  }\n  var segments = this._splitPath(subpath);\n  return this._setArrayDiffDeep(segments, value, cb);\n};\nModel.prototype._setArrayDiffDeep = function(segments, value, cb) {\n  return this._setArrayDiff(segments, value, cb, util.deepEqual);\n};\nModel.prototype._setArrayDiff = function(segments, value, cb, _equalFn) {\n  var before = this._get(segments);\n  if (before === value) return this.wrapCallback(cb)();\n  if (!Array.isArray(before) || !Array.isArray(value)) {\n    this._set(segments, value, cb);\n    return;\n  }\n  var diff = arrayDiff(before, value, _equalFn);\n  this._applyArrayDiff(segments, diff, cb);\n};\nModel.prototype._applyArrayDiff = function(segments, diff, cb) {\n  if (!diff.length) return this.wrapCallback(cb)();\n  segments = this._dereference(segments);\n  var model = this;\n  function applyArrayDiff(doc, docSegments, fnCb) {\n    var group = util.asyncGroup(fnCb);\n    for (var i = 0, len = diff.length; i < len; i++) {\n      var item = diff[i];\n      if (item instanceof arrayDiff.InsertDiff) {\n        // Insert\n        doc.insert(docSegments, item.index, item.values, group());\n        model.emit('insert', segments, [item.index, item.values, model._pass]);\n      } else if (item instanceof arrayDiff.RemoveDiff) {\n        // Remove\n        var removed = doc.remove(docSegments, item.index, item.howMany, group());\n        model.emit('remove', segments, [item.index, removed, model._pass]);\n      } else if (item instanceof arrayDiff.MoveDiff) {\n        // Move\n        var moved = doc.move(docSegments, item.from, item.to, item.howMany, group());\n        model.emit('move', segments, [item.from, item.to, moved.length, model._pass]);\n      }\n    }\n  }\n  return this._mutate(segments, applyArrayDiff, cb);\n};\n","var util = require('../util');\nvar Model = require('./Model');\nvar Query = require('./Query');\nvar CollectionCounter = require('./CollectionCounter');\n\nModel.INITS.push(function(model, options) {\n  model.root.fetchOnly = options.fetchOnly;\n  model.root.unloadDelay = options.unloadDelay || (util.isServer) ? 0 : 1000;\n\n  // Track the total number of active fetches per doc\n  model.root._fetchedDocs = new CollectionCounter();\n  // Track the total number of active susbscribes per doc\n  model.root._subscribedDocs = new CollectionCounter();\n});\n\nModel.prototype.fetch = function() {\n  this._forSubscribable(arguments, 'fetch');\n  return this;\n};\nModel.prototype.unfetch = function() {\n  this._forSubscribable(arguments, 'unfetch');\n  return this;\n};\nModel.prototype.subscribe = function() {\n  this._forSubscribable(arguments, 'subscribe');\n  return this;\n};\nModel.prototype.unsubscribe = function() {\n  this._forSubscribable(arguments, 'unsubscribe');\n  return this;\n};\n\nModel.prototype._forSubscribable = function(argumentsObject, method) {\n  var args, cb;\n  if (!argumentsObject.length) {\n    // Use this model's scope if no arguments\n    args = [null];\n  } else if (typeof argumentsObject[0] === 'function') {\n    // Use this model's scope if the first argument is a callback\n    args = [null];\n    cb = argumentsObject[0];\n  } else if (Array.isArray(argumentsObject[0])) {\n    // Items can be passed in as an array\n    args = argumentsObject[0];\n    cb = argumentsObject[1];\n  } else {\n    // Or as multiple arguments\n    args = Array.prototype.slice.call(argumentsObject);\n    var last = args[args.length - 1];\n    if (typeof last === 'function') cb = args.pop();\n  }\n\n  var group = util.asyncGroup(this.wrapCallback(cb));\n  var finished = group();\n  var docMethod = method + 'Doc';\n\n  this.root.connection.startBulk();\n  for (var i = 0; i < args.length; i++) {\n    var item = args[i];\n    if (item instanceof Query) {\n      item[method](group());\n    } else {\n      var segments = this._dereference(this._splitPath(item));\n      if (segments.length === 2) {\n        // Do the appropriate method for a single document.\n        this[docMethod](segments[0], segments[1], group());\n      } else {\n        var message = 'Cannot ' + method + ' to path: ' + segments.join('.');\n        group()(new Error(message));\n      }\n    }\n  }\n  this.root.connection.endBulk();\n  process.nextTick(finished);\n};\n\nModel.prototype.fetchDoc = function(collectionName, id, cb) {\n  cb = this.wrapCallback(cb);\n\n  // Maintain a count of fetches so that we can unload the document\n  // when there are no remaining fetches or subscribes for that document\n  this._context.fetchDoc(collectionName, id);\n  this.root._fetchedDocs.increment(collectionName, id);\n\n  // Fetch\n  var doc = this.getOrCreateDoc(collectionName, id);\n  doc.shareDoc.fetch(cb);\n};\n\nModel.prototype.subscribeDoc = function(collectionName, id, cb) {\n  cb = this.wrapCallback(cb);\n\n  // Maintain a count of subscribes so that we can unload the document\n  // when there are no remaining fetches or subscribes for that document\n  this._context.subscribeDoc(collectionName, id);\n  this.root._subscribedDocs.increment(collectionName, id);\n\n  var doc = this.getOrCreateDoc(collectionName, id);\n  // Early return if we know we are already subscribed\n  if (doc.shareDoc.subscribed) {\n    return cb();\n  }\n  // Subscribe\n  if (this.root.fetchOnly) {\n    doc.shareDoc.fetch(cb);\n  } else {\n    doc.shareDoc.subscribe(cb);\n  }\n};\n\nModel.prototype.unfetchDoc = function(collectionName, id, cb) {\n  cb = this.wrapCallback(cb);\n  this._context.unfetchDoc(collectionName, id);\n\n  // No effect if the document is not currently fetched\n  if (!this.root._fetchedDocs.get(collectionName, id)) return cb();\n\n  var model = this;\n  if (this.root.unloadDelay) {\n    setTimeout(finishUnfetchDoc, this.root.unloadDelay);\n  } else {\n    finishUnfetchDoc();\n  }\n  function finishUnfetchDoc() {\n    var count = model.root._fetchedDocs.decrement(collectionName, id);\n    if (count) return cb(null, count);\n    model._maybeUnloadDoc(collectionName, id);\n    cb(null, 0);\n  }\n};\n\nModel.prototype.unsubscribeDoc = function(collectionName, id, cb) {\n  cb = this.wrapCallback(cb);\n  this._context.unsubscribeDoc(collectionName, id);\n\n  // No effect if the document is not currently subscribed\n  if (!this.root._subscribedDocs.get(collectionName, id)) return cb();\n\n  var model = this;\n  if (this.root.unloadDelay) {\n    setTimeout(finishUnsubscribeDoc, this.root.unloadDelay);\n  } else {\n    finishUnsubscribeDoc();\n  }\n  function finishUnsubscribeDoc() {\n    var count = model.root._subscribedDocs.decrement(collectionName, id);\n    // If there are more remaining subscriptions, only decrement the count\n    // and callback with how many subscriptions are remaining\n    if (count) return cb(null, count);\n\n    // If there is only one remaining subscription, actually unsubscribe\n    if (model.root.fetchOnly) {\n      unsubscribeDocCallback();\n    } else {\n      var doc = model.getDoc(collectionName, id);\n      var shareDoc = doc && doc.shareDoc;\n      if (!shareDoc) return unsubscribeDocCallback();\n      shareDoc.unsubscribe(unsubscribeDocCallback);\n    }\n  }\n  function unsubscribeDocCallback(err) {\n    model._maybeUnloadDoc(collectionName, id);\n    if (err) return cb(err);\n    cb(null, 0);\n  }\n};\n\n// Removes the document from the local model if the model no longer has any\n// remaining fetches or subscribes via a query or direct loading\nModel.prototype._maybeUnloadDoc = function(collectionName, id) {\n  var doc = this.getDoc(collectionName, id);\n  if (!doc) return;\n\n  if (this._hasDocReferences(collectionName, id)) return;\n\n  var previous = doc.get();\n\n  // Remove doc from Racer\n  this.root.collections[collectionName].remove(id);\n  // Remove doc from Share\n  if (doc.shareDoc) doc.shareDoc.destroy();\n\n  this.emit('unload', [collectionName, id], [previous, this._pass]);\n};\n\nModel.prototype._hasDocReferences = function(collectionName, id) {\n  // Check if any fetched or subscribed queries currently have the\n  // id in their results\n  var queries = this.root._queries.collections[collectionName];\n  if (queries) {\n    for (var hash in queries) {\n      var query = queries[hash];\n      if (!query.subscribeCount && !query.fetchCount) continue;\n      if (query.idMap[id]) return true;\n    }\n  }\n\n  // Check if document currently has direct fetch or subscribe\n  if (\n    this.root._fetchedDocs.get(collectionName, id) ||\n    this.root._subscribedDocs.get(collectionName, id)\n  ) return true;\n\n  return false;\n};\n","var Model = require('./Model');\n\nModel.prototype.unbundle = function(data) {\n  if (this.connection) this.connection.startBulk();\n\n  // Re-create and subscribe queries; re-create documents associated with queries\n  this._initQueries(data.queries);\n\n  // Re-create other documents\n  for (var collectionName in data.collections) {\n    var collection = data.collections[collectionName];\n    for (var id in collection) {\n      this.getOrCreateDoc(collectionName, id, collection[id]);\n    }\n  }\n\n  for (var contextId in data.contexts) {\n    var contextData = data.contexts[contextId];\n    var contextModel = this.context(contextId);\n    // Re-init fetchedDocs counts\n    for (var collectionName in contextData.fetchedDocs) {\n      var collection = contextData.fetchedDocs[collectionName];\n      for (var id in collection) {\n        var count = collection[id];\n        while (count--) {\n          contextModel._context.fetchDoc(collectionName, id);\n          this._fetchedDocs.increment(collectionName, id);\n        }\n      }\n    }\n    // Subscribe to document subscriptions\n    for (var collectionName in contextData.subscribedDocs) {\n      var collection = contextData.subscribedDocs[collectionName];\n      for (var id in collection) {\n        var count = collection[id];\n        while (count--) {\n          contextModel.subscribeDoc(collectionName, id);\n        }\n      }\n    }\n    // Re-init createdDocs counts\n    for (var collectionName in contextData.createdDocs) {\n      var collection = contextData.createdDocs[collectionName];\n      for (var id in collection) {\n        // Count value doesn't matter for tracking creates\n        contextModel._context.createDoc(collectionName, id);\n      }\n    }\n  }\n\n  if (this.connection) this.connection.endBulk();\n\n  // Re-create refs\n  for (var i = 0; i < data.refs.length; i++) {\n    var item = data.refs[i];\n    this.ref(item[0], item[1]);\n  }\n  // Re-create refLists\n  for (var i = 0; i < data.refLists.length; i++) {\n    var item = data.refLists[i];\n    this.refList(item[0], item[1], item[2], item[3]);\n  }\n  // Re-create fns\n  for (var i = 0; i < data.fns.length; i++) {\n    var item = data.fns[i];\n    this.start.apply(this, item);\n  }\n  // Re-create filters\n  for (var i = 0; i < data.filters.length; i++) {\n    var item = data.filters[i];\n    var filter = this._filters.add(item[1], item[2], item[3], item[4], item[5]);\n    filter.ref(item[0]);\n  }\n};\n","var EventEmitter = require('events').EventEmitter;\nvar Model = require('./Model');\nvar util = require('./util');\n\nmodule.exports = Racer;\n\nfunction Racer() {\n  EventEmitter.call(this);\n}\n\nutil.mergeInto(Racer.prototype, EventEmitter.prototype);\n\n// Make classes accessible for use by plugins and tests\nRacer.prototype.Model = Model;\nRacer.prototype.util = util;\n\n// Support plugins on racer instances\nRacer.prototype.use = util.use;\nRacer.prototype.serverUse = util.serverUse;\n\nRacer.prototype.createModel = function(data) {\n  var model = new Model();\n  if (data) {\n    model.createConnection(data);\n    model.unbundle(data);\n  }\n  return model;\n};\n\nutil.serverRequire(module, './Racer.server');\n","var deepIs = require('deep-is');\n\nvar isServer = process.title !== 'browser';\nexports.isServer = isServer;\n\nexports.asyncGroup = asyncGroup;\nexports.castSegments = castSegments;\nexports.contains = contains;\nexports.copy = copy;\nexports.copyObject = copyObject;\nexports.deepCopy = deepCopy;\nexports.deepEqual = deepIs;\nexports.equal = equal;\nexports.equalsNaN = equalsNaN;\nexports.isArrayIndex = isArrayIndex;\nexports.lookup = lookup;\nexports.mergeInto = mergeInto;\nexports.mayImpact = mayImpact;\nexports.mayImpactAny = mayImpactAny;\nexports.serverRequire = serverRequire;\nexports.serverUse = serverUse;\nexports.use = use;\n\nfunction asyncGroup(cb) {\n  var group = new AsyncGroup(cb);\n  return function asyncGroupAdd() {\n    return group.add();\n  };\n}\n\n/**\n * @constructor\n * @param {Function} cb(err)\n */\nfunction AsyncGroup(cb) {\n  this.cb = cb;\n  this.isDone = false;\n  this.count = 0;\n}\nAsyncGroup.prototype.add = function() {\n  this.count++;\n  var self = this;\n  return function(err) {\n    self.count--;\n    if (self.isDone) return;\n    if (err) {\n      self.isDone = true;\n      self.cb(err);\n      return;\n    }\n    if (self.count > 0) return;\n    self.isDone = true;\n    self.cb();\n  };\n};\n\nfunction castSegments(segments) {\n  // Cast number path segments from strings to numbers\n  for (var i = segments.length; i--;) {\n    var segment = segments[i];\n    if (typeof segment === 'string' && isArrayIndex(segment)) {\n      segments[i] = +segment;\n    }\n  }\n  return segments;\n}\n\nfunction contains(segments, testSegments) {\n  for (var i = 0; i < segments.length; i++) {\n    if (segments[i] !== testSegments[i]) return false;\n  }\n  return true;\n}\n\nfunction copy(value) {\n  if (value instanceof Date) return new Date(value);\n  if (typeof value === 'object') {\n    if (value === null) return null;\n    if (Array.isArray(value)) return value.slice();\n    return copyObject(value);\n  }\n  return value;\n}\n\nfunction copyObject(object) {\n  var out = new object.constructor();\n  for (var key in object) {\n    if (object.hasOwnProperty(key)) {\n      out[key] = object[key];\n    }\n  }\n  return out;\n}\n\nfunction deepCopy(value) {\n  if (value instanceof Date) return new Date(value);\n  if (typeof value === 'object') {\n    if (value === null) return null;\n    if (Array.isArray(value)) {\n      var array = [];\n      for (var i = value.length; i--;) {\n        array[i] = deepCopy(value[i]);\n      }\n      return array;\n    }\n    var object = new value.constructor();\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        object[key] = deepCopy(value[key]);\n      }\n    }\n    return object;\n  }\n  return value;\n}\n\nfunction equal(a, b) {\n  return (a === b) || (equalsNaN(a) && equalsNaN(b));\n}\n\nfunction equalsNaN(x) {\n  // eslint-disable-next-line no-self-compare\n  return x !== x;\n}\n\nfunction isArrayIndex(segment) {\n  return (/^[0-9]+$/).test(segment);\n}\n\nfunction lookup(segments, value) {\n  if (!segments) return value;\n\n  for (var i = 0, len = segments.length; i < len; i++) {\n    if (value == null) return value;\n    value = value[segments[i]];\n  }\n  return value;\n}\n\nfunction mayImpactAny(segmentsList, testSegments) {\n  for (var i = 0, len = segmentsList.length; i < len; i++) {\n    if (mayImpact(segmentsList[i], testSegments)) return true;\n  }\n  return false;\n}\n\nfunction mayImpact(segments, testSegments) {\n  var len = Math.min(segments.length, testSegments.length);\n  for (var i = 0; i < len; i++) {\n    if (segments[i] !== testSegments[i]) return false;\n  }\n  return true;\n}\n\nfunction mergeInto(to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to;\n}\n\nfunction serverRequire(module, id) {\n  if (!isServer) return;\n  return module.require(id);\n}\n\nfunction serverUse(module, id, options) {\n  if (!isServer) return this;\n  var plugin = module.require(id);\n  return this.use(plugin, options);\n}\n\nfunction use(plugin, options) {\n  // Don't include a plugin more than once\n  var plugins = this._plugins || (this._plugins = []);\n  if (plugins.indexOf(plugin) === -1) {\n    plugins.push(plugin);\n    plugin(this, options);\n  }\n  return this;\n}\n","if (typeof require === 'function') {\n  var serializeObject = require('serialize-object');\n}\n\n// UPDATE_PROPERTIES map HTML attribute names to an Element DOM property that\n// should be used for setting on bindings updates instead of setAttribute.\n//\n// https://github.com/jquery/jquery/blob/1.x-master/src/attributes/prop.js\n// https://github.com/jquery/jquery/blob/master/src/attributes/prop.js\n// http://webbugtrack.blogspot.com/2007/08/bug-242-setattribute-doesnt-always-work.html\nvar UPDATE_PROPERTIES = {\n  checked: 'checked'\n, disabled: 'disabled'\n, selected: 'selected'\n, type: 'type'\n, value: 'value'\n, 'class': 'className'\n, 'for': 'htmlFor'\n, tabindex: 'tabIndex'\n, readonly: 'readOnly'\n, maxlength: 'maxLength'\n, cellspacing: 'cellSpacing'\n, cellpadding: 'cellPadding'\n, rowspan: 'rowSpan'\n, colspan: 'colSpan'\n, usemap: 'useMap'\n, frameborder: 'frameBorder'\n, contenteditable: 'contentEditable'\n, enctype: 'encoding'\n, id: 'id'\n, title: 'title'\n};\n// CREATE_PROPERTIES map HTML attribute names to an Element DOM property that\n// should be used for setting on Element rendering instead of setAttribute.\n// input.defaultChecked and input.defaultValue affect the attribute, so we want\n// to use these for initial dynamic rendering. For binding updates,\n// input.checked and input.value are modified.\nvar CREATE_PROPERTIES = {};\nmergeInto(UPDATE_PROPERTIES, CREATE_PROPERTIES);\nCREATE_PROPERTIES.checked = 'defaultChecked';\nCREATE_PROPERTIES.value = 'defaultValue';\n\n// http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nvar VOID_ELEMENTS = {\n  area: true\n, base: true\n, br: true\n, col: true\n, embed: true\n, hr: true\n, img: true\n, input: true\n, keygen: true\n, link: true\n, menuitem: true\n, meta: true\n, param: true\n, source: true\n, track: true\n, wbr: true\n};\n\nvar NAMESPACE_URIS = {\n  svg: 'http://www.w3.org/2000/svg'\n, xlink: 'http://www.w3.org/1999/xlink'\n, xmlns: 'http://www.w3.org/2000/xmlns/'\n};\n\nexports.CREATE_PROPERTIES = CREATE_PROPERTIES;\nexports.UPDATE_PROPERTIES = UPDATE_PROPERTIES;\nexports.VOID_ELEMENTS = VOID_ELEMENTS;\nexports.NAMESPACE_URIS = NAMESPACE_URIS;\n\n// Template Classes\nexports.Template = Template;\nexports.Doctype = Doctype;\nexports.Text = Text;\nexports.DynamicText = DynamicText;\nexports.Comment = Comment;\nexports.DynamicComment = DynamicComment;\nexports.Html = Html;\nexports.DynamicHtml = DynamicHtml;\nexports.Element = Element;\nexports.DynamicElement = DynamicElement;\nexports.Block = Block;\nexports.ConditionalBlock = ConditionalBlock;\nexports.EachBlock = EachBlock;\n\nexports.Attribute = Attribute;\nexports.DynamicAttribute = DynamicAttribute;\n\n// Binding Classes\nexports.Binding = Binding;\nexports.NodeBinding = NodeBinding;\nexports.AttributeBinding = AttributeBinding;\nexports.RangeBinding = RangeBinding;\n\nfunction Template(content, source) {\n  this.content = content;\n  this.source = source;\n}\nTemplate.prototype.toString = function() {\n  return this.source;\n};\nTemplate.prototype.get = function(context, unescaped) {\n  return contentHtml(this.content, context, unescaped);\n};\nTemplate.prototype.getFragment = function(context, binding) {\n  var fragment = document.createDocumentFragment();\n  this.appendTo(fragment, context, binding);\n  return fragment;\n};\nTemplate.prototype.appendTo = function(parent, context) {\n  context.pause();\n  appendContent(parent, this.content, context);\n  context.unpause();\n};\nTemplate.prototype.attachTo = function(parent, node, context) {\n  context.pause();\n  var node = attachContent(parent, node, this.content, context);\n  context.unpause();\n  return node;\n};\nTemplate.prototype.update = function() {};\nTemplate.prototype.stringify = function(value) {\n  return (value == null) ? '' : value + '';\n};\nTemplate.prototype.module = 'templates';\nTemplate.prototype.type = 'Template';\nTemplate.prototype.serialize = function() {\n  return serializeObject.instance(this, this.content, this.source);\n};\n\n\nfunction Doctype(name, publicId, systemId) {\n  this.name = name;\n  this.publicId = publicId;\n  this.systemId = systemId;\n}\nDoctype.prototype = new Template();\nDoctype.prototype.get = function() {\n  var publicText = (this.publicId) ?\n    ' PUBLIC \"' + this.publicId  + '\"' :\n    '';\n  var systemText = (this.systemId) ?\n    (this.publicId) ?\n      ' \"' + this.systemId + '\"' :\n      ' SYSTEM \"' + this.systemId + '\"' :\n    '';\n  return '<!DOCTYPE ' + this.name + publicText + systemText + '>';\n};\nDoctype.prototype.appendTo = function() {\n  // Doctype could be created via:\n  //   document.implementation.createDocumentType(this.name, this.publicId, this.systemId)\n  // However, it does not appear possible or useful to append it to the\n  // document fragment. Therefore, just don't render it in the browser\n};\nDoctype.prototype.attachTo = function(parent, node) {\n  if (!node || node.nodeType !== 10) {\n    throw attachError(parent, node);\n  }\n  return node.nextSibling;\n};\nDoctype.prototype.type = 'Doctype';\nDoctype.prototype.serialize = function() {\n  return serializeObject.instance(this, this.name, this.publicId, this.systemId);\n};\n\nfunction Text(data) {\n  this.data = data;\n  this.escaped = escapeHtml(data);\n}\nText.prototype = new Template();\nText.prototype.get = function(context, unescaped) {\n  return (unescaped) ? this.data : this.escaped;\n};\nText.prototype.appendTo = function(parent) {\n  var node = document.createTextNode(this.data);\n  parent.appendChild(node);\n};\nText.prototype.attachTo = function(parent, node) {\n  return attachText(parent, node, this.data, this);\n};\nText.prototype.type = 'Text';\nText.prototype.serialize = function() {\n  return serializeObject.instance(this, this.data);\n};\n\nfunction DynamicText(expression) {\n  this.expression = expression;\n  this.unbound = false;\n}\nDynamicText.prototype = new Template();\nDynamicText.prototype.get = function(context, unescaped) {\n  var value = this.expression.get(context);\n  if (value instanceof Template) {\n    do {\n      value = value.get(context, unescaped);\n    } while (value instanceof Template);\n    return value;\n  }\n  var data = this.stringify(value);\n  return (unescaped) ? data : escapeHtml(data);\n};\nDynamicText.prototype.appendTo = function(parent, context) {\n  var value = this.expression.get(context);\n  if (value instanceof Template) {\n    value.appendTo(parent, context);\n    return;\n  }\n  var data = this.stringify(value);\n  var node = document.createTextNode(data);\n  parent.appendChild(node);\n  addNodeBinding(this, context, node);\n};\nDynamicText.prototype.attachTo = function(parent, node, context) {\n  var value = this.expression.get(context);\n  if (value instanceof Template) {\n    return value.attachTo(parent, node, context);\n  }\n  var data = this.stringify(value);\n  return attachText(parent, node, data, this, context);\n};\nDynamicText.prototype.update = function(context, binding) {\n  binding.node.data = this.stringify(this.expression.get(context));\n};\nDynamicText.prototype.type = 'DynamicText';\nDynamicText.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression);\n};\n\nfunction attachText(parent, node, data, template, context) {\n  if (!node) {\n    var newNode = document.createTextNode(data);\n    parent.appendChild(newNode);\n    addNodeBinding(template, context, newNode);\n    return;\n  }\n  if (node.nodeType === 3) {\n    // Proceed if nodes already match\n    if (node.data === data) {\n      addNodeBinding(template, context, node);\n      return node.nextSibling;\n    }\n    data = normalizeLineBreaks(data);\n    // Split adjacent text nodes that would have been merged together in HTML\n    var nextNode = splitData(node, data.length);\n    if (node.data !== data) {\n      throw attachError(parent, node);\n    }\n    addNodeBinding(template, context, node);\n    return nextNode;\n  }\n  // An empty text node might not be created at the end of some text\n  if (data === '') {\n    var newNode = document.createTextNode('');\n    parent.insertBefore(newNode, node || null);\n    addNodeBinding(template, context, newNode);\n    return node;\n  }\n  throw attachError(parent, node);\n}\n\nfunction Comment(data, hooks) {\n  this.data = data;\n  this.hooks = hooks;\n}\nComment.prototype = new Template();\nComment.prototype.get = function() {\n  return '<!--' + this.data + '-->';\n};\nComment.prototype.appendTo = function(parent, context) {\n  var node = document.createComment(this.data);\n  parent.appendChild(node);\n  emitHooks(this.hooks, context, node);\n};\nComment.prototype.attachTo = function(parent, node, context) {\n  return attachComment(parent, node, this.data, this, context);\n};\nComment.prototype.type = 'Comment';\nComment.prototype.serialize = function() {\n  return serializeObject.instance(this, this.data, this.hooks);\n}\n\nfunction DynamicComment(expression, hooks) {\n  this.expression = expression;\n  this.hooks = hooks;\n}\nDynamicComment.prototype = new Template();\nDynamicComment.prototype.get = function(context) {\n  var value = getUnescapedValue(this.expression, context);\n  var data = this.stringify(value);\n  return '<!--' + data + '-->';\n};\nDynamicComment.prototype.appendTo = function(parent, context) {\n  var value = getUnescapedValue(this.expression, context);\n  var data = this.stringify(value);\n  var node = document.createComment(data);\n  parent.appendChild(node);\n  addNodeBinding(this, context, node);\n};\nDynamicComment.prototype.attachTo = function(parent, node, context) {\n  var value = getUnescapedValue(this.expression, context);\n  var data = this.stringify(value);\n  return attachComment(parent, node, data, this, context);\n};\nDynamicComment.prototype.update = function(context, binding) {\n  var value = getUnescapedValue(this.expression, context);\n  binding.node.data = this.stringify(value);\n};\nDynamicComment.prototype.type = 'DynamicComment';\nDynamicComment.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression, this.hooks);\n}\n\nfunction attachComment(parent, node, data, template, context) {\n  // Sometimes IE fails to create Comment nodes from HTML or innerHTML.\n  // This is an issue inside of <select> elements, for example.\n  if (!node || node.nodeType !== 8) {\n    var newNode = document.createComment(data);\n    parent.insertBefore(newNode, node || null);\n    addNodeBinding(template, context, newNode);\n    return node;\n  }\n  // Proceed if nodes already match\n  if (node.data === data) {\n    addNodeBinding(template, context, node);\n    return node.nextSibling;\n  }\n  throw attachError(parent, node);\n}\n\nfunction addNodeBinding(template, context, node) {\n  if (template.expression && !template.unbound) {\n    context.addBinding(new NodeBinding(template, context, node));\n  }\n  emitHooks(template.hooks, context, node);\n}\n\nfunction Html(data) {\n  this.data = data;\n}\nHtml.prototype = new Template();\nHtml.prototype.get = function() {\n  return this.data;\n};\nHtml.prototype.appendTo = function(parent) {\n  var fragment = createHtmlFragment(parent, this.data);\n  parent.appendChild(fragment);\n};\nHtml.prototype.attachTo = function(parent, node) {\n  return attachHtml(parent, node, this.data);\n};\nHtml.prototype.type = \"Html\";\nHtml.prototype.serialize = function() {\n  return serializeObject.instance(this, this.data);\n};\n\nfunction DynamicHtml(expression) {\n  this.expression = expression;\n  this.ending = '/' + expression;\n}\nDynamicHtml.prototype = new Template();\nDynamicHtml.prototype.get = function(context) {\n  var value = getUnescapedValue(this.expression, context);\n  return this.stringify(value);\n};\nDynamicHtml.prototype.appendTo = function(parent, context, binding) {\n  var start = document.createComment(this.expression);\n  var end = document.createComment(this.ending);\n  var value = getUnescapedValue(this.expression, context);\n  var html = this.stringify(value);\n  var fragment = createHtmlFragment(parent, html);\n  parent.appendChild(start);\n  parent.appendChild(fragment);\n  parent.appendChild(end);\n  updateRange(context, binding, this, start, end);\n};\nDynamicHtml.prototype.attachTo = function(parent, node, context) {\n  var start = document.createComment(this.expression);\n  var end = document.createComment(this.ending);\n  var value = getUnescapedValue(this.expression, context);\n  var html = this.stringify(value);\n  parent.insertBefore(start, node || null);\n  node = attachHtml(parent, node, html);\n  parent.insertBefore(end, node || null);\n  updateRange(context, null, this, start, end);\n  return node;\n};\nDynamicHtml.prototype.update = function(context, binding) {\n  var parent = binding.start.parentNode;\n  if (!parent) return;\n  // Get start and end in advance, since binding is mutated in getFragment\n  var start = binding.start;\n  var end = binding.end;\n  var value = getUnescapedValue(this.expression, context);\n  var html = this.stringify(value);\n  var fragment = createHtmlFragment(parent, html);\n  var innerOnly = true;\n  replaceRange(context, start, end, fragment, binding, innerOnly);\n};\nDynamicHtml.prototype.type = 'DynamicHtml';\nDynamicHtml.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression);\n};\n\nfunction createHtmlFragment(parent, html) {\n  if (parent && parent.nodeType === 1) {\n    var range = document.createRange();\n    range.selectNodeContents(parent);\n    return range.createContextualFragment(html);\n  }\n  var div = document.createElement('div');\n  var range = document.createRange();\n  div.innerHTML = html;\n  range.selectNodeContents(div);\n  return range.extractContents();\n}\nfunction attachHtml(parent, node, html) {\n  var fragment = createHtmlFragment(parent, html);\n  for (var i = 0, len = fragment.childNodes.length; i < len; i++) {\n    if (!node) throw attachError(parent, node);\n    node = node.nextSibling;\n  }\n  return node;\n}\n\nfunction Attribute(data, ns) {\n  this.data = data;\n  this.ns = ns;\n}\nAttribute.prototype = new Template();\nAttribute.prototype.get = Attribute.prototype.getBound = function(context) {\n  return this.data;\n};\nAttribute.prototype.type = 'Attribute';\nAttribute.prototype.serialize = function() {\n  return serializeObject.instance(this, this.data, this.ns);\n};\n\nfunction DynamicAttribute(expression, ns) {\n  // In attributes, expression may be an instance of Template or Expression\n  this.expression = expression;\n  this.ns = ns;\n  this.elementNs = null;\n}\nDynamicAttribute.prototype = new Attribute();\nDynamicAttribute.prototype.get = function(context) {\n  return getUnescapedValue(this.expression, context);\n};\nDynamicAttribute.prototype.getBound = function(context, element, name, elementNs) {\n  this.elementNs = elementNs;\n  context.addBinding(new AttributeBinding(this, context, element, name));\n  return getUnescapedValue(this.expression, context);\n};\nDynamicAttribute.prototype.update = function(context, binding) {\n  var value = getUnescapedValue(this.expression, context);\n  var element = binding.element;\n  var propertyName = !this.elementNs && UPDATE_PROPERTIES[binding.name];\n  if (propertyName) {\n    if (propertyName === 'value') value = this.stringify(value);\n    if (element[propertyName] === value) return;\n    element[propertyName] = value;\n    return;\n  }\n  if (value === false || value == null) {\n    if (this.ns) {\n      element.removeAttributeNS(this.ns, binding.name);\n    } else {\n      element.removeAttribute(binding.name);\n    }\n    return;\n  }\n  if (value === true) value = binding.name;\n  if (this.ns) {\n    element.setAttributeNS(this.ns, binding.name, value);\n  } else {\n    element.setAttribute(binding.name, value);\n  }\n};\nDynamicAttribute.prototype.type = 'DynamicAttribute';\nDynamicAttribute.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression, this.ns);\n};\n\nfunction getUnescapedValue(expression, context) {\n  var unescaped = true;\n  var value = expression.get(context, unescaped);\n  while (value instanceof Template) {\n    value = value.get(context, unescaped);\n  }\n  return value;\n}\n\nfunction Element(tagName, attributes, content, hooks, selfClosing, notClosed, ns) {\n  this.tagName = tagName;\n  this.attributes = attributes;\n  this.content = content;\n  this.hooks = hooks;\n  this.selfClosing = selfClosing;\n  this.notClosed = notClosed;\n  this.ns = ns;\n\n  this.endTag = getEndTag(tagName, selfClosing, notClosed);\n  this.startClose = getStartClose(selfClosing);\n  var lowerTagName = tagName && tagName.toLowerCase();\n  this.unescapedContent = (lowerTagName === 'script' || lowerTagName === 'style');\n  this.bindContentToValue = (lowerTagName === 'textarea');\n}\nElement.prototype = new Template();\nElement.prototype.getTagName = function() {\n  return this.tagName;\n};\nElement.prototype.getEndTag = function() {\n  return this.endTag;\n};\nElement.prototype.get = function(context) {\n  var tagName = this.getTagName(context);\n  var endTag = this.getEndTag(tagName);\n  var tagItems = [tagName];\n  for (var key in this.attributes) {\n    var value = this.attributes[key].get(context);\n    if (value === true) {\n      tagItems.push(key);\n    } else if (value !== false && value != null) {\n      tagItems.push(key + '=\"' + escapeAttribute(value) + '\"');\n    }\n  }\n  var startTag = '<' + tagItems.join(' ') + this.startClose;\n  if (this.content) {\n    var inner = contentHtml(this.content, context, this.unescapedContent);\n    return startTag + inner + endTag;\n  }\n  return startTag + endTag;\n};\nElement.prototype.appendTo = function(parent, context) {\n  var tagName = this.getTagName(context);\n  var element = (this.ns) ?\n    document.createElementNS(this.ns, tagName) :\n    document.createElement(tagName);\n  for (var key in this.attributes) {\n    var attribute = this.attributes[key];\n    var value = attribute.getBound(context, element, key, this.ns);\n    if (value === false || value == null) continue;\n    var propertyName = !this.ns && CREATE_PROPERTIES[key];\n    if (propertyName) {\n      element[propertyName] = value;\n      continue;\n    }\n    if (value === true) value = key;\n    if (attribute.ns) {\n      element.setAttributeNS(attribute.ns, key, value);\n    } else {\n      element.setAttribute(key, value);\n    }\n  }\n  if (this.content) {\n    this._bindContent(context, element);\n    appendContent(element, this.content, context);\n  }\n  parent.appendChild(element);\n  emitHooks(this.hooks, context, element);\n};\nElement.prototype.attachTo = function(parent, node, context) {\n  var tagName = this.getTagName(context);\n  if (\n    !node ||\n    node.nodeType !== 1 ||\n    node.tagName.toLowerCase() !== tagName.toLowerCase()\n  ) {\n    throw attachError(parent, node);\n  }\n  for (var key in this.attributes) {\n    // Get each attribute to create bindings\n    this.attributes[key].getBound(context, node, key, this.ns);\n    // TODO: Ideally, this would also check that the node's current attributes\n    // are equivalent, but there are some tricky edge cases\n  }\n  if (this.content) {\n    this._bindContent(context, node);\n    attachContent(node, node.firstChild, this.content, context);\n  }\n  emitHooks(this.hooks, context, node);\n  return node.nextSibling;\n};\nElement.prototype._bindContent = function(context, element) {\n  // For textareas with dynamic text content, bind to the value property\n  var child = this.bindContentToValue &&\n    this.content.length === 1 &&\n    this.content[0];\n  if (child instanceof DynamicText) {\n    child.unbound = true;\n    var template = new DynamicAttribute(child.expression);\n    context.addBinding(new AttributeBinding(template, context, element, 'value'));\n  }\n};\nElement.prototype.type = 'Element';\nElement.prototype.serialize = function() {\n  return serializeObject.instance(\n    this\n  , this.tagName\n  , this.attributes\n  , this.content\n  , this.hooks\n  , this.selfClosing\n  , this.notClosed\n  , this.ns\n  );\n};\n\nfunction DynamicElement(tagName, attributes, content, hooks, selfClosing, notClosed, ns) {\n  this.tagName = tagName;\n  this.attributes = attributes;\n  this.content = content;\n  this.hooks = hooks;\n  this.selfClosing = selfClosing;\n  this.notClosed = notClosed;\n  this.ns = ns;\n\n  this.startClose = getStartClose(selfClosing);\n  this.unescapedContent = false;\n}\nDynamicElement.prototype = new Element();\nDynamicElement.prototype.getTagName = function(context) {\n  return getUnescapedValue(this.tagName, context);\n};\nDynamicElement.prototype.getEndTag = function(tagName) {\n  return getEndTag(tagName, this.selfClosing, this.notClosed);\n};\nDynamicElement.prototype.type = 'DynamicElement';\n\nfunction getStartClose(selfClosing) {\n  return (selfClosing) ? ' />' : '>';\n}\n\nfunction getEndTag(tagName, selfClosing, notClosed) {\n  var lowerTagName = tagName && tagName.toLowerCase();\n  var isVoid = VOID_ELEMENTS[lowerTagName];\n  return (isVoid || selfClosing || notClosed) ? '' : '</' + tagName + '>';\n}\n\nfunction getAttributeValue(element, name) {\n  var propertyName = UPDATE_PROPERTIES[name];\n  return (propertyName) ? element[propertyName] : element.getAttribute(name);\n}\n\nfunction emitHooks(hooks, context, value) {\n  if (!hooks) return;\n  context.queue(function queuedHooks() {\n    for (var i = 0, len = hooks.length; i < len; i++) {\n      hooks[i].emit(context, value);\n    }\n  });\n}\n\nfunction Block(expression, content) {\n  this.expression = expression;\n  this.ending = '/' + expression;\n  this.content = content;\n}\nBlock.prototype = new Template();\nBlock.prototype.get = function(context, unescaped) {\n  var blockContext = context.child(this.expression);\n  return contentHtml(this.content, blockContext, unescaped);\n};\nBlock.prototype.appendTo = function(parent, context, binding) {\n  var blockContext = context.child(this.expression);\n  var start = document.createComment(this.expression);\n  var end = document.createComment(this.ending);\n  var condition = this.getCondition(context);\n  parent.appendChild(start);\n  appendContent(parent, this.content, blockContext);\n  parent.appendChild(end);\n  updateRange(context, binding, this, start, end, null, condition);\n};\nBlock.prototype.attachTo = function(parent, node, context) {\n  var blockContext = context.child(this.expression);\n  var start = document.createComment(this.expression);\n  var end = document.createComment(this.ending);\n  var condition = this.getCondition(context);\n  parent.insertBefore(start, node || null);\n  node = attachContent(parent, node, this.content, blockContext);\n  parent.insertBefore(end, node || null);\n  updateRange(context, null, this, start, end, null, condition);\n  return node;\n};\nBlock.prototype.type = 'Block';\nBlock.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression, this.content);\n};\nBlock.prototype.update = function(context, binding) {\n  if (!binding.start.parentNode) return;\n  var condition = this.getCondition(context);\n  if (condition === binding.condition) return;\n  binding.condition = condition;\n  // Get start and end in advance, since binding is mutated in getFragment\n  var start = binding.start;\n  var end = binding.end;\n  var fragment = this.getFragment(context, binding);\n  replaceRange(context, start, end, fragment, binding);\n};\nBlock.prototype.getCondition = function(context) {\n  // We do an identity check to see if the value has changed before updating.\n  // With objects, the object would still be the same, so this identity check\n  // would fail to update enough. Thus, return NaN, which never equals anything\n  // including itself, so that we always update on objects.\n  //\n  // We could also JSON stringify or use some other hashing approach. However,\n  // that could be really expensive on gets of things that never change, and\n  // is probably not a good tradeoff. Perhaps there should be a separate block\n  // type that is only used in the case of dynamic updates\n  var value = this.expression.get(context);\n  return (typeof value === 'object') ? NaN : value;\n};\n\nfunction ConditionalBlock(expressions, contents) {\n  this.expressions = expressions;\n  this.beginning = expressions.join('; ');\n  this.ending = '/' + this.beginning;\n  this.contents = contents;\n}\nConditionalBlock.prototype = new Block();\nConditionalBlock.prototype.get = function(context, unescaped) {\n  var condition = this.getCondition(context);\n  if (condition == null) return '';\n  var expression = this.expressions[condition];\n  var blockContext = context.child(expression);\n  return contentHtml(this.contents[condition], blockContext, unescaped);\n};\nConditionalBlock.prototype.appendTo = function(parent, context, binding) {\n  var start = document.createComment(this.beginning);\n  var end = document.createComment(this.ending);\n  parent.appendChild(start);\n  var condition = this.getCondition(context);\n  if (condition != null) {\n    var expression = this.expressions[condition];\n    var blockContext = context.child(expression);\n    appendContent(parent, this.contents[condition], blockContext);\n  }\n  parent.appendChild(end);\n  updateRange(context, binding, this, start, end, null, condition);\n};\nConditionalBlock.prototype.attachTo = function(parent, node, context) {\n  var start = document.createComment(this.beginning);\n  var end = document.createComment(this.ending);\n  parent.insertBefore(start, node || null);\n  var condition = this.getCondition(context);\n  if (condition != null) {\n    var expression = this.expressions[condition];\n    var blockContext = context.child(expression);\n    node = attachContent(parent, node, this.contents[condition], blockContext);\n  }\n  parent.insertBefore(end, node || null);\n  updateRange(context, null, this, start, end, null, condition);\n  return node;\n};\nConditionalBlock.prototype.type = 'ConditionalBlock';\nConditionalBlock.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expressions, this.contents);\n};\nConditionalBlock.prototype.update = function(context, binding) {\n  if (!binding.start.parentNode) return;\n  var condition = this.getCondition(context);\n  if (condition === binding.condition) return;\n  binding.condition = condition;\n  // Get start and end in advance, since binding is mutated in getFragment\n  var start = binding.start;\n  var end = binding.end;\n  var fragment = this.getFragment(context, binding);\n  replaceRange(context, start, end, fragment, binding);\n};\nConditionalBlock.prototype.getCondition = function(context) {\n  for (var i = 0, len = this.expressions.length; i < len; i++) {\n    if (this.expressions[i].truthy(context)) {\n      return i;\n    }\n  }\n};\n\nfunction EachBlock(expression, content, elseContent) {\n  this.expression = expression;\n  this.ending = '/' + expression;\n  this.content = content;\n  this.elseContent = elseContent;\n}\nEachBlock.prototype = new Block();\nEachBlock.prototype.get = function(context, unescaped) {\n  var items = this.expression.get(context);\n  if (items && items.length) {\n    var html = '';\n    for (var i = 0, len = items.length; i < len; i++) {\n      var itemContext = context.eachChild(this.expression, i);\n      html += contentHtml(this.content, itemContext, unescaped);\n    }\n    return html;\n  } else if (this.elseContent) {\n    return contentHtml(this.elseContent, context, unescaped);\n  }\n  return '';\n};\nEachBlock.prototype.appendTo = function(parent, context, binding) {\n  var items = this.expression.get(context);\n  var start = document.createComment(this.expression);\n  var end = document.createComment(this.ending);\n  parent.appendChild(start);\n  if (items && items.length) {\n    for (var i = 0, len = items.length; i < len; i++) {\n      var itemContext = context.eachChild(this.expression, i);\n      this.appendItemTo(parent, itemContext, start);\n    }\n  } else if (this.elseContent) {\n    appendContent(parent, this.elseContent, context);\n  }\n  parent.appendChild(end);\n  updateRange(context, binding, this, start, end);\n};\nEachBlock.prototype.appendItemTo = function(parent, context, itemFor, binding) {\n  var before = parent.lastChild;\n  var start, end;\n  appendContent(parent, this.content, context);\n  if (before === parent.lastChild) {\n    start = end = document.createComment('empty');\n    parent.appendChild(start);\n  } else {\n    start = (before && before.nextSibling) || parent.firstChild;\n    end = parent.lastChild;\n  }\n  updateRange(context, binding, this, start, end, itemFor);\n};\nEachBlock.prototype.attachTo = function(parent, node, context) {\n  var items = this.expression.get(context);\n  var start = document.createComment(this.expression);\n  var end = document.createComment(this.ending);\n  parent.insertBefore(start, node || null);\n  if (items && items.length) {\n    for (var i = 0, len = items.length; i < len; i++) {\n      var itemContext = context.eachChild(this.expression, i);\n      node = this.attachItemTo(parent, node, itemContext, start);\n    }\n  } else if (this.elseContent) {\n    node = attachContent(parent, node, this.elseContent, context);\n  }\n  parent.insertBefore(end, node || null);\n  updateRange(context, null, this, start, end);\n  return node;\n};\nEachBlock.prototype.attachItemTo = function(parent, node, context, itemFor) {\n  var start, end;\n  var oldPrevious = node && node.previousSibling;\n  var nextNode = attachContent(parent, node, this.content, context);\n  if (nextNode === node) {\n    start = end = document.createComment('empty');\n    parent.insertBefore(start, node || null);\n  } else {\n    start = (oldPrevious && oldPrevious.nextSibling) || parent.firstChild;\n    end = (nextNode && nextNode.previousSibling) || parent.lastChild;\n  }\n  updateRange(context, null, this, start, end, itemFor);\n  return nextNode;\n};\nEachBlock.prototype.update = function(context, binding) {\n  if (!binding.start.parentNode) return;\n  var start = binding.start;\n  var end = binding.end;\n  if (binding.itemFor) {\n    var fragment = document.createDocumentFragment();\n    this.appendItemTo(fragment, context, binding.itemFor, binding);\n  } else {\n    var fragment = this.getFragment(context, binding);\n  }\n  replaceRange(context, start, end, fragment, binding);\n};\nEachBlock.prototype.insert = function(context, binding, index, howMany) {\n  var parent = binding.start.parentNode;\n  if (!parent) return;\n  // In case we are inserting all of the items, update instead. This is needed\n  // when we were previously rendering elseContent so that it is replaced\n  if (index === 0 && this.expression.get(context).length === howMany) {\n    return this.update(context, binding);\n  }\n  var node = indexStartNode(binding, index);\n  var fragment = document.createDocumentFragment();\n  for (var i = index, len = index + howMany; i < len; i++) {\n    var itemContext = context.eachChild(this.expression, i);\n    this.appendItemTo(fragment, itemContext, binding.start);\n  }\n  parent.insertBefore(fragment, node || null);\n};\nEachBlock.prototype.remove = function(context, binding, index, howMany) {\n  var parent = binding.start.parentNode;\n  if (!parent) return;\n  // In case we are removing all of the items, update instead. This is needed\n  // when elseContent should be rendered\n  if (index === 0 && this.expression.get(context).length === 0) {\n    return this.update(context, binding);\n  }\n  var node = indexStartNode(binding, index);\n  var i = 0;\n  while (node) {\n    if (node === binding.end) return;\n    if (node.$bindItemStart && node.$bindItemStart.itemFor === binding.start) {\n      if (howMany === i++) return;\n    }\n    var nextNode = node.nextSibling;\n    parent.removeChild(node);\n    emitRemoved(context, node, binding);\n    node = nextNode;\n  }\n};\nEachBlock.prototype.move = function(context, binding, from, to, howMany) {\n  var parent = binding.start.parentNode;\n  if (!parent) return;\n  var node = indexStartNode(binding, from);\n  var fragment = document.createDocumentFragment();\n  var i = 0;\n  while (node) {\n    if (node === binding.end) break;\n    if (node.$bindItemStart && node.$bindItemStart.itemFor === binding.start) {\n      if (howMany === i++) break;\n    }\n    var nextNode = node.nextSibling;\n    fragment.appendChild(node);\n    node = nextNode;\n  }\n  node = indexStartNode(binding, to);\n  parent.insertBefore(fragment, node || null);\n};\nEachBlock.prototype.type = 'EachBlock';\nEachBlock.prototype.serialize = function() {\n  return serializeObject.instance(this, this.expression, this.content, this.elseContent);\n};\n\nfunction indexStartNode(binding, index) {\n  var node = binding.start;\n  var i = 0;\n  while (node = node.nextSibling) {\n    if (node === binding.end) return node;\n    if (node.$bindItemStart && node.$bindItemStart.itemFor === binding.start) {\n      if (index === i) return node;\n      i++;\n    }\n  }\n}\n\nfunction updateRange(context, binding, template, start, end, itemFor, condition) {\n  if (binding) {\n    binding.start = start;\n    binding.end = end;\n    binding.condition = condition;\n    setNodeBounds(binding, start, itemFor);\n  } else {\n    context.addBinding(new RangeBinding(template, context, start, end, itemFor, condition));\n  }\n}\nfunction setNodeBounds(binding, start, itemFor) {\n  if (itemFor) {\n    setNodeProperty(start, '$bindItemStart', binding);\n  } else {\n    setNodeProperty(start, '$bindStart', binding);\n  }\n}\n\nfunction appendContent(parent, content, context) {\n  for (var i = 0, len = content.length; i < len; i++) {\n    content[i].appendTo(parent, context);\n  }\n}\nfunction attachContent(parent, node, content, context) {\n  for (var i = 0, len = content.length; i < len; i++) {\n    while (node && node.hasAttribute && node.hasAttribute('data-no-attach')) {\n      node = node.nextSibling;\n    }\n    node = content[i].attachTo(parent, node, context);\n  }\n  return node;\n}\nfunction contentHtml(content, context, unescaped) {\n  var html = '';\n  for (var i = 0, len = content.length; i < len; i++) {\n    html += content[i].get(context, unescaped);\n  }\n  return html;\n}\nfunction replaceRange(context, start, end, fragment, binding, innerOnly) {\n  // Note: the calling function must make sure to check that there is a parent\n  var parent = start.parentNode;\n  // Copy item binding from old start to fragment being inserted\n  if (start.$bindItemStart && fragment.firstChild) {\n    setNodeProperty(fragment.firstChild, '$bindItemStart', start.$bindItemStart);\n    start.$bindItemStart.start = fragment.firstChild;\n  }\n  // Fast path for single node replacements\n  if (start === end) {\n    parent.replaceChild(fragment, start);\n    emitRemoved(context, start, binding);\n    return;\n  }\n  // Remove all nodes from start to end\n  var node = (innerOnly) ? start.nextSibling : start;\n  var nextNode;\n  while (node) {\n    nextNode = node.nextSibling;\n    emitRemoved(context, node, binding);\n    if (innerOnly && node === end) {\n      nextNode = end;\n      break;\n    }\n    parent.removeChild(node);\n    if (node === end) break;\n    node = nextNode;\n  }\n  // This also works if nextNode is null, by doing an append\n  parent.insertBefore(fragment, nextNode || null);\n}\nfunction emitRemoved(context, node, ignore) {\n  context.removeNode(node);\n  emitRemovedBinding(context, ignore, node.$bindNode);\n  emitRemovedBinding(context, ignore, node.$bindStart);\n  emitRemovedBinding(context, ignore, node.$bindItemStart);\n  var attributes = node.$bindAttributes;\n  if (attributes) {\n    for (var key in attributes) {\n      context.removeBinding(attributes[key]);\n    }\n  }\n  for (node = node.firstChild; node; node = node.nextSibling) {\n    emitRemoved(context, node, ignore);\n  }\n}\nfunction emitRemovedBinding(context, ignore, binding) {\n  if (binding && binding !== ignore) {\n    context.removeBinding(binding);\n  }\n}\n\nfunction attachError(parent, node) {\n  if (typeof console !== 'undefined') {\n    console.error('Attach failed for', node, 'within', parent);\n  }\n  return new Error('Attaching bindings failed, because HTML structure ' +\n    'does not match client rendering.'\n  );\n}\n\nfunction Binding() {\n  this.meta = null;\n}\nBinding.prototype.type = 'Binding';\nBinding.prototype.update = function() {\n  this.context.pause();\n  this.template.update(this.context, this);\n  this.context.unpause();\n};\nBinding.prototype.insert = function() {\n  this.update();\n};\nBinding.prototype.remove = function() {\n  this.update();\n};\nBinding.prototype.move = function() {\n  this.update();\n};\n\nfunction NodeBinding(template, context, node) {\n  this.template = template;\n  this.context = context;\n  this.node = node;\n  this.meta = null;\n  setNodeProperty(node, '$bindNode', this);\n}\nNodeBinding.prototype = new Binding();\nNodeBinding.prototype.type = 'NodeBinding';\n\nfunction AttributeBindingsMap() {}\nfunction AttributeBinding(template, context, element, name) {\n  this.template = template;\n  this.context = context;\n  this.element = element;\n  this.name = name;\n  this.meta = null;\n  var map = element.$bindAttributes ||\n    (element.$bindAttributes = new AttributeBindingsMap());\n  map[name] = this;\n}\nAttributeBinding.prototype = new Binding();\nAttributeBinding.prototype.type = 'AttributeBinding';\n\nfunction RangeBinding(template, context, start, end, itemFor, condition) {\n  this.template = template;\n  this.context = context;\n  this.start = start;\n  this.end = end;\n  this.itemFor = itemFor;\n  this.condition = condition;\n  this.meta = null;\n  setNodeBounds(this, start, itemFor);\n}\nRangeBinding.prototype = new Binding();\nRangeBinding.prototype.type = 'RangeBinding';\nRangeBinding.prototype.insert = function(index, howMany) {\n  this.context.pause();\n  if (this.template.insert) {\n    this.template.insert(this.context, this, index, howMany);\n  } else {\n    this.template.update(this.context, this);\n  }\n  this.context.unpause();\n};\nRangeBinding.prototype.remove = function(index, howMany) {\n  this.context.pause();\n  if (this.template.remove) {\n    this.template.remove(this.context, this, index, howMany);\n  } else {\n    this.template.update(this.context, this);\n  }\n  this.context.unpause();\n};\nRangeBinding.prototype.move = function(from, to, howMany) {\n  this.context.pause();\n  if (this.template.move) {\n    this.template.move(this.context, this, from, to, howMany);\n  } else {\n    this.template.update(this.context, this);\n  }\n  this.context.unpause();\n};\n\n\n//// Utility functions ////\n\nfunction noop() {}\n\nfunction mergeInto(from, to) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n}\n\nfunction escapeHtml(string) {\n  string = string + '';\n  return string.replace(/[&<]/g, function(match) {\n    return (match === '&') ? '&amp;' : '&lt;';\n  });\n}\n\nfunction escapeAttribute(string) {\n  string = string + '';\n  return string.replace(/[&\"]/g, function(match) {\n    return (match === '&') ? '&amp;' : '&quot;';\n  });\n}\n\n\n//// Shims & workarounds ////\n\n// General notes:\n//\n// In all cases, Node.insertBefore should have `|| null` after its second\n// argument. IE works correctly when the argument is ommitted or equal\n// to null, but it throws and error if it is equal to undefined.\n\nif (!Array.isArray) {\n  Array.isArray = function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  };\n}\n\n// Equivalent to textNode.splitText, which is buggy in IE <=9\nfunction splitData(node, index) {\n  var newNode = node.cloneNode(false);\n  newNode.deleteData(0, index);\n  node.deleteData(index, node.length - index);\n  node.parentNode.insertBefore(newNode, node.nextSibling || null);\n  return newNode;\n}\n\n// Defined so that it can be overriden in IE <=8\nfunction setNodeProperty(node, key, value) {\n  return node[key] = value;\n}\n\nfunction normalizeLineBreaks(string) {\n  return string;\n}\n\n(function() {\n  // Don't try to shim in Node.js environment\n  if (typeof document === 'undefined') return;\n\n  var div = document.createElement('div');\n  div.innerHTML = '\\r\\n<br>\\n'\n  var windowsLength = div.firstChild.data.length;\n  var unixLength = div.lastChild.data.length;\n  if (windowsLength === 1 && unixLength === 1) {\n    normalizeLineBreaks = function(string) {\n      return string.replace(/\\r\\n/g, '\\n');\n    };\n  } else if (windowsLength === 2 && unixLength === 2) {\n    normalizeLineBreaks = function(string) {\n      return string.replace(/(^|[^\\r])(\\n+)/g, function(match, value, newLines) {\n        for (var i = newLines.length; i--;) {\n          value += '\\r\\n';\n        }\n        return value;\n      });\n    };\n  }\n\n  // TODO: Shim createHtmlFragment for old IE\n\n  // TODO: Shim setAttribute('style'), which doesn't work in IE <=7\n  // http://webbugtrack.blogspot.com/2007/10/bug-245-setattribute-style-does-not.html\n\n  // TODO: Investigate whether input name attribute works in IE <=7. We could\n  // override Element::appendTo to use IE's alternative createElement syntax:\n  // document.createElement('<input name=\"xxx\">')\n  // http://webbugtrack.blogspot.com/2007/10/bug-235-createelement-is-broken-in-ie.html\n\n  // In IE, input.defaultValue doesn't work correctly, so use input.value,\n  // which mistakenly but conveniently sets both the value property and attribute.\n  //\n  // Surprisingly, in IE <=7, input.defaultChecked must be used instead of\n  // input.checked before the input is in the document.\n  // http://webbugtrack.blogspot.com/2007/11/bug-299-setattribute-checked-does-not.html\n  var input = document.createElement('input');\n  input.defaultValue = 'x';\n  if (input.value !== 'x') {\n    CREATE_PROPERTIES.value = 'value';\n  }\n\n  try {\n    // TextNodes are not expando in IE <=8\n    document.createTextNode('').$try = 0;\n  } catch (err) {\n    setNodeProperty = function(node, key, value) {\n      // If trying to set a property on a TextNode, create a proxy CommentNode\n      // and set the property on that node instead. Put the proxy after the\n      // TextNode if marking the end of a range, and before otherwise.\n      if (node.nodeType === 3) {\n        var proxyNode = node.previousSibling;\n        if (!proxyNode || proxyNode.$bindProxy !== node) {\n          proxyNode = document.createComment('proxy');\n          proxyNode.$bindProxy = node;\n          node.parentNode.insertBefore(proxyNode, node || null);\n        }\n        return proxyNode[key] = value;\n      }\n      // Set the property directly on other node types\n      return node[key] = value;\n    };\n  }\n})();\n","exports.instance = serializeInstance;\nexports.args = serializeArgs;\nexports.value = serializeValue;\n\nfunction serializeInstance(instance) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return 'new ' + instance.module + '.' + instance.type +\n    '(' + serializeArgs(args) + ')';\n}\n\nfunction serializeArgs(args) {\n  // Map each argument into its string representation\n  var items = [];\n  for (var i = args.length; i--;) {\n    var item = serializeValue(args[i]);\n    items.unshift(item);\n  }\n  // Remove trailing null values, assuming they are optional\n  for (var i = items.length; i--;) {\n    var item = items[i];\n    if (item !== 'void 0' && item !== 'null') break;\n    items.pop();\n  }\n  return items.join(', ');\n}\n\nfunction serializeValue(input) {\n  if (input && input.serialize) {\n    return input.serialize();\n\n  } else if (typeof input === 'undefined') {\n    return 'void 0';\n\n  } else if (input === null) {\n    return 'null';\n\n  } else if (typeof input === 'string') {\n    return formatString(input);\n\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return input + '';\n\n  } else if (Array.isArray(input)) {\n    var items = [];\n    for (var i = 0; i < input.length; i++) {\n      var value = serializeValue(input[i]);\n      items.push(value);\n    }\n    return '[' + items.join(', ') + ']';\n\n  } else if (typeof input === 'object') {\n    var items = [];\n    for (var key in input) {\n      var value = serializeValue(input[key]);\n      items.push(formatString(key) + ': ' + value);\n    }\n    return '{' + items.join(', ') + '}';\n  }\n}\nfunction formatString(value) {\n  var escaped = value.replace(/['\\r\\n\\\\]/g, function(match) {\n    return (match === '\\'') ? '\\\\\\'' :\n      (match === '\\r') ? '\\\\r' :\n      (match === '\\n') ? '\\\\n' :\n      (match === '\\\\') ? '\\\\\\\\' :\n      '';\n  });\n  return '\\'' + escaped + '\\'';\n}\n","var Doc = require('./doc');\nvar Query = require('./query');\nvar emitter = require('../emitter');\nvar ShareDBError = require('../error');\nvar types = require('../types');\nvar util = require('../util');\n\n/**\n * Handles communication with the sharejs server and provides queries and\n * documents.\n *\n * We create a connection with a socket object\n *   connection = new sharejs.Connection(sockset)\n * The socket may be any object handling the websocket protocol. See the\n * documentation of bindToSocket() for details. We then wait for the connection\n * to connect\n *   connection.on('connected', ...)\n * and are finally able to work with shared documents\n *   connection.get('food', 'steak') // Doc\n *\n * @param socket @see bindToSocket\n */\nmodule.exports = Connection;\nfunction Connection(socket) {\n  emitter.EventEmitter.call(this);\n\n  // Map of collection -> id -> doc object for created documents.\n  // (created documents MUST BE UNIQUE)\n  this.collections = {};\n\n  // Each query is created with an id that the server uses when it sends us\n  // info about the query (updates, etc)\n  this.nextQueryId = 1;\n\n  // Map from query ID -> query object.\n  this.queries = {};\n\n  // A unique message number for the given id\n  this.seq = 1;\n\n  // Equals agent.clientId on the server\n  this.id = null;\n\n  // This direct reference from connection to agent is not used internal to\n  // ShareDB, but it is handy for server-side only user code that may cache\n  // state on the agent and read it in middleware\n  this.agent = null;\n\n  this.debug = false;\n\n  this.bindToSocket(socket);\n}\nemitter.mixin(Connection);\n\n\n/**\n * Use socket to communicate with server\n *\n * Socket is an object that can handle the websocket protocol. This method\n * installs the onopen, onclose, onmessage and onerror handlers on the socket to\n * handle communication and sends messages by calling socket.send(message). The\n * sockets `readyState` property is used to determine the initaial state.\n *\n * @param socket Handles the websocket protocol\n * @param socket.readyState\n * @param socket.close\n * @param socket.send\n * @param socket.onopen\n * @param socket.onclose\n * @param socket.onmessage\n * @param socket.onerror\n */\nConnection.prototype.bindToSocket = function(socket) {\n  if (this.socket) {\n    this.socket.close();\n    this.socket.onmessage = null;\n    this.socket.onopen = null;\n    this.socket.onerror = null;\n    this.socket.onclose = null;\n  }\n\n  this.socket = socket;\n\n  // State of the connection. The correspoding events are emmited when this changes\n  //\n  // - 'connecting'   The connection is still being established, or we are still\n  //                    waiting on the server to send us the initialization message\n  // - 'connected'    The connection is open and we have connected to a server\n  //                    and recieved the initialization message\n  // - 'disconnected' Connection is closed, but it will reconnect automatically\n  // - 'closed'       The connection was closed by the client, and will not reconnect\n  // - 'stopped'      The connection was closed by the server, and will not reconnect\n  this.state = (socket.readyState === 0 || socket.readyState === 1) ? 'connecting' : 'disconnected';\n\n  // This is a helper variable the document uses to see whether we're\n  // currently in a 'live' state. It is true if and only if we're connected\n  this.canSend = false;\n\n  var connection = this;\n\n  socket.onmessage = function(event) {\n    try {\n      var data = (typeof event.data === 'string') ?\n        JSON.parse(event.data) : event.data;\n    } catch (err) {\n      console.warn('Failed to parse message', event);\n      return;\n    }\n\n    if (connection.debug) console.log('RECV', JSON.stringify(data));\n\n    var request = {data: data};\n    connection.emit('receive', request);\n    if (!request.data) return;\n\n    try {\n      connection.handleMessage(request.data);\n    } catch (err) {\n      process.nextTick(function() {\n        connection.emit('error', err);\n      });\n    }\n  };\n\n  socket.onopen = function() {\n    connection._setState('connecting');\n  };\n\n  socket.onerror = function(err) {\n    // This isn't the same as a regular error, because it will happen normally\n    // from time to time. Your connection should probably automatically\n    // reconnect anyway, but that should be triggered off onclose not onerror.\n    // (onclose happens when onerror gets called anyway).\n    connection.emit('connection error', err);\n  };\n\n  socket.onclose = function(reason) {\n    // node-browserchannel reason values:\n    //   'Closed' - The socket was manually closed by calling socket.close()\n    //   'Stopped by server' - The server sent the stop message to tell the client not to try connecting\n    //   'Request failed' - Server didn't respond to request (temporary, usually offline)\n    //   'Unknown session ID' - Server session for client is missing (temporary, will immediately reestablish)\n\n    if (reason === 'closed' || reason === 'Closed') {\n      connection._setState('closed', reason);\n\n    } else if (reason === 'stopped' || reason === 'Stopped by server') {\n      connection._setState('stopped', reason);\n\n    } else {\n      connection._setState('disconnected', reason);\n    }\n  };\n};\n\n/**\n * @param {object} message\n * @param {String} message.a action\n */\nConnection.prototype.handleMessage = function(message) {\n  var err = null;\n  if (message.error) {\n    // wrap in Error object so can be passed through event emitters\n    err = new Error(message.error.message);\n    err.code = message.error.code;\n    // Add the message data to the error object for more context\n    err.data = message;\n    delete message.error;\n  }\n  // Switch on the message action. Most messages are for documents and are\n  // handled in the doc class.\n  switch (message.a) {\n    case 'init':\n      // Client initialization packet\n      if (message.protocol !== 1) {\n        err = new ShareDBError(4019, 'Invalid protocol version');\n        return this.emit('error', err);\n      }\n      if (types.map[message.type] !== types.defaultType) {\n        err = new ShareDBError(4020, 'Invalid default type');\n        return this.emit('error', err);\n      }\n      if (typeof message.id !== 'string') {\n        err = new ShareDBError(4021, 'Invalid client id');\n        return this.emit('error', err);\n      }\n      this.id = message.id;\n\n      this._setState('connected');\n      return;\n\n    case 'qf':\n      var query = this.queries[message.id];\n      if (query) query._handleFetch(err, message.data, message.extra);\n      return;\n    case 'qs':\n      var query = this.queries[message.id];\n      if (query) query._handleSubscribe(err, message.data, message.extra);\n      return;\n    case 'qu':\n      // Queries are removed immediately on calls to destroy, so we ignore\n      // replies to query unsubscribes. Perhaps there should be a callback for\n      // destroy, but this is currently unimplemented\n      return;\n    case 'q':\n      // Query message. Pass this to the appropriate query object.\n      var query = this.queries[message.id];\n      if (!query) return;\n      if (err) return query._handleError(err);\n      if (message.diff) query._handleDiff(message.diff);\n      if (message.hasOwnProperty('extra')) query._handleExtra(message.extra);\n      return;\n\n    case 'bf':\n      return this._handleBulkMessage(message, '_handleFetch');\n    case 'bs':\n      return this._handleBulkMessage(message, '_handleSubscribe');\n    case 'bu':\n      return this._handleBulkMessage(message, '_handleUnsubscribe');\n\n    case 'f':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleFetch(err, message.data);\n      return;\n    case 's':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleSubscribe(err, message.data);\n      return;\n    case 'u':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleUnsubscribe(err);\n      return;\n    case 'op':\n      var doc = this.getExisting(message.c, message.d);\n      if (doc) doc._handleOp(err, message);\n      return;\n\n    default:\n      console.warn('Ignorning unrecognized message', message);\n  }\n};\n\nConnection.prototype._handleBulkMessage = function(message, method) {\n  if (message.data) {\n    for (var id in message.data) {\n      var doc = this.getExisting(message.c, id);\n      if (doc) doc[method](message.error, message.data[id]);\n    }\n  } else if (Array.isArray(message.b)) {\n    for (var i = 0; i < message.b.length; i++) {\n      var id = message.b[i];\n      var doc = this.getExisting(message.c, id);\n      if (doc) doc[method](message.error);\n    }\n  } else if (message.b) {\n    for (var id in message.b) {\n      var doc = this.getExisting(message.c, id);\n      if (doc) doc[method](message.error);\n    }\n  } else {\n    console.error('Invalid bulk message', message);\n  }\n};\n\nConnection.prototype._reset = function() {\n  this.seq = 1;\n  this.id = null;\n  this.agent = null;\n};\n\n// Set the connection's state. The connection is basically a state machine.\nConnection.prototype._setState = function(newState, reason) {\n  if (this.state === newState) return;\n\n  // I made a state diagram. The only invalid transitions are getting to\n  // 'connecting' from anywhere other than 'disconnected' and getting to\n  // 'connected' from anywhere other than 'connecting'.\n  if (\n    (newState === 'connecting' && this.state !== 'disconnected' && this.state !== 'stopped' && this.state !== 'closed') ||\n    (newState === 'connected' && this.state !== 'connecting')\n  ) {\n    var err = new ShareDBError(5007, 'Cannot transition directly from ' + this.state + ' to ' + newState);\n    return this.emit('error', err);\n  }\n\n  this.state = newState;\n  this.canSend = (newState === 'connected');\n\n  if (newState === 'disconnected' || newState === 'stopped' || newState === 'closed') this._reset();\n\n  // Group subscribes together to help server make more efficient calls\n  this.startBulk();\n  // Emit the event to all queries\n  for (var id in this.queries) {\n    var query = this.queries[id];\n    query._onConnectionStateChanged();\n  }\n  // Emit the event to all documents\n  for (var collection in this.collections) {\n    var docs = this.collections[collection];\n    for (var id in docs) {\n      docs[id]._onConnectionStateChanged();\n    }\n  }\n  this.endBulk();\n\n  this.emit(newState, reason);\n  this.emit('state', newState, reason);\n};\n\nConnection.prototype.startBulk = function() {\n  if (!this.bulk) this.bulk = {};\n};\n\nConnection.prototype.endBulk = function() {\n  if (this.bulk) {\n    for (var collection in this.bulk) {\n      var actions = this.bulk[collection];\n      this._sendBulk('f', collection, actions.f);\n      this._sendBulk('s', collection, actions.s);\n      this._sendBulk('u', collection, actions.u);\n    }\n  }\n  this.bulk = null;\n};\n\nConnection.prototype._sendBulk = function(action, collection, values) {\n  if (!values) return;\n  var ids = [];\n  var versions = {};\n  var versionsCount = 0;\n  var versionId;\n  for (var id in values) {\n    var value = values[id];\n    if (value == null) {\n      ids.push(id);\n    } else {\n      versions[id] = value;\n      versionId = id;\n      versionsCount++;\n    }\n  }\n  if (ids.length === 1) {\n    var id = ids[0];\n    this.send({a: action, c: collection, d: id});\n  } else if (ids.length) {\n    this.send({a: 'b' + action, c: collection, b: ids});\n  }\n  if (versionsCount === 1) {\n    var version = versions[versionId];\n    this.send({a: action, c: collection, d: versionId, v: version});\n  } else if (versionsCount) {\n    this.send({a: 'b' + action, c: collection, b: versions});\n  }\n};\n\nConnection.prototype._sendAction = function(action, doc, version) {\n  // Ensure the doc is registered so that it receives the reply message\n  this._addDoc(doc);\n  if (this.bulk) {\n    // Bulk subscribe\n    var actions = this.bulk[doc.collection] || (this.bulk[doc.collection] = {});\n    var versions = actions[action] || (actions[action] = {});\n    var isDuplicate = versions.hasOwnProperty(doc.id);\n    versions[doc.id] = version;\n    return isDuplicate;\n  } else {\n    // Send single doc subscribe message\n    var message = {a: action, c: doc.collection, d: doc.id, v: version};\n    this.send(message);\n  }\n};\n\nConnection.prototype.sendFetch = function(doc) {\n  return this._sendAction('f', doc, doc.version);\n};\n\nConnection.prototype.sendSubscribe = function(doc) {\n  return this._sendAction('s', doc, doc.version);\n};\n\nConnection.prototype.sendUnsubscribe = function(doc) {\n  return this._sendAction('u', doc);\n};\n\nConnection.prototype.sendOp = function(doc, op) {\n  // Ensure the doc is registered so that it receives the reply message\n  this._addDoc(doc);\n  var message = {\n    a: 'op',\n    c: doc.collection,\n    d: doc.id,\n    v: doc.version,\n    src: op.src,\n    seq: op.seq\n  };\n  if (op.op) message.op = op.op;\n  if (op.create) message.create = op.create;\n  if (op.del) message.del = op.del;\n  this.send(message);\n};\n\n\n/**\n * Sends a message down the socket\n */\nConnection.prototype.send = function(message) {\n  if (this.debug) console.log('SEND', JSON.stringify(message));\n\n  this.emit('send', message);\n  this.socket.send(JSON.stringify(message));\n};\n\n\n/**\n * Closes the socket and emits 'closed'\n */\nConnection.prototype.close = function() {\n  this.socket.close();\n};\n\nConnection.prototype.getExisting = function(collection, id) {\n  if (this.collections[collection]) return this.collections[collection][id];\n};\n\n\n/**\n * Get or create a document.\n *\n * @param collection\n * @param id\n * @return {Doc}\n */\nConnection.prototype.get = function(collection, id) {\n  var docs = this.collections[collection] ||\n    (this.collections[collection] = {});\n\n  var doc = docs[id];\n  if (!doc) {\n    doc = docs[id] = new Doc(this, collection, id);\n    this.emit('doc', doc);\n  }\n\n  return doc;\n};\n\n\n/**\n * Remove document from this.collections\n *\n * @private\n */\nConnection.prototype._destroyDoc = function(doc) {\n  var docs = this.collections[doc.collection];\n  if (!docs) return;\n\n  delete docs[doc.id];\n\n  // Delete the collection container if its empty. This could be a source of\n  // memory leaks if you slowly make a billion collections, which you probably\n  // won't do anyway, but whatever.\n  if (!util.hasKeys(docs)) {\n    delete this.collections[doc.collection];\n  }\n};\n\nConnection.prototype._addDoc = function(doc) {\n  var docs = this.collections[doc.collection];\n  if (!docs) {\n    docs = this.collections[doc.collection] = {};\n  }\n  if (docs[doc.id] !== doc) {\n    docs[doc.id] = doc;\n  }\n};\n\n// Helper for createFetchQuery and createSubscribeQuery, below.\nConnection.prototype._createQuery = function(action, collection, q, options, callback) {\n  var id = this.nextQueryId++;\n  var query = new Query(action, this, id, collection, q, options, callback);\n  this.queries[id] = query;\n  query.send();\n  return query;\n};\n\n// Internal function. Use query.destroy() to remove queries.\nConnection.prototype._destroyQuery = function(query) {\n  delete this.queries[query.id];\n};\n\n// The query options object can contain the following fields:\n//\n// db: Name of the db for the query. You can attach extraDbs to ShareDB and\n//   pick which one the query should hit using this parameter.\n\n// Create a fetch query. Fetch queries are only issued once, returning the\n// results directly into the callback.\n//\n// The callback should have the signature function(error, results, extra)\n// where results is a list of Doc objects.\nConnection.prototype.createFetchQuery = function(collection, q, options, callback) {\n  return this._createQuery('qf', collection, q, options, callback);\n};\n\n// Create a subscribe query. Subscribe queries return with the initial data\n// through the callback, then update themselves whenever the query result set\n// changes via their own event emitter.\n//\n// If present, the callback should have the signature function(error, results, extra)\n// where results is a list of Doc objects.\nConnection.prototype.createSubscribeQuery = function(collection, q, options, callback) {\n  return this._createQuery('qs', collection, q, options, callback);\n};\n\nConnection.prototype.hasPending = function() {\n  return !!(\n    this._firstDoc(hasPending) ||\n    this._firstQuery(hasPending)\n  );\n};\nfunction hasPending(object) {\n  return object.hasPending();\n}\n\nConnection.prototype.hasWritePending = function() {\n  return !!this._firstDoc(hasWritePending);\n};\nfunction hasWritePending(object) {\n  return object.hasWritePending();\n}\n\nConnection.prototype.whenNothingPending = function(callback) {\n  var doc = this._firstDoc(hasPending);\n  if (doc) {\n    // If a document is found with a pending operation, wait for it to emit\n    // that nothing is pending anymore, and then recheck all documents again.\n    // We have to recheck all documents, just in case another mutation has\n    // been made in the meantime as a result of an event callback\n    doc.once('nothing pending', this._nothingPendingRetry(callback));\n    return;\n  }\n  var query = this._firstQuery(hasPending);\n  if (query) {\n    query.once('ready', this._nothingPendingRetry(callback));\n    return;\n  }\n  // Call back when no pending operations\n  process.nextTick(callback);\n};\nConnection.prototype._nothingPendingRetry = function(callback) {\n  var connection = this;\n  return function() {\n    process.nextTick(function() {\n      connection.whenNothingPending(callback);\n    });\n  };\n};\n\nConnection.prototype._firstDoc = function(fn) {\n  for (var collection in this.collections) {\n    var docs = this.collections[collection];\n    for (var id in docs) {\n      var doc = docs[id];\n      if (fn(doc)) {\n        return doc;\n      }\n    }\n  }\n};\n\nConnection.prototype._firstQuery = function(fn) {\n  for (var id in this.queries) {\n    var query = this.queries[id];\n    if (fn(query)) {\n      return query;\n    }\n  }\n};\n","var emitter = require('../emitter');\nvar ShareDBError = require('../error');\nvar types = require('../types');\n\n/**\n * A Doc is a client's view on a sharejs document.\n *\n * It is is uniquely identified by its `id` and `collection`.  Documents\n * should not be created directly. Create them with connection.get()\n *\n *\n * Subscriptions\n * -------------\n *\n * We can subscribe a document to stay in sync with the server.\n *   doc.subscribe(function(error) {\n *     doc.subscribed // = true\n *   })\n * The server now sends us all changes concerning this document and these are\n * applied to our data. If the subscription was successful the initial\n * data and version sent by the server are loaded into the document.\n *\n * To stop listening to the changes we call `doc.unsubscribe()`.\n *\n * If we just want to load the data but not stay up-to-date, we call\n *   doc.fetch(function(error) {\n *     doc.data // sent by server\n *   })\n *\n *\n * Events\n * ------\n *\n * You can use doc.on(eventName, callback) to subscribe to the following events:\n * - `before op (op, source)` Fired before a partial operation is applied to the data.\n *   It may be used to read the old data just before applying an operation\n * - `op (op, source)` Fired after every partial operation with this operation as the\n *   first argument\n * - `create (source)` The document was created. That means its type was\n *   set and it has some initial data.\n * - `del (data, source)` Fired after the document is deleted, that is\n *   the data is null. It is passed the data before delteion as an\n *   arguments\n * - `load ()` Fired when a new snapshot is ingested from a fetch, subscribe, or query\n */\n\nmodule.exports = Doc;\nfunction Doc(connection, collection, id) {\n  emitter.EventEmitter.call(this);\n\n  this.connection = connection;\n\n  this.collection = collection;\n  this.id = id;\n\n  this.version = null;\n  this.type = null;\n  this.data = undefined;\n\n  // Array of callbacks or nulls as placeholders\n  this.inflightFetch = [];\n  this.inflightSubscribe = [];\n  this.inflightUnsubscribe = [];\n  this.pendingFetch = [];\n\n  // Whether we think we are subscribed on the server. Synchronously set to\n  // false on calls to unsubscribe and disconnect. Should never be true when\n  // this.wantSubscribe is false\n  this.subscribed = false;\n  // Whether to re-establish the subscription on reconnect\n  this.wantSubscribe = false;\n\n  // The op that is currently roundtripping to the server, or null.\n  //\n  // When the connection reconnects, the inflight op is resubmitted.\n  //\n  // This has the same format as an entry in pendingOps\n  this.inflightOp = null;\n\n  // All ops that are waiting for the server to acknowledge this.inflightOp\n  // This used to just be a single operation, but creates & deletes can't be\n  // composed with regular operations.\n  //\n  // This is a list of {[create:{...}], [del:true], [op:...], callbacks:[...]}\n  this.pendingOps = [];\n\n  // The OT type of this document. An uncreated document has type `null`\n  this.type = null;\n\n  // The applyStack enables us to track any ops submitted while we are\n  // applying an op incrementally. This value is an array when we are\n  // performing an incremental apply and null otherwise. When it is an array,\n  // all submitted ops should be pushed onto it. The `_otApply` method will\n  // reset it back to null when all incremental apply loops are complete.\n  this.applyStack = null;\n\n  // Disable the default behavior of composing submitted ops. This is read at\n  // the time of op submit, so it may be toggled on before submitting a\n  // specifc op and toggled off afterward\n  this.preventCompose = false;\n}\nemitter.mixin(Doc);\n\nDoc.prototype.destroy = function(callback) {\n  var doc = this;\n  doc.whenNothingPending(function() {\n    doc.connection._destroyDoc(doc);\n    if (doc.wantSubscribe) {\n      return doc.unsubscribe(callback);\n    }\n    if (callback) callback();\n  });\n};\n\n\n// ****** Manipulating the document data, version and type.\n\n// Set the document's type, and associated properties. Most of the logic in\n// this function exists to update the document based on any added & removed API\n// methods.\n//\n// @param newType OT type provided by the ottypes library or its name or uri\nDoc.prototype._setType = function(newType) {\n  if (typeof newType === 'string') {\n    newType = types.map[newType];\n  }\n\n  if (newType) {\n    this.type = newType;\n\n  } else if (newType === null) {\n    this.type = newType;\n    // If we removed the type from the object, also remove its data\n    this.data = undefined;\n\n  } else {\n    var err = new ShareDBError(4008, 'Missing type ' + newType);\n    return this.emit('error', err);\n  }\n};\n\n// Ingest snapshot data. This data must include a version, snapshot and type.\n// This is used both to ingest data that was exported with a webpage and data\n// that was received from the server during a fetch.\n//\n// @param snapshot.v    version\n// @param snapshot.data\n// @param snapshot.type\n// @param callback\nDoc.prototype.ingestSnapshot = function(snapshot, callback) {\n  if (!snapshot) return callback && callback();\n\n  if (typeof snapshot.v !== 'number') {\n    var err = new ShareDBError(5008, 'Missing version in ingested snapshot. ' + this.collection + '.' + this.id);\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n\n  // If the doc is already created or there are ops pending, we cannot use the\n  // ingested snapshot and need ops in order to update the document\n  if (this.type || this.hasWritePending()) {\n    // The version should only be null on a created document when it was\n    // created locally without fetching\n    if (this.version == null) {\n      if (this.hasWritePending()) {\n        // If we have pending ops and we get a snapshot for a locally created\n        // document, we have to wait for the pending ops to complete, because\n        // we don't know what version to fetch ops from. It is possible that\n        // the snapshot came from our local op, but it is also possible that\n        // the doc was created remotely (which would conflict and be an error)\n        return callback && this.once('no write pending', callback);\n      }\n      // Otherwise, we've encounted an error state\n      var err = new ShareDBError(5009, 'Cannot ingest snapshot in doc with null version. ' + this.collection + '.' + this.id);\n      if (callback) return callback(err);\n      return this.emit('error', err);\n    }\n    // If we got a snapshot for a version further along than the document is\n    // currently, issue a fetch to get the latest ops and catch us up\n    if (snapshot.v > this.version) return this.fetch(callback);\n    return callback && callback();\n  }\n\n  // Ignore the snapshot if we are already at a newer version. Under no\n  // circumstance should we ever set the current version backward\n  if (this.version > snapshot.v) return callback && callback();\n\n  this.version = snapshot.v;\n  var type = (snapshot.type === undefined) ? types.defaultType : snapshot.type;\n  this._setType(type);\n  this.data = (this.type && this.type.deserialize) ?\n    this.type.deserialize(snapshot.data) :\n    snapshot.data;\n  this.emit('load');\n  callback && callback();\n};\n\nDoc.prototype.whenNothingPending = function(callback) {\n  if (this.hasPending()) {\n    this.once('nothing pending', callback);\n    return;\n  }\n  callback();\n};\n\nDoc.prototype.hasPending = function() {\n  return !!(\n    this.inflightOp ||\n    this.pendingOps.length ||\n    this.inflightFetch.length ||\n    this.inflightSubscribe.length ||\n    this.inflightUnsubscribe.length ||\n    this.pendingFetch.length\n  );\n};\n\nDoc.prototype.hasWritePending = function() {\n  return !!(this.inflightOp || this.pendingOps.length);\n};\n\nDoc.prototype._emitNothingPending = function() {\n  if (this.hasWritePending()) return;\n  this.emit('no write pending');\n  if (this.hasPending()) return;\n  this.emit('nothing pending');\n};\n\n// **** Helpers for network messages\n\nDoc.prototype._emitResponseError = function(err, callback) {\n  if (callback) {\n    callback(err);\n    this._emitNothingPending();\n    return;\n  }\n  this._emitNothingPending();\n  this.emit('error', err);\n};\n\nDoc.prototype._handleFetch = function(err, snapshot) {\n  var callback = this.inflightFetch.shift();\n  if (err) return this._emitResponseError(err, callback);\n  this.ingestSnapshot(snapshot, callback);\n  this._emitNothingPending();\n};\n\nDoc.prototype._handleSubscribe = function(err, snapshot) {\n  var callback = this.inflightSubscribe.shift();\n  if (err) return this._emitResponseError(err, callback);\n  // Indicate we are subscribed only if the client still wants to be. In the\n  // time since calling subscribe and receiving a response from the server,\n  // unsubscribe could have been called and we might already be unsubscribed\n  // but not have received the response. Also, because requests from the\n  // client are not serialized and may take different async time to process,\n  // it is possible that we could hear responses back in a different order\n  // from the order originally sent\n  if (this.wantSubscribe) this.subscribed = true;\n  this.ingestSnapshot(snapshot, callback);\n  this._emitNothingPending();\n};\n\nDoc.prototype._handleUnsubscribe = function(err) {\n  var callback = this.inflightUnsubscribe.shift();\n  if (err) return this._emitResponseError(err, callback);\n  if (callback) callback();\n  this._emitNothingPending();\n};\n\nDoc.prototype._handleOp = function(err, message) {\n  if (err) {\n    if (this.inflightOp) {\n      // The server has rejected submission of the current operation. If we get\n      // an error code 4002 \"Op submit rejected\", this was done intentionally\n      // and we should roll back but not return an error to the user.\n      if (err.code === 4002) err = null;\n      return this._rollback(err);\n    }\n    return this.emit('error', err);\n  }\n\n  if (this.inflightOp &&\n      message.src === this.inflightOp.src &&\n      message.seq === this.inflightOp.seq) {\n    // The op has already been applied locally. Just update the version\n    // and pending state appropriately\n    this._opAcknowledged(message);\n    return;\n  }\n\n  if (this.version == null || message.v > this.version) {\n    // This will happen in normal operation if we become subscribed to a\n    // new document via a query. It can also happen if we get an op for\n    // a future version beyond the version we are expecting next. This\n    // could happen if the server doesn't publish an op for whatever reason\n    // or because of a race condition. In any case, we can send a fetch\n    // command to catch back up.\n    //\n    // Fetch only sends a new fetch command if no fetches are inflight, which\n    // will act as a natural debouncing so we don't send multiple fetch\n    // requests for many ops received at once.\n    this.fetch();\n    return;\n  }\n\n  if (message.v < this.version) {\n    // We can safely ignore the old (duplicate) operation.\n    return;\n  }\n\n  if (this.inflightOp) {\n    var transformErr = transformX(this.inflightOp, message);\n    if (transformErr) return this._hardRollback(transformErr);\n  }\n\n  for (var i = 0; i < this.pendingOps.length; i++) {\n    var transformErr = transformX(this.pendingOps[i], message);\n    if (transformErr) return this._hardRollback(transformErr);\n  }\n\n  this.version++;\n  this._otApply(message, false);\n  return;\n};\n\n// Called whenever (you guessed it!) the connection state changes. This will\n// happen when we get disconnected & reconnect.\nDoc.prototype._onConnectionStateChanged = function() {\n  if (this.connection.canSend) {\n    this.flush();\n    this._resubscribe();\n  } else {\n    if (this.inflightOp) {\n      this.pendingOps.unshift(this.inflightOp);\n      this.inflightOp = null;\n    }\n    this.subscribed = false;\n    if (this.inflightFetch.length || this.inflightSubscribe.length) {\n      this.pendingFetch = this.pendingFetch.concat(this.inflightFetch, this.inflightSubscribe);\n      this.inflightFetch.length = 0;\n      this.inflightSubscribe.length = 0;\n    }\n    if (this.inflightUnsubscribe.length) {\n      var callbacks = this.inflightUnsubscribe;\n      this.inflightUnsubscribe = [];\n      callEach(callbacks);\n    }\n  }\n};\n\nDoc.prototype._resubscribe = function() {\n  var callbacks = this.pendingFetch;\n  this.pendingFetch = [];\n\n  if (this.wantSubscribe) {\n    if (callbacks.length) {\n      this.subscribe(function(err) {\n        callEach(callbacks, err);\n      });\n      return;\n    }\n    this.subscribe();\n    return;\n  }\n\n  if (callbacks.length) {\n    this.fetch(function(err) {\n      callEach(callbacks, err);\n    });\n  }\n};\n\n// Request the current document snapshot or ops that bring us up to date\nDoc.prototype.fetch = function(callback) {\n  if (this.connection.canSend) {\n    var isDuplicate = this.connection.sendFetch(this);\n    pushActionCallback(this.inflightFetch, isDuplicate, callback);\n    return;\n  }\n  this.pendingFetch.push(callback);\n};\n\n// Fetch the initial document and keep receiving updates\nDoc.prototype.subscribe = function(callback) {\n  this.wantSubscribe = true;\n  if (this.connection.canSend) {\n    var isDuplicate = this.connection.sendSubscribe(this);\n    pushActionCallback(this.inflightSubscribe, isDuplicate, callback);\n    return;\n  }\n  this.pendingFetch.push(callback);\n};\n\n// Unsubscribe. The data will stay around in local memory, but we'll stop\n// receiving updates\nDoc.prototype.unsubscribe = function(callback) {\n  this.wantSubscribe = false;\n  // The subscribed state should be conservative in indicating when we are\n  // subscribed on the server. We'll actually be unsubscribed some time\n  // between sending the message and hearing back, but we cannot know exactly\n  // when. Thus, immediately mark us as not subscribed\n  this.subscribed = false;\n  if (this.connection.canSend) {\n    var isDuplicate = this.connection.sendUnsubscribe(this);\n    pushActionCallback(this.inflightUnsubscribe, isDuplicate, callback);\n    return;\n  }\n  if (callback) process.nextTick(callback);\n};\n\nfunction pushActionCallback(inflight, isDuplicate, callback) {\n  if (isDuplicate) {\n    var lastCallback = inflight.pop();\n    inflight.push(function(err) {\n      lastCallback && lastCallback(err);\n      callback && callback(err);\n    });\n  } else {\n    inflight.push(callback);\n  }\n}\n\n\n// Operations //\n\n// Send the next pending op to the server, if we can.\n//\n// Only one operation can be in-flight at a time. If an operation is already on\n// its way, or we're not currently connected, this method does nothing.\nDoc.prototype.flush = function() {\n  // Ignore if we can't send or we are already sending an op\n  if (!this.connection.canSend || this.inflightOp) return;\n\n  // Send first pending op unless paused\n  if (!this.paused && this.pendingOps.length) {\n    this._sendOp();\n  }\n};\n\n// Helper function to set op to contain a no-op.\nfunction setNoOp(op) {\n  delete op.op;\n  delete op.create;\n  delete op.del;\n}\n\n// Transform server op data by a client op, and vice versa. Ops are edited in place.\nfunction transformX(client, server) {\n  // Order of statements in this function matters. Be especially careful if\n  // refactoring this function\n\n  // A client delete op should dominate if both the server and the client\n  // delete the document. Thus, any ops following the client delete (such as a\n  // subsequent create) will be maintained, since the server op is transformed\n  // to a no-op\n  if (client.del) return setNoOp(server);\n\n  if (server.del) {\n    return new ShareDBError(4017, 'Document was deleted');\n  }\n  if (server.create) {\n    return new ShareDBError(4018, 'Document alredy created');\n  }\n\n  // Ignore no-op coming from server\n  if (!server.op) return;\n\n  // I believe that this should not occur, but check just in case\n  if (client.create) {\n    return new ShareDBError(4018, 'Document already created');\n  }\n\n  // They both edited the document. This is the normal case for this function -\n  // as in, most of the time we'll end up down here.\n  //\n  // You should be wondering why I'm using client.type instead of this.type.\n  // The reason is, if we get ops at an old version of the document, this.type\n  // might be undefined or a totally different type. By pinning the type to the\n  // op data, we make sure the right type has its transform function called.\n  if (client.type.transformX) {\n    var result = client.type.transformX(client.op, server.op);\n    client.op = result[0];\n    server.op = result[1];\n  } else {\n    var clientOp = client.type.transform(client.op, server.op, 'left');\n    var serverOp = client.type.transform(server.op, client.op, 'right');\n    client.op = clientOp;\n    server.op = serverOp;\n  }\n};\n\n/**\n * Applies the operation to the snapshot\n *\n * If the operation is create or delete it emits `create` or `del`. Then the\n * operation is applied to the snapshot and `op` and `after op` are emitted.\n * If the type supports incremental updates and `this.incremental` is true we\n * fire `op` after every small operation.\n *\n * This is the only function to fire the above mentioned events.\n *\n * @private\n */\nDoc.prototype._otApply = function(op, source) {\n  if (op.op) {\n    if (!this.type) {\n      var err = new ShareDBError(4015, 'Cannot apply op to uncreated document. ' + this.collection + '.' + this.id);\n      return this.emit('error', err);\n    }\n\n    // Iteratively apply multi-component remote operations and rollback ops\n    // (source === false) for the default JSON0 OT type. It could use\n    // type.shatter(), but since this code is so specific to use cases for the\n    // JSON0 type and ShareDB explicitly bundles the default type, we might as\n    // well write it this way and save needing to iterate through the op\n    // components twice.\n    //\n    // Ideally, we would not need this extra complexity. However, it is\n    // helpful for implementing bindings that update DOM nodes and other\n    // stateful objects by translating op events directly into corresponding\n    // mutations. Such bindings are most easily written as responding to\n    // individual op components one at a time in order, and it is important\n    // that the snapshot only include updates from the particular op component\n    // at the time of emission. Eliminating this would require rethinking how\n    // such external bindings are implemented.\n    if (!source && this.type === types.defaultType && op.op.length > 1) {\n      if (!this.applyStack) this.applyStack = [];\n      var stackLength = this.applyStack.length;\n      for (var i = 0; i < op.op.length; i++) {\n        var component = op.op[i];\n        var componentOp = {op: [component]};\n        // Transform componentOp against any ops that have been submitted\n        // sychronously inside of an op event handler since we began apply of\n        // our operation\n        for (var j = stackLength; j < this.applyStack.length; j++) {\n          var transformErr = transformX(this.applyStack[j], componentOp);\n          if (transformErr) return this._hardRollback(transformErr);\n        }\n        // Apply the individual op component\n        this.emit('before op', componentOp.op, source);\n        this.data = this.type.apply(this.data, componentOp.op);\n        this.emit('op', componentOp.op, source);\n      }\n      // Pop whatever was submitted since we started applying this op\n      this._popApplyStack(stackLength);\n      return;\n    }\n\n    // The 'before op' event enables clients to pull any necessary data out of\n    // the snapshot before it gets changed\n    this.emit('before op', op.op, source);\n    // Apply the operation to the local data, mutating it in place\n    this.data = this.type.apply(this.data, op.op);\n    // Emit an 'op' event once the local data includes the changes from the\n    // op. For locally submitted ops, this will be synchronously with\n    // submission and before the server or other clients have received the op.\n    // For ops from other clients, this will be after the op has been\n    // committed to the database and published\n    this.emit('op', op.op, source);\n    return;\n  }\n\n  if (op.create) {\n    this._setType(op.create.type);\n    this.data = (this.type.deserialize) ?\n      (this.type.createDeserialized) ?\n        this.type.createDeserialized(op.create.data) :\n        this.type.deserialize(this.type.create(op.create.data)) :\n      this.type.create(op.create.data);\n    this.emit('create', source);\n    return;\n  }\n\n  if (op.del) {\n    var oldData = this.data;\n    this._setType(null);\n    this.emit('del', oldData, source);\n    return;\n  }\n};\n\n\n// ***** Sending operations\n\n// Actually send op to the server.\nDoc.prototype._sendOp = function() {\n  // Wait until we have a src id from the server\n  var src = this.connection.id;\n  if (!src) return;\n\n  // When there is no inflightOp, send the first item in pendingOps. If\n  // there is inflightOp, try sending it again\n  if (!this.inflightOp) {\n    // Send first pending op\n    this.inflightOp = this.pendingOps.shift();\n  }\n  var op = this.inflightOp;\n  if (!op) {\n    var err = new ShareDBError(5010, 'No op to send on call to _sendOp');\n    return this.emit('error', err);\n  }\n\n  // Track data for retrying ops\n  op.sentAt = Date.now();\n  op.retries = (op.retries == null) ? 0 : op.retries + 1;\n\n  // The src + seq number is a unique ID representing this operation. This tuple\n  // is used on the server to detect when ops have been sent multiple times and\n  // on the client to match acknowledgement of an op back to the inflightOp.\n  // Note that the src could be different from this.connection.id after a\n  // reconnect, since an op may still be pending after the reconnection and\n  // this.connection.id will change. In case an op is sent multiple times, we\n  // also need to be careful not to override the original seq value.\n  if (op.seq == null) op.seq = this.connection.seq++;\n\n  this.connection.sendOp(this, op);\n\n  // src isn't needed on the first try, since the server session will have the\n  // same id, but it must be set on the inflightOp in case it is sent again\n  // after a reconnect and the connection's id has changed by then\n  if (op.src == null) op.src = src;\n};\n\n\n// Queues the operation for submission to the server and applies it locally.\n//\n// Internal method called to do the actual work for submit(), create() and del().\n// @private\n//\n// @param op\n// @param [op.op]\n// @param [op.del]\n// @param [op.create]\n// @param [callback] called when operation is submitted\nDoc.prototype._submit = function(op, source, callback) {\n  // Locally submitted ops must always have a truthy source\n  if (!source) source = true;\n\n  // The op contains either op, create, delete, or none of the above (a no-op).\n  if (op.op) {\n    if (!this.type) {\n      var err = new ShareDBError(4015, 'Cannot submit op. Document has not been created. ' + this.collection + '.' + this.id);\n      if (callback) return callback(err);\n      return this.emit('error', err);\n    }\n    // Try to normalize the op. This removes trailing skip:0's and things like that.\n    if (this.type.normalize) op.op = this.type.normalize(op.op);\n  }\n\n  this._pushOp(op, callback);\n  this._otApply(op, source);\n\n  // The call to flush is delayed so if submit() is called multiple times\n  // synchronously, all the ops are combined before being sent to the server.\n  var doc = this;\n  process.nextTick(function() {\n    doc.flush();\n  });\n};\n\nDoc.prototype._pushOp = function(op, callback) {\n  if (this.applyStack) {\n    // If we are in the process of incrementally applying an operation, don't\n    // compose the op and push it onto the applyStack so it can be transformed\n    // against other components from the op or ops being applied\n    this.applyStack.push(op);\n  } else {\n    // If the type supports composes, try to compose the operation onto the\n    // end of the last pending operation.\n    var composed = this._tryCompose(op);\n    if (composed) {\n      composed.callbacks.push(callback);\n      return;\n    }\n  }\n  // Push on to the pendingOps queue of ops to submit if we didn't compose\n  op.type = this.type;\n  op.callbacks = [callback];\n  this.pendingOps.push(op);\n};\n\nDoc.prototype._popApplyStack = function(to) {\n  if (to > 0) {\n    this.applyStack.length = to;\n    return;\n  }\n  // Once we have completed the outermost apply loop, reset to null and no\n  // longer add ops to the applyStack as they are submitted\n  var op = this.applyStack[0];\n  this.applyStack = null;\n  if (!op) return;\n  // Compose the ops added since the beginning of the apply stack, since we\n  // had to skip compose when they were originally pushed\n  var i = this.pendingOps.indexOf(op);\n  if (i === -1) return;\n  var ops = this.pendingOps.splice(i);\n  for (var i = 0; i < ops.length; i++) {\n    var op = ops[i];\n    var composed = this._tryCompose(op);\n    if (composed) {\n      composed.callbacks = composed.callbacks.concat(op.callbacks);\n    } else {\n      this.pendingOps.push(op);\n    }\n  }\n};\n\n// Try to compose a submitted op into the last pending op. Returns the\n// composed op if it succeeds, undefined otherwise\nDoc.prototype._tryCompose = function(op) {\n  if (this.preventCompose) return;\n\n  // We can only compose into the last pending op. Inflight ops have already\n  // been sent to the server, so we can't modify them\n  var last = this.pendingOps[this.pendingOps.length - 1];\n  if (!last) return;\n\n  // Compose an op into a create by applying it. This effectively makes the op\n  // invisible, as if the document were created including the op originally\n  if (last.create && op.op) {\n    last.create.data = this.type.apply(last.create.data, op.op);\n    return last;\n  }\n\n  // Compose two ops into a single op if supported by the type. Types that\n  // support compose must be able to compose any two ops together\n  if (last.op && op.op && this.type.compose) {\n    last.op = this.type.compose(last.op, op.op);\n    return last;\n  }\n};\n\n// *** Client OT entrypoints.\n\n// Submit an operation to the document.\n//\n// @param operation handled by the OT type\n// @param options  {source: ...}\n// @param [callback] called after operation submitted\n//\n// @fires before op, op, after op\nDoc.prototype.submitOp = function(component, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  var op = {op: component};\n  var source = options && options.source;\n  this._submit(op, source, callback);\n};\n\n// Create the document, which in ShareJS semantics means to set its type. Every\n// object implicitly exists in the database but has no data and no type. Create\n// sets the type of the object and can optionally set some initial data on the\n// object, depending on the type.\n//\n// @param data  initial\n// @param type  OT type\n// @param options  {source: ...}\n// @param callback  called when operation submitted\nDoc.prototype.create = function(data, type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = null;\n    type = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  if (!type) {\n    type = types.defaultType.uri;\n  }\n  if (this.type) {\n    var err = new ShareDBError(4016, 'Document already exists');\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n  var op = {create: {type: type, data: data}};\n  var source = options && options.source;\n  this._submit(op, source, callback);\n};\n\n// Delete the document. This creates and submits a delete operation to the\n// server. Deleting resets the object's type to null and deletes its data. The\n// document still exists, and still has the version it used to have before you\n// deleted it (well, old version +1).\n//\n// @param options  {source: ...}\n// @param callback  called when operation submitted\nDoc.prototype.del = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  if (!this.type) {\n    var err = new ShareDBError(4015, 'Document does not exist');\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n  var op = {del: true};\n  var source = options && options.source;\n  this._submit(op, source, callback);\n};\n\n\n// Stops the document from sending any operations to the server.\nDoc.prototype.pause = function() {\n  this.paused = true;\n};\n\n// Continue sending operations to the server\nDoc.prototype.resume = function() {\n  this.paused = false;\n  this.flush();\n};\n\n\n// *** Receiving operations\n\n// This is called when the server acknowledges an operation from the client.\nDoc.prototype._opAcknowledged = function(message) {\n  if (this.inflightOp.create) {\n    this.version = message.v;\n\n  } else if (message.v !== this.version) {\n    // We should already be at the same version, because the server should\n    // have sent all the ops that have happened before acknowledging our op\n    console.warn('Invalid version from server. Expected: ' + this.version + ' Received: ' + message.v, message);\n\n    // Fetching should get us back to a working document state\n    return this.fetch();\n  }\n\n  // The op was committed successfully. Increment the version number\n  this.version++;\n\n  this._clearInflightOp();\n};\n\nDoc.prototype._rollback = function(err) {\n  // The server has rejected submission of the current operation. Invert by\n  // just the inflight op if possible. If not possible to invert, cancel all\n  // pending ops and fetch the latest from the server to get us back into a\n  // working state, then call back\n  var op = this.inflightOp;\n\n  if (op.op && op.type.invert) {\n    op.op = op.type.invert(op.op);\n\n    // Transform the undo operation by any pending ops.\n    for (var i = 0; i < this.pendingOps.length; i++) {\n      var transformErr = transformX(this.pendingOps[i], op);\n      if (transformErr) return this._hardRollback(transformErr);\n    }\n\n    // ... and apply it locally, reverting the changes.\n    //\n    // This operation is applied to look like it comes from a remote source.\n    // I'm still not 100% sure about this functionality, because its really a\n    // local op. Basically, the problem is that if the client's op is rejected\n    // by the server, the editor window should update to reflect the undo.\n    this._otApply(op, false);\n\n    this._clearInflightOp(err);\n    return;\n  }\n\n  this._hardRollback(err);\n};\n\nDoc.prototype._hardRollback = function(err) {\n  // Cancel all pending ops and reset if we can't invert\n  var op = this.inflightOp;\n  var pending = this.pendingOps;\n  this._setType(null);\n  this.version = null;\n  this.inflightOp = null;\n  this.pendingOps = [];\n\n  // Fetch the latest from the server to get us back into a working state\n  var doc = this;\n  this.fetch(function() {\n    var called = op && callEach(op.callbacks, err);\n    for (var i = 0; i < pending.length; i++) {\n      callEach(pending[i].callbacks, err);\n    }\n    if (err && !called) return doc.emit('error', err);\n  });\n};\n\nDoc.prototype._clearInflightOp = function(err) {\n  var called = callEach(this.inflightOp.callbacks, err);\n\n  this.inflightOp = null;\n  this.flush();\n  this._emitNothingPending();\n\n  if (err && !called) return this.emit('error', err);\n};\n\nfunction callEach(callbacks, err) {\n  var called = false;\n  for (var i = 0; i < callbacks.length; i++) {\n    var callback = callbacks[i];\n    if (callback) {\n      callback(err);\n      called = true;\n    }\n  }\n  return called;\n}\n","exports.Connection = require('./connection');\nexports.Doc = require('./doc');\nexports.Error = require('../error');\nexports.Query = require('./query');\nexports.types = require('../types');\n","var emitter = require('../emitter');\n\n// Queries are live requests to the database for particular sets of fields.\n//\n// The server actively tells the client when there's new data that matches\n// a set of conditions.\nmodule.exports = Query;\nfunction Query(action, connection, id, collection, query, options, callback) {\n  emitter.EventEmitter.call(this);\n\n  // 'qf' or 'qs'\n  this.action = action;\n\n  this.connection = connection;\n  this.id = id;\n  this.collection = collection;\n\n  // The query itself. For mongo, this should look something like {\"data.x\":5}\n  this.query = query;\n\n  // A list of resulting documents. These are actual documents, complete with\n  // data and all the rest. It is possible to pass in an initial results set,\n  // so that a query can be serialized and then re-established\n  this.results = null;\n  if (options && options.results) {\n    this.results = options.results;\n    delete options.results;\n  }\n  this.extra = undefined;\n\n  // Options to pass through with the query\n  this.options = options;\n\n  this.callback = callback;\n  this.ready = false;\n  this.sent = false;\n}\nemitter.mixin(Query);\n\nQuery.prototype.hasPending = function() {\n  return !this.ready;\n};\n\n// Helper for subscribe & fetch, since they share the same message format.\n//\n// This function actually issues the query.\nQuery.prototype.send = function() {\n  if (!this.connection.canSend) return;\n\n  var message = {\n    a: this.action,\n    id: this.id,\n    c: this.collection,\n    q: this.query\n  };\n  if (this.options) {\n    message.o = this.options;\n  }\n  if (this.results) {\n    // Collect the version of all the documents in the current result set so we\n    // don't need to be sent their snapshots again.\n    var results = [];\n    for (var i = 0; i < this.results.length; i++) {\n      var doc = this.results[i];\n      results.push([doc.id, doc.version]);\n    }\n    message.r = results;\n  }\n\n  this.connection.send(message);\n  this.sent = true;\n};\n\n// Destroy the query object. Any subsequent messages for the query will be\n// ignored by the connection.\nQuery.prototype.destroy = function(callback) {\n  if (this.connection.canSend && this.action === 'qs') {\n    this.connection.send({a: 'qu', id: this.id});\n  }\n  this.connection._destroyQuery(this);\n  // There is a callback for consistency, but we don't actually wait for the\n  // server's unsubscribe message currently\n  if (callback) process.nextTick(callback);\n};\n\nQuery.prototype._onConnectionStateChanged = function() {\n  if (this.connection.canSend && !this.sent) {\n    this.send();\n  } else {\n    this.sent = false;\n  }\n};\n\nQuery.prototype._handleFetch = function(err, data, extra) {\n  // Once a fetch query gets its data, it is destroyed.\n  this.connection._destroyQuery(this);\n  this._handleResponse(err, data, extra);\n};\n\nQuery.prototype._handleSubscribe = function(err, data, extra) {\n  this._handleResponse(err, data, extra);\n};\n\nQuery.prototype._handleResponse = function(err, data, extra) {\n  var callback = this.callback;\n  this.callback = null;\n  if (err) return this._finishResponse(err, callback);\n  if (!data) return this._finishResponse(null, callback);\n\n  var query = this;\n  var wait = 1;\n  var finish = function(err) {\n    if (err) return query._finishResponse(err, callback);\n    if (--wait) return;\n    query._finishResponse(null, callback);\n  };\n\n  if (Array.isArray(data)) {\n    wait += data.length;\n    this.results = this._ingestSnapshots(data, finish);\n    this.extra = extra;\n\n  } else {\n    for (var id in data) {\n      wait++;\n      var snapshot = data[id];\n      var doc = this.connection.get(snapshot.c || this.collection, id);\n      doc.ingestSnapshot(snapshot, finish);\n    }\n  }\n\n  finish();\n};\n\nQuery.prototype._ingestSnapshots = function(snapshots, finish) {\n  var results = [];\n  for (var i = 0; i < snapshots.length; i++) {\n    var snapshot = snapshots[i];\n    var doc = this.connection.get(snapshot.c || this.collection, snapshot.d);\n    doc.ingestSnapshot(snapshot, finish);\n    results.push(doc);\n  }\n  return results;\n};\n\nQuery.prototype._finishResponse = function(err, callback) {\n  this.emit('ready');\n  this.ready = true;\n  if (err) {\n    this.connection._destroyQuery(this);\n    if (callback) return callback(err);\n    return this.emit('error', err);\n  }\n  if (callback) callback(null, this.results, this.extra);\n};\n\nQuery.prototype._handleError = function(err) {\n  this.emit('error', err);\n};\n\nQuery.prototype._handleDiff = function(diff) {\n  // We need to go through the list twice. First, we'll ingest all the new\n  // documents. After that we'll emit events and actually update our list.\n  // This avoids race conditions around setting documents to be subscribed &\n  // unsubscribing documents in event callbacks.\n  for (var i = 0; i < diff.length; i++) {\n    var d = diff[i];\n    if (d.type === 'insert') d.values = this._ingestSnapshots(d.values);\n  }\n\n  for (var i = 0; i < diff.length; i++) {\n    var d = diff[i];\n    switch (d.type) {\n      case 'insert':\n        var newDocs = d.values;\n        Array.prototype.splice.apply(this.results, [d.index, 0].concat(newDocs));\n        this.emit('insert', newDocs, d.index);\n        break;\n      case 'remove':\n        var howMany = d.howMany || 1;\n        var removed = this.results.splice(d.index, howMany);\n        this.emit('remove', removed, d.index);\n        break;\n      case 'move':\n        var howMany = d.howMany || 1;\n        var docs = this.results.splice(d.from, howMany);\n        Array.prototype.splice.apply(this.results, [d.to, 0].concat(docs));\n        this.emit('move', docs, d.from, d.to);\n        break;\n    }\n  }\n\n  this.emit('changed', this.results);\n};\n\nQuery.prototype._handleExtra = function(extra) {\n  this.extra = extra;\n  this.emit('extra', extra);\n};\n","var EventEmitter = require('events').EventEmitter;\n\nexports.EventEmitter = EventEmitter;\nexports.mixin = mixin;\n\nfunction mixin(Constructor) {\n  for (var key in EventEmitter.prototype) {\n    Constructor.prototype[key] = EventEmitter.prototype[key];\n  }\n}\n","var makeError = require('make-error');\n\nfunction ShareDBError(code, message) {\n  ShareDBError.super.call(this, message);\n  this.code = code;\n}\n\nmakeError(ShareDBError);\n\nmodule.exports = ShareDBError;\n","\nexports.defaultType = require('ot-json0').type;\n\nexports.map = {};\n\nexports.register = function(type) {\n  if (type.name) exports.map[type.name] = type;\n  if (type.uri) exports.map[type.uri] = type;\n};\n\nexports.register(exports.defaultType);\n","\nexports.doNothing = doNothing;\nfunction doNothing() {}\n\nexports.hasKeys = function(object) {\n  for (var key in object) return true;\n  return false;\n};\n","var qs = require('qs')\nvar parseUrl = require('url').parse\nvar resolveUrl = require('url').resolve\nvar router = require('./router')\nvar currentPath = window.location.pathname + window.location.search\n\n// Replace the initial state with the current URL immediately,\n// so that it will be rendered if the state is later popped\nif (window.history.replaceState) {\n  window.history.replaceState({\n    $render: true,\n    $method: 'get'\n  }, null, window.location.href)\n}\n\nmodule.exports = History\n\nfunction History(app, routes) {\n  this.app = app\n  this.routes = routes\n\n  if (window.history.pushState) {\n    addListeners(this)\n    return\n  }\n  this.push = function(url) {\n    window.location.assign(url)\n  }\n  this.replace = function(url) {\n    window.location.replace(url)\n  }\n}\n\nHistory.prototype.push = function(url, render, state, e) {\n  this._update('pushState', url, render, state, e)\n}\n\nHistory.prototype.replace = function(url, render, state, e) {\n  this._update('replaceState', url, render, state, e)\n}\n\n// Rerender the current url locally\nHistory.prototype.refresh = function() {\n  var path = routePath(window.location.href)\n  // Note that we don't pass previous to avoid triggering transitions\n  router.render(this, {url: path, method: 'get'})\n}\n\nHistory.prototype.back = function() {\n  window.history.back()\n}\n\nHistory.prototype.forward = function() {\n  window.history.forward()\n}\n\nHistory.prototype.go = function(i) {\n  window.history.go(i)\n}\n\nHistory.prototype._update = function(historyMethod, relativeUrl, render, state, e) {\n  var url = resolveUrl(window.location.href, relativeUrl)\n  var path = routePath(url)\n\n  // TODO: history.push should set the window.location with external urls\n  if (!path) return\n  if (render == null) render = true\n  if (state == null) state = {}\n\n  // Update the URL\n  var options = renderOptions(e, path)\n  state.$render = true\n  state.$method = options.method\n  window.history[historyMethod](state, null, options.url)\n  currentPath = window.location.pathname + window.location.search\n  if (render) router.render(this, options, e)\n}\n\nHistory.prototype.page = function() {\n  var page = this.app.createPage()\n  var history = this\n\n  function redirect(url) {\n    if (url === 'back') return history.back()\n    // TODO: Add support for `basepath` option like Express\n    if (url === 'home') url = '\\\\'\n    history.replace(url, true)\n  }\n\n  page.redirect = redirect\n  return page\n}\n\n// Get the pathname if it is on the same protocol and domain\nfunction routePath(url) {\n  var match = parseUrl(url)\n  return match &&\n    match.protocol === window.location.protocol &&\n    match.host === window.location.host &&\n    match.pathname + (match.search || '')\n}\n\nfunction renderOptions(e, path) {\n  // If this is a form submission, extract the form data and\n  // append it to the url for a get or params.body for a post\n  if (e && e.type === 'submit') {\n    var form = e.target\n    var elements = form.elements\n    var query = []\n    for (var i = 0, len = elements.length, el; i < len; i++) {\n      el = elements[i]\n      var name = el.name\n      if (!name) continue\n      var value = el.value\n      query.push(encodeURIComponent(name) + '=' + encodeURIComponent(value))\n      if (name === '_method') {\n        var override = value.toLowerCase()\n        if (override === 'delete') override = 'del'\n      }\n    }\n    query = query.join('&')\n    if (form.method.toLowerCase() === 'post') {\n      var method = override || 'post'\n      var body = qs.parse(query)\n    } else {\n      method = 'get'\n      path += '?' + query\n    }\n  } else {\n    method = 'get'\n  }\n  return {\n    method: method\n  , url: path\n  , previous: window.location.pathname + window.location.search\n  , body: body\n  , form: form\n  , link: e && e._tracksLink\n  }\n}\n\nfunction addListeners(history) {\n\n  // Detect clicks on links\n  function onClick(e) {\n    var el = e.target\n\n    // Ignore command click, control click, and non-left click\n    if (e.metaKey || e.which !== 1) return\n\n    // Ignore if already prevented\n    if (e.defaultPrevented) return\n\n    // Also look up for parent links (<a><img></a>)\n    while (el) {\n      var url = el.href\n      if (url) {\n\n        // Ignore if created by Tracks\n        if (el.hasAttribute && el.hasAttribute('data-router-ignore')) return\n\n        // Ignore links meant to open in a different window or frame\n        if (el.target && el.target !== '_self') return\n\n        // Ignore hash links to the same page\n        var hashIndex = url.indexOf('#')\n        if (~hashIndex && url.slice(0, hashIndex) === window.location.href.replace(/#.*/, '')) {\n          return\n        }\n\n        e._tracksLink = el\n        history.push(url, true, null, e)\n        return\n      }\n\n      el = el.parentNode\n    }\n  }\n\n  function onSubmit(e) {\n    var target = e.target\n\n    // Ignore if already prevented\n    if (e.defaultPrevented) return\n\n    // Only handle if emitted on a form element that isn't multipart\n    if (target.tagName.toLowerCase() !== 'form') return\n    if (target.enctype === 'multipart/form-data') return\n\n    // Ignore if created by Tracks\n    if (target.hasAttribute && target.hasAttribute('data-router-ignore')) return\n\n    // Use the url from the form action, defaulting to the current url\n    var url = target.action || window.location.href\n    history.push(url, true, null, e)\n  }\n\n  function onPopState(e) {\n    // HACK: Chrome sometimes does a pop state before the app is set up properly\n    if (!history.app.page) return\n\n    var previous = currentPath\n    var state = e.state\n    currentPath = window.location.pathname + window.location.search\n\n    var options = {\n      previous: previous\n    , url: currentPath\n    }\n\n    if (state) {\n      if (!state.$render) return\n      options.method = state.$method\n      // Note that the post body is only sent on the initial reqest\n      // and it is empty if the state is later popped\n      return router.render(history, options)\n    }\n\n    // The state object will be null for states created by jump links.\n    // window.location.hash cannot be used, because it returns nothing\n    // if the url ends in just a hash character\n    var url = window.location.href\n      , hashIndex = url.indexOf('#')\n      , el, id\n    if (~hashIndex && currentPath !== previous) {\n      options.method = 'get'\n      router.render(history, options)\n      id = url.slice(hashIndex + 1)\n      if (el = document.getElementById(id) || document.getElementsByName(id)[0]) {\n        el.scrollIntoView()\n      }\n    }\n  }\n\n  document.addEventListener('click', onClick, true)\n  document.addEventListener('submit', onSubmit, false)\n  window.addEventListener('popstate', onPopState, true)\n}\n","var Route = require('../vendor/express/router/route')\nvar History = require('./History')\nvar router = module.exports = require('./router')\n\nrouter.setup = setup\n\nfunction setup(app) {\n  var routes = {\n    queue: {}\n  , transitional: {}\n  , app: app\n  }\n  app.history = new History(app, routes)\n\n  ;['get', 'post', 'put', 'del', 'enter', 'exit'].forEach(function(method) {\n    var queue = routes.queue[method] = []\n    var transitional = routes.transitional[method] = []\n\n    app[method] = function(pattern, callback) {\n      if (Array.isArray(pattern)) {\n        pattern.forEach(function(item) {\n          app[method](item, callback)\n        })\n        return app\n      }\n\n      if (router.isTransitional(pattern)) {\n        var from = pattern.from\n        var to = pattern.to\n        var forward = pattern.forward || (callback && callback.forward) || callback\n        var back = pattern.back || (callback && callback.back)\n\n        var fromRoute = new Route(method, from, back)\n        var toRoute = new Route(method, to, forward)\n        fromRoute.isTransitional = true\n        toRoute.isTransitional = true\n        transitional.push({\n          from: fromRoute\n        , to: toRoute\n        })\n        if (back) transitional.push({\n          from: toRoute\n        , to: fromRoute\n        })\n\n        return app\n      }\n\n      queue.push(new Route(method, pattern, callback))\n      return app\n    }\n  })\n}\n","var qs = require('qs')\nvar nodeUrl = require('url');\n\nmodule.exports = {\n  render: render\n, isTransitional: isTransitional\n, mapRoute: mapRoute\n}\n\nfunction isTransitional(pattern) {\n  return pattern.hasOwnProperty('from') && pattern.hasOwnProperty('to')\n}\n\nfunction mapRoute(from, params) {\n  var i = params.url.indexOf('?')\n  var queryString = (~i) ? params.url.slice(i) : ''\n  // If the route looks like /:a/:b?/:c/:d?\n  // and :b and :d are missing, return /a/c\n  // Thus, skip the / if the value is missing\n  var i = 0\n  var path = from.replace(/\\/(?:(?:\\:([^?\\/:*(]+)(?:\\([^)]+\\))?)|\\*)(\\?)?/g, onMatch)\n  function onMatch(match, key, optional) {\n    var value = key ? params[key] : params[i++]\n    return (optional && value == null) ? '' : '/' + encodeURIComponent(value)\n  }\n  return path + queryString\n}\n\nfunction render(history, options, e) {\n  var req = new RenderReq(history.app.page, history.routes, options, e)\n  req.routeTransitional(0, function() {\n    req.page = history.page()\n    req.routeQueue(0, function() {\n      // Cancel rendering by this app if no routes match\n      req.cancel()\n    })\n  })\n}\n\nfunction RenderReq(page, routes, options, e) {\n  this.page = page\n  this.options = options\n  this.e = e\n  this.setUrl(options.url.replace(/#.*/, ''))\n  var queryString = nodeUrl.parse(this.url).query;\n  this.query = queryString ? qs.parse(queryString) : {}\n  this.method = options.method\n  this.body = options.body || {}\n  this.setPrevious(options.previous)\n  this.transitional = routes.transitional[this.method]\n  this.queue = routes.queue[this.method]\n  this.app = routes.app\n}\n\nRenderReq.prototype.cancel = function() {\n  var options = this.options\n  // Don't do anything if this is the result of an event, since the\n  // appropriate action will happen by default\n  if (this.e || options.noNavigate) return\n  // Otherwise, manually perform appropriate action\n  if (options.form) {\n    options.form.setAttribute('data-router-ignore', '')\n    options.form.submit()\n  } else {\n    window.location.assign(options.url)\n  }\n}\n\nRenderReq.prototype.setUrl = function(url) {\n  this.url = url\n  this.path = url.replace(/\\?.*/, '')\n}\nRenderReq.prototype.setPrevious = function(previous) {\n  this.previous = previous\n  this.previousPath = previous && previous.replace(/\\?.*/, '')\n}\n\nRenderReq.prototype.routeTransitional = function(i, next) {\n  i || (i = 0)\n  var item\n  while (item = this.transitional[i++]) {\n    if (!item.to.match(this.path) || !item.from.match(this.previousPath)) continue\n    var req = this\n    var params = this.routeParams(item.to)\n    // Even though we don't need to do anything after a done, pass a\n    // no op function, so that routes can expect it to be defined\n    function done() {}\n    this.onMatch(item.to, params, function(err) {\n      if (err) return req.cancel()\n      req.routeTransitional(i, next)\n    }, done)\n    return\n  }\n  next()\n}\n\nRenderReq.prototype.routeQueue = function(i, next) {\n  i || (i = 0)\n  var route\n  while (route = this.queue[i++]) {\n    if (!route.match(this.path)) continue\n    var req = this\n    var params = this.routeParams(route)\n    this.onMatch(route, params, function(err) {\n      if (err) return req.cancel()\n      req.routeQueue(i, next)\n    })\n    return\n  }\n  next()\n}\n\nRenderReq.prototype.onMatch = function(route, params, next, done) {\n  if (!this.page) return next()\n  // Stop the default browser action, such as clicking a link or submitting a form\n  if (this.e) {\n    this.e.preventDefault()\n    this.e = null\n  }\n  this.page.params = params\n  if (route.isTransitional) {\n    this.app.onRoute(route.callbacks, this.page, next, done)\n  } else {\n    this.app.onRoute(route.callbacks, this.page, next)\n  }\n}\n\nRenderReq.prototype.routeParams = function(route) {\n  var routeParams = route.params\n  var params = routeParams.slice()\n\n  for (var key in routeParams) {\n    params[key] = routeParams[key]\n  }\n  params.previous = this.previous\n  params.url = this.url\n  params.body = this.body\n  params.query = this.query\n  params.method = this.method\n  return params\n}\n","\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils');\n\n/**\n * Expose `Route`.\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given HTTP `method`, `path`,\n * and an array of `callbacks` and `options`.\n *\n * Options:\n *\n *   - `sensitive`    enable case-sensitive routes\n *   - `strict`       enable strict matching for trailing slashes\n *\n * @param {String} method\n * @param {String} path\n * @param {Array} callbacks\n * @param {Object} options.\n * @api private\n */\n\nfunction Route(method, path, callbacks, options) {\n  options = options || {};\n  this.path = path;\n  this.method = method;\n  this.callbacks = callbacks;\n  this.regexp = utils.pathRegexp(path\n    , this.keys = []\n    , options.sensitive\n    , options.strict);\n}\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nRoute.prototype.match = function(path){\n  var keys = this.keys\n    , params = this.params = []\n    , m = this.regexp.exec(path);\n\n  if (!m) return false;\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n\n    var val = 'string' == typeof m[i]\n      ? decodeURIComponent(m[i])\n      : m[i];\n\n    if (key) {\n      params[key.name] = val;\n    } else {\n      params.push(val);\n    }\n  }\n\n  return true;\n};\n","\n/**\n * Module dependencies.\n */\n\n/**\n * toString ref.\n */\n\nvar toString = {}.toString;\n\n/**\n * Return ETag for `body`.\n *\n * @param {String|Buffer} body\n * @return {String}\n * @api private\n */\n\nexports.etag = function(body){\n  return '\"' + crc32.signed(body) + '\"';\n};\n\n/**\n * Make `locals()` bound to the given `obj`.\n *\n * This is used for `app.locals` and `res.locals`.\n *\n * @param {Object} obj\n * @return {Function}\n * @api private\n */\n\nexports.locals = function(obj){\n  function locals(obj){\n    for (var key in obj) locals[key] = obj[key];\n    return obj;\n  };\n\n  return locals;\n};\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' == path[0]) return true;\n  if (':' == path[1] && '\\\\' == path[2]) return true;\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = function(arr, ret){\n  var ret = ret || []\n    , len = arr.length;\n  for (var i = 0; i < len; ++i) {\n    if (Array.isArray(arr[i])) {\n      exports.flatten(arr[i], ret);\n    } else {\n      ret.push(arr[i]);\n    }\n  }\n  return ret;\n};\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Return the acceptable type in `types`, if any.\n *\n * @param {Array} types\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.acceptsArray = function(types, str){\n  // accept anything when Accept is not present\n  if (!str) return types[0];\n\n  // parse\n  var accepted = exports.parseAccept(str)\n    , normalized = exports.normalizeTypes(types)\n    , len = accepted.length;\n\n  for (var i = 0; i < len; ++i) {\n    for (var j = 0, jlen = types.length; j < jlen; ++j) {\n      if (exports.accept(normalized[j], accepted[i])) {\n        return types[j];\n      }\n    }\n  }\n};\n\n/**\n * Check if `type(s)` are acceptable based on\n * the given `str`.\n *\n * @param {String|Array} type(s)\n * @param {String} str\n * @return {Boolean|String}\n * @api private\n */\n\nexports.accepts = function(type, str){\n  if ('string' == typeof type) type = type.split(/ *, */);\n  return exports.acceptsArray(type, str);\n};\n\n/**\n * Check if `type` array is acceptable for `other`.\n *\n * @param {Object} type\n * @param {Object} other\n * @return {Boolean}\n * @api private\n */\n\nexports.accept = function(type, other){\n  var t = type.value.split('/');\n  return (t[0] == other.type || '*' == other.type)\n    && (t[1] == other.subtype || '*' == other.subtype)\n    && paramsEqual(type.params, other.params);\n};\n\n/**\n * Check if accept params are equal.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Boolean}\n * @api private\n */\n\nfunction paramsEqual(a, b){\n  return !Object.keys(a).some(function(k) {\n    return a[k] != b[k];\n  });\n}\n\n/**\n * Parse accept `str`, returning\n * an array objects containing\n * `.type` and `.subtype` along\n * with the values provided by\n * `parseQuality()`.\n *\n * @param {Type} name\n * @return {Type}\n * @api private\n */\n\nexports.parseAccept = function(str){\n  return exports\n    .parseParams(str)\n    .map(function(obj){\n      var parts = obj.value.split('/');\n      obj.type = parts[0];\n      obj.subtype = parts[1];\n      return obj;\n    });\n};\n\n/**\n * Parse quality `str`, returning an\n * array of objects with `.value`,\n * `.quality` and optional `.params`\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nexports.parseParams = function(str){\n  return str\n    .split(/ *, */)\n    .map(acceptParams)\n    .filter(function(obj){\n      return obj.quality;\n    })\n    .sort(function(a, b){\n      if (a.quality === b.quality) {\n        return a.originalIndex - b.originalIndex;\n      } else {\n        return b.quality - a.quality;\n      }\n    });\n};\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' == pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function(html) {\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Boolean} sensitive\n * @param  {Boolean} strict\n * @return {RegExp}\n * @api private\n */\n\nexports.pathRegexp = function(path, keys, sensitive, strict) {\n  if (toString.call(path) == '[object RegExp]') return path;\n  if (Array.isArray(path)) path = '(' + path.join('|') + ')';\n  path = path\n    .concat(strict ? '' : '/?')\n    .replace(/\\/\\(/g, '(?:/')\n    .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?(\\*)?/g, function(_, slash, format, key, capture, optional, star){\n      keys.push({ name: key, optional: !! optional });\n      slash = slash || '';\n      return ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + (optional ? slash : '')\n        + (format || '') + (capture || (format && '([^/.]+?)' || '([^/]+?)')) + ')'\n        + (optional || '')\n        + (star ? '(/*)?' : '');\n    })\n    .replace(/([\\/.])/g, '\\\\$1')\n    .replace(/\\*/g, '(.*)');\n  return new RegExp('^' + path + '$', sensitive ? '' : 'i');\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","/**\n * Created by durupina on 2/10/17.\n */\n\n//Listen and respond to cytoscape events triggered by cytoscape-undo-redo.js\n\n\nmodule.exports = function(modelManager){\n\n    //A new sample or file is loaded --update model and inform others\n   $(document).on(\"sbgnvizLoadSampleEnd sbgnvizLoadFileEnd\",  function(event, file){\n       console.log(\"Loading new sample\");\n       modelManager.newModel(\"me\"); //do not delete cytoscape, only the model\n       modelManager.initModel(cy.nodes(), cy.edges(), appUtilities);\n\n    });\n\n    $(document).on(\"saveLayout\", function (evt) {\n         var layoutProperties = appUtilities.currentLayoutProperties;\n        modelManager.updateLayoutProperties(layoutProperties, \"me\");\n    });\n\n    $(document).on(\"saveGeneralProperties\", function (evt) {\n        var generalProperties = appUtilities.currentGeneralProperties;\n        modelManager.updateGeneralProperties(generalProperties, \"me\");\n    });\n\n    $(document).on(\"saveGridProperties\", function (evt) {\n        var gridProperties = appUtilities.currentGridProperties;\n        modelManager.updateGridProperties(gridProperties, \"me\");\n    });\n\n\n\n    cy.on(\"afterDo afterRedo\", function (event, actionName, args, res) {\n\n        console.log(actionName);\n        console.log(args);\n        console.log(res);\n\n\n        if (actionName === \"changeData\" || actionName === \"changeFontProperties\" ) {\n\n            var modelElList = [];\n            var paramList = [];\n            args.eles.forEach(function (ele) {\n                //var ele = param.ele;\n\n                modelElList.push({id: ele.id(), isNode: ele.isNode()});\n                paramList.push(ele.data());\n\n            });\n            modelManager.changeModelElementGroupAttribute(\"data\", modelElList, paramList, \"me\");\n\n        }\n\n\n        else if (actionName === \"changeNodeLabel\" || actionName === \"resizeNodes\" ||\n            actionName === \"addStateOrInfoBox\" || actionName === \"setMultimerStatus\" || actionName === \"setCloneMarkerStatus\") {\n\n            var modelElList = [];\n            var paramList = []\n            args.nodes.forEach(function (ele) {\n                //var ele = param.ele;\n\n                modelElList.push({id: ele.id(), isNode: true});\n                paramList.push(ele.data());\n\n            });\n            modelManager.changeModelElementGroupAttribute(\"data\", modelElList, paramList, \"me\");\n\n        }\n\n        else if (actionName === \"changeBendPoints\") {\n\n            var modelElList = [];\n            var paramList = []\n\n\n            modelElList.push({id: args.edge.id(), isNode: false});\n\n\n            paramList.push({weights: args.edge.scratch('cyedgebendeditingWeights'), distances:args.edge.scratch('cyedgebendeditingDistances')});\n\n            modelManager.changeModelElementGroupAttribute(\"bendPoints\", modelElList, paramList, \"me\");\n\n        }\n\n\n        else if (actionName === \"hide\" || actionName === \"show\") {\n            var modelElList = [];\n            var paramList = [];\n\n            args.forEach(function (ele) {\n                modelElList.push({id: ele.id(), isNode: ele.isNode()});\n                paramList.push(actionName);\n\n            });\n\n            modelManager.changeModelElementGroupAttribute(\"visibilityStatus\", modelElList, paramList, \"me\");\n        }\n\n        else if (actionName === \"highlight\") {\n            var modelElList = [];\n            var paramList = [];\n\n\n            args.forEach(function (ele) {\n                modelElList.push({id: ele.id(), isNode: ele.isNode()});\n                paramList.push(\"highlighted\");\n            });\n\n            modelManager.changeModelElementGroupAttribute(\"highlightStatus\", modelElList, paramList, \"me\");\n        }\n\n        else if(actionName === \"removeHighlights\"){\n            var modelElList = [];\n            var paramList = [];\n\n\n            cy.elements().forEach(function (ele) {\n                modelElList.push({id: ele.id(), isNode: ele.isNode()});\n                paramList.push(\"unhighlighted\");\n\n            });\n\n            modelManager.changeModelElementGroupAttribute(\"highlightStatus\", modelElList, paramList, \"me\");\n\n        }\n        else if (actionName === \"expand\" || actionName === \"collapse\") {\n\n            var modelElList = [];\n            var paramList = []\n            args.nodes.forEach(function (ele) {\n                modelElList.push({id: ele.id(), isNode: true});\n                paramList.push(actionName);\n\n            });\n            modelManager.changeModelElementGroupAttribute(\"expandCollapseStatus\", modelElList, paramList, \"me\");\n        }\n\n\n        else if (actionName === \"drag\" || actionName === \"align\") {\n\n            var modelElList = [];\n            var paramList = []\n            args.nodes.forEach(function (ele) {\n                //var ele = param.ele;\n                modelElList.push({id: ele.id(), isNode: true});\n                paramList.push(ele.position());\n            });\n\n            modelManager.changeModelElementGroupAttribute(\"position\", modelElList, paramList, \"me\");\n        }\n\n        else if (actionName === \"layout\") {\n            cy.on('layoutstop', function() {\n\n                var modelElList = [];\n                var paramList = [];\n                args.eles.forEach(function (ele) {\n                    if(ele.isNode()){\n                        modelElList.push({id: ele.id(), isNode: true});\n                        paramList.push(ele.position());\n                    }\n                });\n\n                modelManager.changeModelElementGroupAttribute(\"position\", modelElList, paramList, \"me\");\n            });\n        }\n\n\n        else if(actionName === \"deleteElesSimple\" || actionName === \"deleteNodesSmart\"){\n\n\n            var nodeList = [];\n            var edgeList = [];\n\n            res.forEach(function (el) {\n                if(el.isNode())\n                    nodeList.push({id:el.id()});\n                else\n                    edgeList.push({id:el.id()});\n            });\n\n            modelManager.deleteModelElementGroup({nodes:nodeList,edges: edgeList}, \"me\");\n        }\n\n        else if (actionName === \"addNode\") {\n            var newNode = args.newNode;\n            var id = res.eles.id();\n            var param = {x: newNode.x, y: newNode.y, class: newNode.class};\n            //Add to the graph first\n            modelManager.addModelNode(id, param, \"me\");\n            //assign other node properties-- css and data\n            modelManager.initModelNode(res.eles[0], \"me\");\n\n        }\n\n         else if(actionName === \"addEdge\"){\n\n            var newEdge = args.newEdge;\n            var id = res.eles.id();\n             var param = { source: newEdge.source, target:newEdge.target, class: newEdge.class};\n             //Add to the graph first\n             modelManager.addModelEdge(id, param, \"me\");\n            //assign other edge properties-- css and data\n             modelManager.initModelEdge(res.eles[0], \"me\");\n\n         }\n\n         else if(actionName === \"paste\"){\n             res.forEach(function(el){ //first add nodes\n                 if(el.isNode()){\n                     var param = {x: el.position(\"x\"), y: el.position(\"y\"), class: el.data(\"class\")};\n                     modelManager.addModelNode(el.id(), param, \"me\");\n\n                     modelManager.initModelNode(el, \"me\");\n                 }\n             });\n\n            res.forEach(function(el){ //first add nodes\n                if(el.isEdge()){\n                    var param = { source: el.data(\"source\"), target:el.data(\"target\"), class: el.data(\"class\")};\n                    modelManager.addModelEdge(el.id(), param, \"me\");\n                    modelManager.initModelEdge(el, \"me\");\n                }\n            });\n\n        }\n        else if(actionName === \"changeParent\"){\n            var modelElList = [];\n            var modelNodeList = [];\n            var paramListData = [];\n            var paramListPosition = [];\n            res.movedEles.forEach(function (ele) {\n                //var ele = param.ele;\n\n                modelElList.push({id: ele.id(), isNode: ele.isNode()});\n                paramListData.push(ele.data());\n                paramListPosition.push(ele.position());\n\n            });\n\n            res.movedEles.forEach(function (ele) {\n                //var ele = param.ele;\n\n                if(ele.isNode()) {\n                    modelNodeList.push({id: ele.id(), isNode: ele.isNode()});\n                    paramListPosition.push(ele.position());\n                }\n\n            });\n\n            modelManager.changeModelElementGroupAttribute(\"data\", modelElList, paramListData, \"me\");\n            modelManager.changeModelElementGroupAttribute(\"position\", modelNodeList, paramListPosition, \"me\");\n\n\n        }\n        else if(actionName === \"createCompoundForGivenNodes\"){\n            var paramList = [];\n            var modelElList = [];\n\n\n            //Last element is the compound, skip it and add the children\n            for(var i = 0; i < res.newEles.length - 1; i++){\n                var ele = res.newEles[i];\n\n\n                modelElList.push({id: ele.id(), isNode: true});\n\n                paramList.push(ele.data()); //includes parent information\n\n            }\n            //\n            // res.children().forEach(function (ele) {\n            //     //var ele = param.ele;\n            //\n            //     modelElList.push({id: ele.id(), isNode: true});\n            //\n            //     paramList.push(ele.data()); //includes parent information\n            //\n            // });\n\n\n            var compoundId = res.newEles[0].data(\"parent\");\n            var compound = cy.getElementById(compoundId);\n\n            var compoundAtts = {x: compound.position(\"x\"), y: compound.position(\"y\"), class:compound.data(\"class\")};\n\n\n            modelManager.addModelCompound(compound.id(), compoundAtts, modelElList,paramList, \"me\" );\n\n\n            //assign other node properties-- css and data\n            modelManager.initModelNode(compound,\"me\", true); //init with default values  -- no history update\n\n\n        }\n\n    });\n\n\n\n\n        cy.on(\"mouseup\", \"node\", function () {\n            modelManager.unselectModelNode(this, \"me\");\n        });\n\n\n        cy.on('select', 'node', function (event) { //Necessary for multiple selections\n            console.log(this.id()); //TODO delete later\n            modelManager.selectModelNode(this, \"me\");\n\n        });\n\n        cy.on('unselect', 'node', function () { //causes sync problems in delete op\n            modelManager.unselectModelNode(this, \"me\");\n        });\n        cy.on('grab', 'node', function (event) { //Also works as 'select'\n            modelManager.selectModelNode(this, \"me\");\n        });\n\n        cy.on('select', 'edge', function (event) {\n            console.log(this.id()); //TODO delete later\n            modelManager.selectModelEdge(this, \"me\");\n\n        });\n\n        cy.on('unselect', 'edge', function (event) {\n            modelManager.unselectModelEdge(this, \"me\");\n        });\n\n\n}\n\n\n","/**\n * Created by durupina on 11/14/16.\n */\n\n\n\n\n\nmodule.exports =  function(app, modelManager) {\n\n    var idxcardjson = require('../src/reach-functions/idxcardjson-to-json-converter.js');\n\n    var socket = io();\n    var idxCardView = require('../src/reach-functions//idxCard-info.js');\n    var jsonGraphs;\n    var nodeMap;\n    var text= 'We introduce a new method. MDM2 phosphorylates TP53.  MDM2 deactivates RAF. A Sos-1-E3b1 complex directs Rac activation by entering into a tricomplex with Eps8.';\n    var pmcID = \"PMC2797771\";\n\n\n    return   {\n\n\n\n\n        initialize: function(){\n\n\n\n            $('#factoidBox')[0].value = text;\n\n            var factoidModel = modelManager.getFactoidModel();\n\n\n            if(factoidModel != null){\n\n                jsonGraphs = factoidModel.jsonGraphs;\n                nodeMap = factoidModel.nodeMap;\n\n                this.updateTextBox(jsonGraphs);\n\n            }\n\n\n            this.listenToEvents();\n\n\n        },\n\n        updateTextBox: function(jsonGraphs){\n            var textFromJsons = \"\";\n            for(var i = 0; i < jsonGraphs.length; i++)\n                textFromJsons+= jsonGraphs[i].sentence + '. ';\n\n            text = textFromJsons;\n            $('#factoidBox')[0].value = text = textFromJsons;\n        },\n        loadFactoidModel: function(inputStr){\n\n\n            //parse each input sentence one by one\n\n\n            var self = this;\n            var jsonGraphs = [];\n\n\n\n            var notyView = noty({layout: \"bottom\",text: \"Sending REACH queries\"});\n\n\n            var p = new Promise(function (resolve) {\n                socket.emit(\"REACHQuery\", \"indexcard\", inputStr, function (data) {\n                        //      console.log(line);\n\n\n                        var cards = JSON.parse(data).cards;\n                        // console.log(cards);\n\n                        cards.forEach(function(card){\n                            var jsonData = idxcardjson.createJson({cards: [card]});\n\n                                jsonGraphs.push({sentence: card.evidence[0], json: jsonData, idxCard:card});\n\n\n                        });\n\n\n\n                     notyView.setText( \"Merging graphs...\");\n\n\n\n                        //TODO: merge will be implemented\n                        //nodeMap = modelManager.mergeJsons(jsonGraphs); //mapping between sentences and node labels\n                    nodeMap = app.mergeJsons(jsonGraphs); //mapping between sentences and node labels\n\n\n                     console.log(jsonGraphs);\n\n\n                        //save it to the model\n                        modelManager.updateFactoidModel({jsonGraphs: jsonGraphs, nodeMap: nodeMap, text: text}, \"me\");\n\n\n\n                     notyView.close();\n\n\n\n\n\n                    });\n                });\n        },\n\n\n\n        highlightSentenceInText: function(nodeId, highlightColor){\n\n            var el  = $('#factoidBox');\n\n\n\n            console.log(nodeId);\n\n\n            if(highlightColor == null){\n                el.highlightTextarea('destroy');\n                return;\n            }\n\n\n\n            var sentences = nodeMap.sentences[nodeId];\n\n            var idxCards = nodeMap.idxCards[nodeId];\n            console.log(nodeMap);\n\n            // console.log(idxCards);\n\n\n            cy.$(('#' + nodeId)).qtip({\n                content: {\n                    text: function (event, api) {\n\n                        var info = (new idxCardView(idxCards)).render();\n                        var html = $('#idxCard-container').html();\n\n\n                        api.set('content.text', html);\n\n                        return html;\n\n\n                    }\n                },\n                show: {\n                    ready: true\n                },\n                position: {\n                    my: 'top center',\n                    at: 'top middle',\n                    adjust: {\n                        cyViewport: true\n                    },\n                    effect: false\n                },\n                style: {\n                    classes: 'qtip-bootstrap',\n                    tip: {\n                        width: 20,\n                        height: 20\n                    }\n                }\n            });\n\n\n\n\n            if(sentences) {\n\n                var ranges = [];\n\n                for(var i = 0; i < sentences.length; i++) {\n                    var startInd = el[0].value.indexOf(sentences[i]);\n                    var endInd = startInd + sentences[i].length;\n                    ranges.push([startInd, endInd]);\n                }\n                console.log(ranges);\n\n                el.highlightTextarea({\n                    ranges: [{\n                        color: highlightColor,//('#FFFF0'),\n                        ranges: ranges\n                    }]\n                });\n\n\n            }\n        },\n        setFactoidModel: function(factoidModel){\n\n            nodeMap = factoidModel.nodeMap;\n            jsonGraphs = factoidModel.jsonGraphs;\n            text = factoidModel.text;\n\n\n        },\n\n\n        loadFactoidPMC: function() {\n\n\n\n            var link = \"https://www.ncbi.nlm.nih.gov/pmc/articles/\" + $('#pmcBox').val() ;\n            socket.emit(\"HTTPRequest\", link,  function(result){\n                //console.log(result);\n\n                $('#factoidBox')[0].value = result;\n            });\n            // loadFactoidModel($(, menu);\n        },\n\n        loadFactoidFile: function(e){\n\n\n            var extension = $(\"#factoid-file-input\")[0].files[0].name.split('.').pop().toLowerCase();\n\n\n            if(extension == \"pdf\") {\n\n                var reader = new FileReader();\n                reader.onload = function (e) {\n\n                    socket.emit('pdfConvertRequest',this.result, function(pages){\n\n                        //Combine pages\n                        var txt  = \"\";\n                        pages.forEach(function(page){\n\n                            page.forEach(function(el){\n\n                                txt += el + \" \";\n                            });\n                            // txt += '\\n';\n                        });\n\n\n\n                        //TODO txtData needs some kind of cleaning\n                        $('#factoidBox')[0].value = txt;\n\n                    });\n\n\n\n                };\n                reader.readAsArrayBuffer($(\"#factoid-file-input\")[0].files[0]);\n\n\n\n            }\n            else{\n                var reader = new FileReader();\n                reader.onload = function (e) {\n\n                    $('#factoidBox')[0].value =  this.result; //change text\n\n                };\n                reader.readAsText($(\"#factoid-file-input\")[0].files[0]);\n\n\n\n            }\n\n        },\n\n\n        listenToEvents: function(){\n            var self = this;\n\n            $('#factoid-text-submit-button').click(function () {\n                self.loadFactoidModel($('#factoidBox').val());\n\n            });\n\n            $('#factoid-text-clear-button').click(function () {\n                self.text = '';\n                $('#factoidBox')[0].value = '';\n\n            });\n\n\n            $('#factoid-file-input').change(function (e) {\n                self.loadFactoidFile(e);\n\n            });\n\n            $('#pmc-id-submit-button').click(function (e) {\n                self.loadFactoidPMC();\n\n            });\n\n        }\n\n\n    };\n}\n\n\n\n// if( typeof module !== 'undefined' && module.exports){ // expose as a nodejs module\n//     module.exports = new FactoidInput();","/*\n *\tShared model handling operations.\n *  Clients call these commands to update the model\n *\tAuthor: Funda Durupinar Babur<f.durupinar@gmail.com>\n */\n\nvar _ = require('underscore');\n\nmodule.exports = function (model, docId) {\n\n\n\n    console.log(\"ModelManager \" + docId);\n\n    model.ref('_page.doc', 'documents.' + docId);\n\n\n\n    return {\n\n\n        getModel: function () {\n            return model;\n        },\n\n        getPageDoc: function(){\n            return model.get('_page.doc');\n        },\n\n\n        addImage: function (data, user, noHistUpdate) {\n            model.pass({user: user}).push('_page.doc.images', data);\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'add', opTarget: 'image', opAttr: data.filePath});\n        },\n\n        setName: function (userId, userName) {\n\n            model.set('_page.doc.users.' + userId +'.name', userName);\n\n        },\n\n        getName: function (userId) {\n            return model.get('_page.doc.users.' + userId + '.name');\n        },\n\n        getMessages: function(){\n            return model.get('_page.doc.messages');\n        },\n\n        getUsers: function(){\n            return model.get('_page.doc.users');\n        },\n        getUserIds: function(){\n            return model.get('_page.doc.userIds');\n        },\n\n\n        addUser: function(userId){\n\n\n            var userIds = model.get('_page.doc.userIds');\n\n            if(!userIds || userIds.indexOf(userId) < 0) //user not in the list\n                model.at('_page.doc.userIds').push(userId);\n\n\n        },\n\n        deleteUser: function(userId){\n            // console.log(\"user deleted\");\n         //   model.del('_page.doc.users.'+ userId);\n            var userIds = model.get('_page.doc.userIds');\n\n            for(var i = 0; i < userIds.length; i++){\n\n                if(userIds[i] == userId ){\n                    model.remove('_page.doc.userIds', i) ; //remove from the index\n                    break;\n                }\n            }\n        },\n\n\n\n        updateLayoutProperties: function (layoutProperties, user, noHistUpdate) {\n\n            var currentLayoutProperties;\n            var lp = model.get('_page.doc.cy.layoutProperties');\n\n\n            currentLayoutProperties = _.clone(layoutProperties);\n\n\n\n            model.pass({user: user}).set('_page.doc.cy.layoutProperties',  currentLayoutProperties); //synclayout\n\n            if (!noHistUpdate)\n                this.updateHistory({\n                    opName: 'update',\n                    opTarget: 'layout properties',\n                    opAttr: JSON.stringify(currentLayoutProperties),\n                    param: currentLayoutProperties,\n                    prevParam: lp\n\n                });\n            return currentLayoutProperties;\n        },\n\n        getLayoutProperties: function (layoutProperties, user, noHistUpdate) {\n           return model.get('_page.doc.cy.layoutProperties');\n\n        },\n\n        updateGeneralProperties: function (generalProperties, user, noHistUpdate) {\n\n            var currentGeneralProperties;\n            var lp = model.get('_page.doc.cy.generalProperties');\n\n\n            currentGeneralProperties = _.clone(generalProperties);\n\n\n            model.pass({user: user}).set('_page.doc.cy.generalProperties',  currentGeneralProperties); //synclayout\n\n            if (!noHistUpdate)\n                this.updateHistory({\n                    opName: 'update',\n                    opTarget: 'general properties',\n                    opAttr: JSON.stringify(currentGeneralProperties),\n                    param:currentGeneralProperties,\n                    prevParam:lp\n                });\n            return currentGeneralProperties;\n        },\n\n        getGeneralProperties: function (generalProperties, user, noHistUpdate) {\n            return model.get('_page.doc.cy.generalProperties');\n\n        },\n\n        updateGridProperties: function (gridProperties, user, noHistUpdate) {\n\n            var currentGridProperties;\n            var lp = model.get('_page.doc.cy.gridProperties');\n\n\n            currentGridProperties = _.clone(gridProperties);\n\n\n            model.pass({user: user}).set('_page.doc.cy.gridProperties',  currentGridProperties); //synclayout\n\n            if (!noHistUpdate)\n                this.updateHistory({\n                    opName: 'update',\n                    opTarget: 'grid properties',\n                    opAttr: JSON.stringify(currentGridProperties),\n                    param:currentGridProperties,\n                    prevParam:lp\n                });\n            return currentGridProperties;\n        },\n\n        getGridProperties: function (gridProperties, user, noHistUpdate) {\n            return model.get('_page.doc.cy.gridProperties');\n\n        },\n\n        /***\n         *\n         * @param cmd  {opName, opTarget,  elType, elId, opAttr,param, prevParam}\n         * opName: set, load, open, add, select, unselect\n         * opTarget: element, element group,  model, sample,\n         * elType: node, edge\n         * opAttr: highlightColor, lineColor, borderColor etc.\n         */\n\n        updateHistory: function (cmd) {\n            var command = {\n                // userName: userName,\n                date: new Date,\n                opName: cmd.opName,\n                opTarget: cmd.opTarget,\n                elType: cmd.elType,\n                opAttr: cmd.opAttr,\n                elId: cmd.elId,\n                param: cmd.param,\n                prevParam: cmd.prevParam\n            };\n\n\n            if (cmd != null) {\n\n                var ind = model.push('_page.doc.history', command) - 1;\n\n\n\n                model.set('_page.doc.undoIndex', ind);\n            }\n\n        },\n\n        getHistory: function () {\n            return model.get('_page.doc.history');\n        },\n\n        printHistory: function(){\n            console.log(\"HISTORY:\");\n            var hist = model.get('_page.doc.history');\n            for(var i = 0 ; i <hist.length;i++)\n                console.log(i + \" \" + hist[i].opName);\n        },\n\n        getUndoActionStr: function () {\n\n            var undoIndex = model.get('_page.doc.undoIndex');\n            var cmd = model.get('_page.doc.history.' + undoIndex);\n\n\n            var cmdStr = cmd.opName + \" \" + cmd.opTarget;\n\n            if (cmd.opAttr != null)\n                cmdStr += \" \" + cmd.opAttr;\n            //    if(cmd.elId != null)\n            //      cmdStr += \" \" + cmd.elId;\n\n            return cmdStr;\n\n        },\n\n        getRedoActionStr: function () {\n            var undoIndex = model.get('_page.doc.undoIndex');\n            var cmd = model.get('_page.doc.history.' + (undoIndex + 1));\n\n            var cmdStr = cmd.opName + \" \" + cmd.opTarget;\n            if (cmd.opAttr != null)\n                cmdStr += \" \" + cmd.opAttr;\n            //  if(cmd.elId != null)\n            //    cmdStr += \" \" + cmd.elId;\n\n            return cmdStr;\n        },\n        isUndoPossible: function () {\n            return (model.get('_page.doc.undoIndex') > 0)\n        },\n        isRedoPossible: function () {\n            return (model.get('_page.doc.undoIndex') + 1 < model.get('_page.doc.history').length)\n        },\n\n        undoCommand: function () {\n            var undoInd = model.get('_page.doc.undoIndex');\n            var cmd = model.get('_page.doc.history.' + undoInd); // cmd: opName, opTarget, opAttr, elId, param\n\n\n            if (cmd.opName == \"set\") {\n                if (cmd.opTarget == \"element\" && cmd.elType == \"node\")\n                    this.changeModelNodeAttribute(cmd.opAttr, cmd.elId, cmd.prevParam, null); //user is null to enable updating in the editor\n\n                else if (cmd.opTarget == \"element\" && cmd.elType == \"edge\")\n                    this.changeModelEdgeAttribute(cmd.opAttr, cmd.elId, cmd.prevParam, null);\n                else if (cmd.opTarget == \"element group\")\n                    this.changeModelElementGroupAttribute(cmd.opAttr, cmd.elId, cmd.prevParam, null);\n\n            }\n            else if (cmd.opName == \"add\") {\n                if (cmd.opTarget == \"element\" && cmd.elType == \"node\")\n                    this.deleteModelNode(cmd.elId);\n                else if (cmd.opTarget == \"element\" && cmd.elType == \"edge\")\n                    this.deleteModelEdge(cmd.elId);\n                else if (cmd.opTarget == \"compound\")\n                    this.removeModelCompound(cmd.elId, cmd.param.childrenList, cmd.prevParam);\n            }\n            else if (cmd.opName == \"delete\") {\n                if (cmd.opTarget == \"element\")\n                    this.restoreModelElement(cmd.elType, cmd.elId, cmd.prevParam);\n                else if (cmd.opTarget == \"element group\"){\n\n                    this.restoreModelElementGroup(cmd.elId, cmd.prevParam);\n                }\n                else if (cmd.opTarget == \"compound\")\n                    this.addModelCompound(cmd.elId, cmd.prevParam.compoundAtts, cmd.prevParam.childrenList, cmd.prevParam.paramList);\n\n            }\n            else if(cmd.opName === \"update\"){ //properties\n                if(cmd.opTarget.indexOf('general') >= 0)\n                    this.updateGeneralProperties(cmd.prevParam);\n                else if(cmd.opTarget.indexOf('layout') >= 0)\n                    this.updateLayoutProperties(cmd.prevParam);\n                else if(cmd.opTarget.indexOf('grid') >= 0)\n                    this.updateGridProperties(cmd.prevParam);\n\n            }\n            else if (cmd.opName == \"init\") {\n                this.newModel(\"me\", true);\n            }\n            else if (cmd.opName == \"new\") { //delete all\n                this.restoreModel(cmd.prevParam);\n\n            }\n            else if (cmd.opName == \"merge\") {\n                this.newModel(\"me\", true);\n                this.restoreModel(cmd.prevParam);\n            }\n\n\n            undoInd = undoInd > 0 ? undoInd - 1 : 0;\n            model.set('_page.doc.undoIndex', undoInd);\n\n        },\n\n        redoCommand: function () {\n            var undoInd = model.get('_page.doc.undoIndex');\n            var cmd = model.get('_page.doc.history.' + (undoInd + 1)); // cmd: opName, opTarget, opAttr, elId, param\n\n            if (cmd.opName == \"set\") {\n                if (cmd.opTarget == \"element\" && cmd.elType == \"node\")\n                    this.changeModelNodeAttribute(cmd.opAttr, cmd.elId, cmd.param, null); //user is null to enable updating in the editor\n                else if (cmd.opTarget == \"element\" && cmd.elType == \"edge\")\n                    this.changeModelEdgeAttribute(cmd.opAttr, cmd.elId, cmd.param, null);\n                else if (cmd.opTarget == \"element group\") {\n                    this.changeModelElementGroupAttribute(cmd.opAttr, cmd.elId, cmd.param);\n\n                }\n\n\n            }\n            else if (cmd.opName == \"add\") {\n                if (cmd.opTarget == \"element\")\n                    this.restoreModelElement(cmd.elType, cmd.elId, cmd.param, null);\n                else if (cmd.opTarget == \"compound\")\n                    this.addModelCompound(cmd.elId, cmd.param.compoundAtts, cmd.param.childrenList, cmd.param.paramList);\n\n\n            }\n            else if (cmd.opName == \"delete\") {\n                if (cmd.opTarget == \"element\" && cmd.elType == \"node\")\n                    this.deleteModelNode(cmd.elId);\n                else if (cmd.opTarget == \"element\" && cmd.elType == \"edge\")\n                    this.deleteModelEdge(cmd.elId);\n                else if (cmd.opTarget == \"element group\")\n                    this.deleteModelElementGroup(cmd.elId);\n                else if (cmd.opTarget == \"compound\")\n                    this.removeModelCompound(cmd.elId, cmd.prevParam.childrenList, cmd.param);\n\n            }\n            else if(cmd.opName === \"update\"){ //properties\n                if(cmd.opTarget.indexOf('general') >= 0)\n                    this.updateGeneralProperties(cmd.param);\n                else if(cmd.opTarget.indexOf('layout') >= 0)\n                    this.updateLayoutProperties(cmd.param);\n                else if(cmd.opTarget.indexOf('grid') >= 0)\n                    this.updateGridProperties(cmd.param);\n\n            }\n            else if (cmd.opName == \"init\") {\n                this.restoreModel(cmd.param);\n            }\n            else if (cmd.opName == \"new\") { //delete all\n                this.newModel();\n            }\n            else if (cmd.opName == \"merge\") { //delete all\n                this.restoreModel(cmd.param);\n\n            }\n\n\n            undoInd = undoInd < model.get('_page.doc.history').length - 1 ? undoInd + 1 : model.get('_page.doc.history').length - 1;\n\n            model.set('_page.doc.undoIndex', undoInd);\n\n        },\n\n\n        getModelNode: function (id) {\n            var nodePath = model.at('_page.doc.cy.nodes.' + id);\n            return nodePath.get();\n        },\n\n        getModelEdge: function (id) {\n\n            var edgePath = model.at('_page.doc.cy.edges.' + id);\n\n            return edgePath.get();\n        },\n\n        selectModelNode: function (node, user, noHistUpdate) {\n\n            var nodePath = model.at('_page.doc.cy.nodes.' + node.id());\n            if (nodePath.get() == null)\n                return \"Node id not found\";\n\n            var userPath = model.at('_page.doc.users.' + user);\n            model.pass({user: user}).set('_page.doc.cy.nodes.' + node.id()+ '.highlightColor', userPath.get('colorCode'));\n\n\n            return \"success\";\n\n        },\n\n\n        selectModelEdge: function (edge, user,  noHistUpdate) {\n\n            var edgePath = model.at('_page.doc.cy.edges.' + edge.id());\n            if (edgePath.get() == null)\n                return \"Edge id not found\";\n            var userPath = model.at('_page.doc.users.' + user);\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edge.id()+ '.highlightColor', userPath.get('colorCode'));\n\n\n\n\n            return \"success\";\n\n        },\n        unselectModelNode: function (node,  user, noHistUpdate) {\n\n            var nodePath = model.at('_page.doc.cy.nodes.' + node.id());\n\n            if (nodePath.get() == null)\n                return \"Node id not found\";\n\n            model.pass({user: user}).set('_page.doc.cy.nodes.' + node.id() + '.highlightColor', null);\n\n            return \"success\";\n\n        },\n\n\n        unselectModelEdge: function (edge,  user, noHistUpdate) {\n\n            var edgePath = model.at('_page.doc.cy.edges.' + edge.id());\n            if (edgePath.get() == null)\n                return \"Edge id not found\";\n\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edge.id() + '.highlightColor', null);\n\n            return \"success\";\n\n\n        },\n\n\n        addModelNode: function (nodeId, param, user, noHistUpdate) {\n\n\n            if (model.get(\"_page.doc.cy.nodes.\" + nodeId + '.id') != null)\n                return \"Node cannot be duplicated\";\n\n            model.pass({user: user}).set('_page.doc.cy.nodes.' + nodeId + '.data.id', nodeId);\n            model.pass({user: user}).set('_page.doc.cy.nodes.' + nodeId + '.position', {x: param.x, y: param.y});\n            model.pass({user: user}).set('_page.doc.cy.nodes.' + nodeId + '.data.class', param.class);\n\n            //adding the node in cytoscape\n            model.pass({user: user}).set('_page.doc.cy.nodes.' + nodeId + '.addedLater', true);\n\n\n            if (!noHistUpdate)\n            //We don't want all the attributes of the param to be printed\n                this.updateHistory({\n                    opName: 'add',\n                    opTarget: 'element',\n                    elType: 'node',\n                    elId: nodeId,\n                    param: {x: param.x, y: param.y, class: param.class}\n                });\n\n\n            return \"success\";\n\n        },\n\n        addModelEdge: function (edgeId, param, user, noHistUpdate) {\n\n            if (model.get(\"_page.doc.cy.edges.\" + edgeId + '.id') != null)\n                return \"Edge cannot be duplicated\";\n\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edgeId + '.data.id', edgeId);\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edgeId + '.data.class', param.class);\n\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edgeId + '.data.source', param.source);\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edgeId + '.data.target', param.target);\n\n            //adding the edge...other operations should be called after this\n            model.pass({user: user}).set('_page.doc.cy.edges.' + edgeId + '.addedLater', true);\n\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'add', opTarget: 'element', elType: 'edge', elId: edgeId, param: param});\n\n            return \"success\";\n\n        },\n\n        /***\n         *\n         * @param compoundId : new compound's id\n         * @param compoundAtts: new compounds id, size, sbgnclass, position\n         * @param childrenList: in the format {id:, isNode} for do/undo\n         * @param prevParentList: children's old parents\n         * @param user\n         * @param noHistUpdate\n         */\n        addModelCompound: function (compoundId, compoundAtts, elList, paramList, user, noHistUpdate) {\n\n\n            var prevParentList = [];\n            paramList.forEach(function(param){\n                prevParentList.push(paramList.parent);\n            });\n            this.addModelNode(compoundId, compoundAtts, user, true);\n\n\n            this.changeModelElementGroupAttribute(\"data\", elList, paramList, user, true);\n\n\n\n            if (!noHistUpdate)\n                this.updateHistory({\n                    opName: 'add',\n                    opTarget: 'compound',\n                    elId: compoundId,\n                    param: {paramList: paramList, childrenList: elList, compoundAtts: compoundAtts},\n                    prevParam:  prevParentList //TODO\n                });\n\n        },\n\n        //change children's parents to their old parents\n        removeModelCompound: function (compoundId, childrenList, prevParentList, user, noHistUpdate) {\n\n            var nodePath = model.at('_page.doc.cy.nodes.' + compoundId);\n\n            var compoundAtts = {\n                id: compoundId,\n                class: nodePath.get('class'),\n                x: nodePath.get('position.x'),\n                y: nodePath.get('position.y')\n\n            };\n\n            var paramList = [];\n            childrenList.forEach(function(child){\n                var data = model.get('_page.doc.cy.nodes.'+child.id + '.data');\n                paramList.push(data);\n            });\n\n            //isolate the compound first, then delete\n            this.changeModelElementGroupAttribute(\"data.parent\", childrenList, prevParentList, user, true);\n            this.deleteModelNode(compoundId, user, true);\n\n\n\n\n            if (!noHistUpdate)\n                this.updateHistory({\n                    opName: 'delete',\n                    opTarget: 'compound',\n                    elId: compoundId,\n                    prevParam: {childrenList: childrenList, compoundAtts: compoundAtts, paramList: paramList},\n                    param: prevParentList\n                });\n\n        },\n\n\n\n        //attStr: attribute namein the model\n        //historyData is for  sbgnStatesAndInfos only\n        changeModelElementGroupAttribute: function (attStr, elList, paramList, user, noHistUpdate) { //historyData){\n\n            var prevParamList = [];\n            var self = this;\n\n            if (!noHistUpdate) {\n\n                elList.forEach(function (el) {\n\n                    var prevAttVal;\n                    if (el.isNode)\n                        prevAttVal = model.get('_page.doc.cy.nodes.' + el.id + '.' + attStr);\n                    else\n                        prevAttVal = model.get('_page.doc.cy.edges.' + el.id + '.' + attStr);\n\n\n                    prevParamList.push(prevAttVal);\n                });\n\n\n                this.updateHistory({\n                    opName: 'set',\n                    opTarget: 'element group',\n                    elId: elList,\n                    opAttr: attStr,\n                    param: paramList,\n                    prevParam: prevParamList\n                });\n\n            }\n\n            var ind = 0;\n            elList.forEach(function (el) {\n                var currAttVal = paramList[ind++];\n\n                if (el.isNode)\n                    self.changeModelNodeAttribute(attStr, el.id, currAttVal, user, true); //don't update individual histories\n                else\n                    self.changeModelEdgeAttribute(attStr, el.id, currAttVal, user, true);\n\n            });\n\n            return \"success\";\n\n        },\n\n        getModelNodeAttribute:function(attStr, nodeId){\n            var nodePath = model.at('_page.doc.cy.nodes.' + nodeId);\n\n            return nodePath.get(attStr);\n        },\n\n        getModelEdgeAttribute:function(attStr, edgeId){\n            var edgePath = model.at('_page.doc.cy.edges.' + edgeId);\n\n            return edgePath.get(attStr);\n        },\n        //attStr: attribute namein the model\n        //historyData is for  sbgnStatesAndInfos only\n        changeModelNodeAttribute: function (attStr, nodeId, attVal, user, noHistUpdate) { //historyData){\n\n            var status = \"Node id not found\";\n            var nodePath = model.at('_page.doc.cy.nodes.' + nodeId);\n\n\n            var prevAttVal = nodePath.get(attStr);\n\n\n            if(attStr === \"width\") //as we read this directly from cy.data\n                attStr = \"borderWidth\";\n\n\n\n            nodePath.pass({user: user}).set(attStr, attVal);\n\n\n            if (attStr == \"expandCollapseStatus\") {\n                if (attVal == \"expand\")\n                    prevAttVal = \"collapse\";\n                else //if null or collapse\n                    prevAttVal = \"expand\";\n            }\n\n\n\n            if (attStr != 'interactionCount') {\n                model.increment('_page.doc.cy.nodes.' + nodeId + '.interactionCount', 1);\n\n                if (!noHistUpdate) {\n\n                    this.updateHistory({\n                        opName: 'set',\n                        opTarget: 'element',\n                        elType: 'node',\n                        elId: nodeId,\n                        opAttr: attStr,\n                        param: attVal,\n                        prevParam: prevAttVal\n                    });\n                }\n            }\n            status = \"success\";\n\n\n            return status;\n\n        },\n\n\n        changeModelEdgeAttribute: function (attStr, edgeId, attVal, user, noHistUpdate) {\n            var status = \"Edge id not found\";\n            var edgePath = model.at('_page.doc.cy.edges.' + edgeId);\n            var prevAttVal = edgePath.get(attStr);\n            edgePath.pass({user: user}).set(attStr, attVal);\n\n\n            var sourceId = edgePath.get('source');\n            var targetId = edgePath.get('target');\n            if (sourceId)\n                model.increment('_page.doc.cy.nodes.' + sourceId + '.interactionCount', 1);\n            if (targetId)\n                model.increment('_page.doc.cy.nodes.' + targetId + '.interactionCount', 1);\n\n\n            if (!noHistUpdate) {\n\n                this.updateHistory({\n                    opName: 'set',\n                    opTarget: 'element',\n                    elType: 'edge',\n                    elId: edgeId,\n                    opAttr: attStr,\n                    param: attVal,\n                    prevParam: prevAttVal\n                });\n\n            }\n\n            status = \"success\";\n\n\n            return status;\n        },\n\n        //willUpdateHistory: Depending on the parent command, history will be updated or not\n        deleteModelNode: function (nodeId, user, noHistUpdate) {\n            var nodePath = model.at('_page.doc.cy.nodes.' + nodeId);\n\n            if (nodePath.get() == null)\n                return \"Node id not found\";\n\n            if (!noHistUpdate) {\n\n\n                prevParam = nodePath.get();\n\n                this.updateHistory({\n                    opName: 'delete',\n                    opTarget: 'element',\n                    elType: 'node',\n                    elId: nodeId,\n                    prevParam: prevParam\n                });\n\n            }\n\n            model.pass({user: user}).del(('_page.doc.cy.nodes.' + nodeId));\n\n\n            return \"success\";\n\n        },\n\n\n        deleteModelEdge: function (edgeId, user, noHistUpdate) {\n\n            var edgePath = model.at('_page.doc.cy.edges.' + edgeId);\n            if (edgePath.get() == null)\n                return \"Edge id not found\";\n\n\n            if (!noHistUpdate) {\n\n                prevParam = edgePath.get();\n\n                this.updateHistory({\n                    opName: 'delete',\n                    opTarget: 'element',\n                    elType: 'edge',\n                    elId: edgeId,\n                    prevParam: prevParam\n                });\n\n            }\n\n            model.pass({user: user}).del(('_page.doc.cy.edges.' + edgeId));\n\n            return \"success\";\n\n        },\n\n\n        deleteModelElementGroup: function (selectedEles, user, noHistUpdate) {\n            var prevParamsNodes = [];\n            var prevParamsEdges = [];\n            var self = this;\n\n\n            if(selectedEles.edges!= null){\n                selectedEles.edges.forEach(function (edge) {\n                    var edgePath = model.at('_page.doc.cy.edges.' + edge.id);\n                    prevParamsEdges.push(edgePath.get());\n                });\n\n\n                selectedEles.edges.forEach(function (edge) {\n                    self.deleteModelEdge(edge.id, user, true); //will not update children history\n                });\n            }\n\n            if(selectedEles.nodes!= null) {\n                selectedEles.nodes.forEach(function (node) {\n                    var nodePath = model.at('_page.doc.cy.nodes.' + node.id);\n\n                    prevParamsNodes.push(nodePath.get());\n                });\n\n\n                selectedEles.nodes.forEach(function (node) {\n                    self.deleteModelNode(node.id, user, true); //will not update children history\n                });\n            }\n            if (!noHistUpdate)\n                this.updateHistory({\n                    opName: 'delete',\n                    opTarget: 'element group',\n                    elId: selectedEles,\n                    prevParam: {nodes: prevParamsNodes, edges: prevParamsEdges}\n                });\n\n\n        },\n\n        restoreModelElementGroup: function (elList, param, user, noHistUpdate) {\n            var self = this;\n            //Restore nodes first\n\n            for (var i = 0; i < elList.nodes.length; i++) {\n                self.restoreModelNode(elList.nodes[i].id, param.nodes[i], user, true);\n            }\n\n            //restore edges later\n            for (var i = 0; i < elList.edges.length; i++) {\n                self.restoreModelEdge(elList.edges[i].id, param.edges[i], user, true);\n            }\n\n            //change parents after adding them all\n            for (var i = 0; i < elList.nodes.length; i++) {\n                self.changeModelNodeAttribute('parent', elList.nodes[i].id, param.nodes[i].parent, null, false);\n            }\n\n\n\n            if (!noHistUpdate)\n                self.updateHistory({opName: 'restore', opTarget: 'element group', elId: elList});\n        },\n        /**\n         * Restore operations for global undo/redo\n         */\n        restoreModelNode: function (nodeId, param, user, noHistUpdate) {\n\n            this.addModelNode(nodeId, {x: param.position.x, y: param.position.y, class:param.data.class}, user, noHistUpdate);\n\n            //No need to init -- data and position are updated in the next steps\n\n\n            for(att in param){\n                if(param.hasOwnProperty(att) && att !== \"addedLater\"){\n\n\n                    console.log(att);\n                    console.log(param[att]);\n\n\n                    console.log(user);\n                    model.pass({user:user}).set(('_page.doc.cy.nodes.' + nodeId + '.' + att), param[att]);\n                }\n            }\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'restore', opTarget: 'element', elType: 'node', elId: nodeId});\n        },\n\n        restoreModelEdge: function (edgeId, param, user, noHistUpdate) {\n\n            this.addModelEdge(edgeId, {source: param.data.source, target:param.data.target, class: param.data.class}, user, noHistUpdate);\n            //No need to init -- data and position are updated in the next steps\n\n\n            for(att in param){\n                if(param.hasOwnProperty(att) && att !== \"addedLater\"){\n                    model.pass({user:user}).set(('_page.doc.cy.edges.' + edgeId + '.' + att), param[att]);\n                }\n            }\n\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'restore', opTarget: 'element', elType: 'edge', elId: edgeId});\n        },\n\n\n        restoreModelElement: function (elType, elId, param, user, noHistUpdate) {\n\n            if (elType == \"node\")\n                this.restoreModelNode(elId, param, user, noHistUpdate);\n            else\n                this.restoreModelEdge(elId, param, user, noHistUpdate);\n\n\n        },\n\n\n        /**\n         * This function is used to undo newModel and redo initModel\n         * @param modelCy : nodes and edges to be restored\n         * @param user\n         * @param noHistUpdate\n         */\n        restoreModel: function (modelCy, user, noHistUpdate) {\n            var prevParam = model.get('_page.doc.cy');\n            model.set('_page.doc.cy', modelCy);\n\n            // this.setSampleInd(-1, null, true); //to get a new container\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'restore', prevParam: prevParam, param: modelCy, opTarget: 'model'});\n\n        },\n\n        //should be called before loading a new graph to prevent id confusion\n        newModel: function (user, noHistUpdate) {\n\n            var self = this;\n            var prevModelCy = model.get('_page.doc.cy');\n\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'new', prevParam: prevModelCy, opTarget: 'model'});\n\n            var edges = model.get('_page.doc.cy.edges');\n            var nodes = model.get('_page.doc.cy.nodes');\n\n\n            for (var att in edges) {\n                if (edges.hasOwnProperty(att)) {\n                    self.deleteModelEdge(edges[att].id, user, true);\n                }\n            }\n\n            for (var att in nodes) {\n                if (nodes.hasOwnProperty(att)) {\n                    self.deleteModelNode(nodes[att].id, user, true);\n                }\n            }\n\n\n        },\n\n\n        //should be called before loading a new graph to prevent id confusion\n        deleteAll: function (nodes, edges, user, noHistUpdate) {\n\n            var self = this;\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'new', opTarget: 'model'});\n\n\n            edges.forEach(function (edge) {\n                self.deleteModelEdge(edge.id(), user, noHistUpdate);\n            });\n\n            nodes.forEach(function (node) {\n                self.deleteModelNode(node.id(), user, noHistUpdate);\n            });\n\n\n        },\n\n        //convert model to array\n        getJsonFromModel: function () {\n\n            var nodes = model.get('_page.doc.cy.nodes');\n\n\n            if (nodes == null)\n                return null;\n\n            var edges = model.get('_page.doc.cy.edges');\n\n            var jsonNodes = [];\n            var jsonEdges = [];\n\n\n            for (var att in nodes) {\n\n                if (nodes.hasOwnProperty(att)) {\n                    var node = nodes[att];\n                    var jsonNode = {\n                        data: node.data\n                    };\n\n                    jsonNodes.push(jsonNode);\n                }\n            }\n\n\n            for (var att in edges) {\n                if (edges.hasOwnProperty(att)) {\n                    var edge = edges[att];\n\n                    var jsonEdge = {\n                        data: edge.data\n                    };\n\n                    jsonEdges.push(jsonEdge);\n                }\n            }\n\n\n            return {nodes: jsonNodes, edges: jsonEdges};\n\n\n    },\n\n\n        /***\n         *\n         * @param node: Cytoscape node\n         * @param user: to make sure we don't update the data of same client\n         * @param noHistUpdate\n         */\n        initModelNode: function (node, user, noHistUpdate) {\n\n\n            var nodePath = model.at('_page.doc.cy.nodes.' + node.id());\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'init', opTarget: 'element', elType: 'node', elId: node.id()});\n\n\n            nodePath.set('id', node.id());\n\n\n            var interactionCount = nodePath.get('interactionCount');\n\n            if (interactionCount == null) //this is not stored in cy\n                this.changeModelNodeAttribute('interactionCount', node.id(), 0, user, true); //don't update history\n\n            var data = nodePath.get('data');\n            //bbox is a random data parameter to make sure all data parts are already in the model\n            //if the only data parameters are id and class, it means it has just been added without initialization\n            if (data != null && data.bbox!=null) //it means data has been added before\n                node.data(data);\n\n            else\n                this.changeModelNodeAttribute('data', node.id(), node.data(), user, noHistUpdate);\n\n\n            //make this initially unselected\n        //    nodePath.set('highlightColor', null);\n\n\n            var pos = nodePath.get('position');\n            if (pos != null)\n                node.position(pos);\n\n            else\n                this.changeModelNodeAttribute('position', node.id(), node.position(), user, noHistUpdate);\n\n\n            //Initializing css properties causes bypass problems!!\n\n\n\n\n        },\n        initModelEdge: function (edge, user, noHistUpdate) {\n\n\n            var edgePath = model.at('_page.doc.cy.edges.' + edge.id());\n\n\n            if (!noHistUpdate)\n                this.updateHistory({opName: 'init', opTarget: 'element', elType: 'edge', elId: edge.id()});\n\n\n            edgePath.set('id', edge.id());\n\n\n\n            //make this initially unselected\n            //edgePath.set('highlightColor', null);\n\n            var data = edgePath.get('data');\n            //cardinality is a random data parameter to make sure all data parts are already in the model\n            //if the only data parameters are id and class, it means it has just been added without initialization\n            if (data != null && data.cardinality != null)\n                edge.data(data);\n\n            else\n                this.changeModelEdgeAttribute('data', edge.id(), edge.data(), user, noHistUpdate);\n\n\n\n\n        },\n\n\n\n\n        /***\n         *\n         * @param nodes: cy elements\n         * @param edges: cy elements\n         * @param appUtilities: to update properties\n         * @param user\n         * @param noHistUpdate\n         */\n        initModel: function ( nodes, edges, appUtilities, user, noHistUpdate) {\n\n            var self = this;\n\n            console.log(\"inited\");\n\n            nodes.forEach(function (node) {\n                self.initModelNode(node, user, true);\n\n            });\n\n            edges.forEach(function (edge) {\n                self.initModelEdge(edge, user, true);\n            });\n\n\n            var newModelCy = model.get('_page.doc.cy');\n\n\n            if(newModelCy) {\n                if (newModelCy.layoutProperties == null)\n                    model.set('_page.doc.cy.layoutProperties', _.clone(appUtilities.defaultLayoutProperties));\n\n                if (newModelCy.generalProperties == null)\n                    model.set('_page.doc.cy.generalProperties', _.clone(appUtilities.defaultGeneralProperties));\n\n                if (newModelCy.gridProperties == null)\n                    model.set('_page.doc.cy.gridProperties', _.clone(appUtilities.defaultGridProperties));\n            }\n\n\n            if (!noHistUpdate) {\n                this.updateHistory({opName: 'init', param: newModelCy, opTarget: 'model'});\n            }\n\n            //notifies other clients to update their cy graphs\n           model.pass({user:\"me\"}).set('_page.doc.cy.initTime', new Date());\n\n        },\n\n\n\n        setRollbackPoint: function () {\n            var modelCy = this.getModelCy();\n            model.set('_page.doc.prevCy', modelCy);\n        },\n\n        getModelCy: function () {\n            return model.get('_page.doc.cy');\n        },\n\n        //for undo/redo only\n        mergeJsons: function (user, noHistUpdate) {\n            var modelCy = model.get('_page.doc.cy');\n            var prevModelCy = model.get('_page.doc.prevCy');\n\n            if (!noHistUpdate) {\n\n                this.updateHistory({opName: 'merge', prevParam: prevModelCy, param: modelCy, opTarget: 'model'});\n            }\n\n        },\n\n        updateFactoidModel: function(factoidModel, user, noHistUpdate){\n            model.pass({user:user}).set('_page.doc.factoid', factoidModel);\n\n            if(!noHistUpdate){\n                var prevFactoidModel = model.get('_page.doc.factoid');\n                this.updateHistory({opName:'factoid',  prevParam: prevFactoidModel, param: factoidModel, opTarget:'model'});\n            }\n\n        },\n\n        getFactoidModel: function(){\n            return model.get('_page.doc.factoid');\n        }\n\n\n    }\n}","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n","/*\n * Copyright 2013 Memorial-Sloan Kettering Cancer Center.\n *\n * This file is part of PCViz.\n *\n * PCViz is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * PCViz is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with PCViz. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\nmodule.exports = function( model){\n\n\n    return{\n        el:'#idxCard-container',\n        render: function() {\n            // pass variables in using Underscore.js template\n            var variables = {\n                idxCards: model\n            };\n\n            // compile the template using underscore\n            var template = _.template( $(\"#idxCard-template\").html()); //funda\n\n            // load the compiled HTML into the Backbone \"el\"\n            $(this.el).html(template(variables));  //funda!!! has to be called like this\n\n\n\n            return this;\n        },\n\n\n    }\n};","/** The idxcardjson-to-ml-converter module translates an indexcard JSON from the Reach API into a JSON valid for viz. Its implementation is below.\n **/\n\n// Author: David Servillo.\n\n//Date of the last change: 07/08/2016\n\nmodule.exports = {\n\n    //Create the viz-compatible JSON\n    createJson: function(idxcardjsonObj) {\n        var jsonObj = {};\n        jsonObj.nodes = [];\n        jsonObj.edges = [];\n\n        var i;\n        for(i=0; i<idxcardjsonObj.cards.length; i++) {\n\n            //Create the first glyph\n            jsonObj.nodes.push({});\n            jsonObj.nodes[4*i].data = {};\n            jsonObj.nodes[4*i].data.id = \"ele\"+i+1;\n            jsonObj.nodes[4*i].data.class = \"macromolecule\";\n            jsonObj.nodes[4*i].data.bbox = {};\n            jsonObj.nodes[4*i].data.bbox.x = 585.7398209991329;\n            jsonObj.nodes[4*i].data.bbox.y = 585.7398209991329;\n            jsonObj.nodes[4*i].data.bbox.w = \"60.0\";\n            jsonObj.nodes[4*i].data.bbox.h = \"60.0\";\n            jsonObj.nodes[4*i].data.statesandinfos = [{}];\n            jsonObj.nodes[4*i].data.statesandinfos[0].bbox = {};\n            jsonObj.nodes[4*i].data.statesandinfos[0].bbox.x = -27.916666666666668;\n            jsonObj.nodes[4*i].data.statesandinfos[0].bbox.y = -27.916666666666668;\n            jsonObj.nodes[4*i].data.statesandinfos[0].bbox.w = \"53.0\";\n            jsonObj.nodes[4*i].data.statesandinfos[0].bbox.h = \"18.0\";\n            jsonObj.nodes[4*i].data.statesandinfos[0].id = \"ele\"+i+2;\n            jsonObj.nodes[4*i].data.statesandinfos[0].clazz = \"unit of information\";\n            jsonObj.nodes[4*i].data.statesandinfos[0].label = {};\n            jsonObj.nodes[4*i].data.statesandinfos[0].label.text = \"mt:prot\";\n            jsonObj.nodes[4*i].data.parent = \"\";\n            jsonObj.nodes[4*i].data.ports = [];\n\n            if('participant_a' in idxcardjsonObj.cards[i].extracted_information)\n                jsonObj.nodes[4*i].data.label = idxcardjsonObj.cards[i].extracted_information.participant_a.entity_text;\n            else\n                jsonObj.nodes[4*i].data.label = \"\";\n\n            //Create the second glyph\n            jsonObj.nodes.push({});\n            jsonObj.nodes[4*i+1].data = {};\n            jsonObj.nodes[4*i+1].data.id = \"ele\"+i+3;\n            jsonObj.nodes[4*i+1].data.class = \"macromolecule\";\n            jsonObj.nodes[4*i+1].data.bbox = {};\n            jsonObj.nodes[4*i+1].data.bbox.x = 585.7398209991329;\n            jsonObj.nodes[4*i+1].data.bbox.y = 585.7398209991329;\n            jsonObj.nodes[4*i+1].data.bbox.w = \"60.0\";\n            jsonObj.nodes[4*i+1].data.bbox.h = \"60.0\";\n            jsonObj.nodes[4*i+1].data.label = idxcardjsonObj.cards[i].extracted_information.participant_b.entity_text;\n            jsonObj.nodes[4*i+1].data.statesandinfos = [{}];\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].bbox = {};\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].bbox.x = -27.916666666666668;\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].bbox.y = -27.916666666666668;\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].bbox.w = \"53.0\";\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].bbox.h = \"18.0\";\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].id = \"ele\"+i+4;\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].clazz = \"unit of information\";\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].label = {};\n            jsonObj.nodes[4*i+1].data.statesandinfos[0].label.text = \"mt:prot\";\n            jsonObj.nodes[4*i+1].data.parent = \"\";\n            jsonObj.nodes[4*i+1].data.ports = [];\n\n            //Create the third glyph\n            jsonObj.nodes.push({});\n            jsonObj.nodes[4*i+2].data = {};\n            jsonObj.nodes[4*i+2].data.id = \"ele\"+i+5;\n            jsonObj.nodes[4*i+2].data.class = \"process\";\n            jsonObj.nodes[4*i+2].data.label = \"null\";\n            jsonObj.nodes[4*i+2].data.bbox = {};\n            jsonObj.nodes[4*i+2].data.bbox.x = 585.7398209991329;\n            jsonObj.nodes[4*i+2].data.bbox.y = 585.7398209991329;\n            jsonObj.nodes[4*i+2].data.bbox.w = \"20.0\";\n            jsonObj.nodes[4*i+2].data.bbox.h = \"20.0\";\n            jsonObj.nodes[4*i+2].data.parent = \"\";\n            jsonObj.nodes[4*i+2].data.ports = [];\n\n            //Create the fourth glyph\n            jsonObj.nodes.push({});\n            jsonObj.nodes[4*i+3].data = {};\n            jsonObj.nodes[4*i+3].data.id = \"ele\"+i+6;\n            jsonObj.nodes[4*i+3].data.class = \"source and sink\";\n            jsonObj.nodes[4*i+3].data.bbox = {};\n            jsonObj.nodes[4*i+3].data.bbox.x = 585.7398209991329;\n            jsonObj.nodes[4*i+3].data.bbox.y = 585.7398209991329;\n            jsonObj.nodes[4*i+3].data.bbox.w = \"20.0\";\n            jsonObj.nodes[4*i+3].data.bbox.h = \"20.0\";\n            jsonObj.nodes[4*i+3].data.parent = \"\";\n            jsonObj.nodes[4*i+3].data.ports = [];\n\n            //Create the first arc\n            jsonObj.edges.push({});\n            jsonObj.edges[3*i].data = {};\n            jsonObj.edges[3*i].data.id = jsonObj.nodes[4*i+3].data.id + \"-\" + jsonObj.nodes[4*i+2].data.id;\n            jsonObj.edges[3*i].data.class = \"consumption\";\n            jsonObj.edges[3*i].data.bendPointPositions = [];\n            jsonObj.edges[3*i].data.cardinality = 0;\n            jsonObj.edges[3*i].data.source = jsonObj.nodes[4*i+3].data.id;\n            jsonObj.edges[3*i].data.target = jsonObj.nodes[4*i+2].data.id;\n            jsonObj.edges[3*i].data.portsource = jsonObj.nodes[4*i+3].data.id;\n            jsonObj.edges[3*i].data.porttarget = jsonObj.nodes[4*i+2].data.id;\n\n            //Create the second arc\n            jsonObj.edges.push({});\n            jsonObj.edges[3*i+1].data = {};\n            jsonObj.edges[3*i+1].data.id = jsonObj.nodes[4*i+2].data.id + \"-\" + jsonObj.nodes[4*i+1].data.id;\n            jsonObj.edges[3*i+1].data.class = \"production\";\n            jsonObj.edges[3*i+1].data.bendPointPositions = [];\n            jsonObj.edges[3*i+1].data.cardinality = 0;\n            jsonObj.edges[3*i+1].data.source = jsonObj.nodes[4*i+2].data.id;\n            jsonObj.edges[3*i+1].data.target = jsonObj.nodes[4*i+1].data.id;\n            jsonObj.edges[3*i+1].data.portsource = jsonObj.nodes[4*i+2].data.id;\n            jsonObj.edges[3*i+1].data.porttarget = jsonObj.nodes[4*i+1].data.id;\n\n            //Create the third arc\n            jsonObj.edges.push({});\n            jsonObj.edges[3*i+2].data = {};\n            jsonObj.edges[3*i+2].data.id = jsonObj.nodes[4*i].data.id + \"-\" + jsonObj.nodes[4*i+2].data.id;\n            jsonObj.edges[3*i+2].data.bendPointPositions = [];\n            jsonObj.edges[3*i+2].data.cardinality = 0;\n            jsonObj.edges[3*i+2].data.source = jsonObj.nodes[4*i].data.id;\n            jsonObj.edges[3*i+2].data.target = jsonObj.nodes[4*i+2].data.id;\n            jsonObj.edges[3*i+2].data.portsource = jsonObj.nodes[4*i].data.id;\n            jsonObj.edges[3*i+2].data.porttarget = jsonObj.nodes[4*i+2].data.id;\n\n            if(idxcardjsonObj.cards[i].extracted_information.interaction_type == \"increases_activity\")  //The interaction is a type of stimulation.\n                jsonObj.edges[3*i+2].data.class = \"stimulation\";\n\n            if(idxcardjsonObj.cards[i].extracted_information.interaction_type == \"decreases_activity\")  //The interaction is a type of inhibition.\n                jsonObj.edges[3*i+2].data.class = \"inhibition\";\n\n            if(idxcardjsonObj.cards[i].extracted_information.interaction_type == \"adds_modification\") { //The interaction is a chemical modification\n                jsonObj.edges[3*i+2].data.class = \"stimulation\";\n\n                //That glyph is not a \"source and sink\" glyph anymore, but a macromolecule\n                jsonObj.nodes[4*i+3].data.class = \"macromolecule\";\n                jsonObj.nodes[4*i+3].data.label = idxcardjsonObj.cards[i].extracted_information.participant_b.entity_text;\n                jsonObj.nodes[4*i+3].data.statesandinfos = [{}];\n                jsonObj.nodes[4*i+3].data.bbox.w = \"60.0\";\n                jsonObj.nodes[4*i+3].data.bbox.h = \"60.0\";\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].id = \"ele\"+i+8;\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].clazz = \"unit of information\";\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].label = {};\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].label.text = \"mt:prot\";\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].bbox = {};\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].bbox.x = -27.916666666666668;\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].bbox.y = -27.916666666666668;\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].bbox.w = \"53.0\";\n                jsonObj.nodes[4*i+3].data.statesandinfos[0].bbox.h = \"18.0\";\n                jsonObj.nodes[4*i+3].data.parent = \"\";\n                jsonObj.nodes[4*i+3].data.ports = [];\n\n                var j;\n                for(j=0; j<idxcardjsonObj.cards[i].extracted_information.modifications.length; j++) {\n\n                    //Add a state variable resulting from the interaction\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"acetylation\") {  //The interaction is an acetylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"Ac\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"glycosylation\") {  //The interaction is a glycosylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"G\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"hydroxylation\") {  //The interaction is a hydroxylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"OH\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"methylation\") {  //The interaction is a methylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"Me\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"myristoylation\") {  //The interaction is a myristoylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"My\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"palmytoylation\") {  //The interaction is a palmytoylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"Pa\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"phosphorylation\") {  //The interaction is a phosphorylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"P\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"prenylation\") {  //The interaction is a prenylation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"Pr\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"protonation\") {  //The interaction is a protonation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"H\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"sulfation\") {  //The interaction is a sulfation\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"S\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                    if(idxcardjsonObj.cards[i].extracted_information.modifications[j].modification_type == \"ubiquitination\") {  //The interaction is a ubiquitination\n                        jsonObj.nodes[4*i+1].data.statesandinfos.push({});\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].id = \"ele\"+i+7;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].clazz = \"state variable\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].state.value = \"Ub\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox = {};\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.x = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.y = -27.0;\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.w = \"53.0\";\n                        jsonObj.nodes[4*i+1].data.statesandinfos[j+1].bbox.h = \"18.0\";\n                    }\n                }\n            }\n        }\n        return jsonObj;\n    }\n};","/** The json-merger module merges two JSON models into one. Such a process requires the consistency of the node ids. The strategy of the action lies in the comparison only of the edges between the two jsons, such that nodes which do not take part in an edge are not considered and may or not appear in the result of the merge. This last point needs to be revised in a potential update. The implementation is below.\n **/\n\n//Author: David Servillo.\n\n//Date of the last change: 12/23/2016.\n\nmodule.exports = {\n\n    //Merge two JSON models.\n    merge: function(json1, json2) {\n        var jsonToMerge;\n        var nodepositions1 = {};\n        var container1 = {};\n        var i;\n        //Rename the identifiers under the form glyphN where N is an integer. The identifiers between the two jsons\n        //are consistent so no identifiers is repeated.\n        for(i=0; i<json1.nodes.length; i++)\n            nodepositions1[json1.nodes[i].data.id] = i;\n\n        jsonToMerge = JSON.parse(JSON.stringify(json1));\n\n        //Identify and store the container nodes, which are nodes able to contain other nodes in it.\n        //Store the content of the containers as well.\n        for(i=0; i<json1.nodes.length; i++) {\n            if(json1.nodes[i].data.parent != \"\") {\n                if(container1[json1.nodes[i].data.parent] === undefined)\n                    container1[json1.nodes[i].data.parent] = [json1.nodes[i].data.id];\n                else\n                    container1[json1.nodes[i].data.parent].push(json1.nodes[i].data.id);\n            }\n        }\n\n        var j = -1;\n        var edgepositions1 = {};\n        var outcompsource1 = {};\n        var outcomptarget1 = {};\n        //Identify the nodes in containers and which connect to other nodes out of the containers.\n        //Store their neighbors as well.\n        for(i=0; i< json1.edges.length; i++) {\n            edgepositions1[json1.edges[i].data.id] = i;\n            if(json1.nodes[nodepositions1[json1.edges[i].data.source]].data.parent != \"\" && json1.nodes[nodepositions1[json1.edges[i].data.target]].data.parent == \"\") {\n                if(outcompsource1[json1.edges[i].data.source] === undefined)\n                    outcompsource1[json1.edges[i].data.source] = [json1.edges[i].data.target];\n                else\n                    outcompsource1[json1.edges[i].data.source].push(json1.edges[i].data.target);\n            }\n            if(json1.nodes[nodepositions1[json1.edges[i].data.target]].data.parent != \"\" && json1.nodes[nodepositions1[json1.edges[i].data.source]].data.parent == \"\") {\n                if(outcomptarget1[json1.edges[i].data.target] === undefined)\n                    outcomptarget1[json1.edges[i].data.target] = [json1.edges[i].data.source];\n                else\n                    outcomptarget1[json1.edges[i].data.target].push(json1.edges[i].data.source);\n            }\n        }\n\n        //Create an edge between the container and its content's neighbors lying outside of the container.\n        //This will be useful in the comparison step, as it only compares edges\n        //and thus can't compare lonely nodes not involved in an edge (like a compartment).\n        //Here, the source is the container and the target the neighbors.\n        outcompsourcekeys = Object.keys(outcompsource1);\n        for(i=0; i<outcompsourcekeys.length; i++) {\n            for(j=0; j<outcompsource1[outcompsourcekeys[i]].length; j++) {\n                json1.edges.push({});\n                json1.edges[json1.edges.length - 1].data = {};\n                json1.edges[json1.edges.length - 1].data.id = json1.nodes[nodepositions1[outcompsourcekeys[i]]].data.parent+'-'+json1.nodes[nodepositions1[outcompsource1[outcompsourcekeys[i]][j]]].data.id;\n                json1.edges[json1.edges.length - 1].data.bendPointPositions = [];\n                json1.edges[json1.edges.length - 1].data.cardinality = 0;\n                json1.edges[json1.edges.length - 1].data.source = json1.nodes[nodepositions1[outcompsourcekeys[i]]].data.parent;\n                json1.edges[json1.edges.length - 1].data.target = json1.nodes[nodepositions1[outcompsource1[outcompsourcekeys[i]][j]]].data.id;\n                json1.edges[json1.edges.length - 1].data.portsource = json1.edges[json1.edges.length - 1].data.source;\n                json1.edges[json1.edges.length - 1].data.porttarget = json1.edges[json1.edges.length - 1].data.target;\n                json1.edges[json1.edges.length - 1].data.toBeRemoved = \"\";\n            }\n        }\n\n        //Create an edge between the container and its content's neighbors lying outside of the container.\n        //This will be useful in the comparison step, as it only compares edges\n        //and thus can't compare lonely nodes not involved in an edge (like a compartment).\n        //Here, the target is the container and the source the neighbors.\n        outcomptargetkeys = Object.keys(outcomptarget1);\n        for(i=0; i<outcomptargetkeys.length; i++) {\n            for(j=0; j<outcomptarget1[outcomptargetkeys[i]].length; j++) {\n                json1.edges.push({});\n                json1.edges[json1.edges.length - 1].data = {};\n                json1.edges[json1.edges.length - 1].data.id = json1.nodes[nodepositions1[outcomptarget1[outcomptargetkeys[i]][j]]].data.id+'-'+json1.nodes[nodepositions1[outcomptargetkeys[i]]].data.parent;\n                json1.edges[json1.edges.length - 1].data.bendPointPositions = [];\n                json1.edges[json1.edges.length - 1].data.cardinality = 0;\n                json1.edges[json1.edges.length - 1].data.source = json1.nodes[nodepositions1[outcomptarget1[outcomptargetkeys[i]][j]]].data.id;\n                json1.edges[json1.edges.length - 1].data.target = json1.nodes[nodepositions1[outcomptargetkeys[i]]].data.parent;\n                json1.edges[json1.edges.length - 1].data.portsource = json1.edges[json1.edges.length - 1].data.source;\n                json1.edges[json1.edges.length - 1].data.porttarget = json1.edges[json1.edges.length - 1].data.target;\n                json1.edges[json1.edges.length - 1].data.toBeRemoved = \"\";\n            }\n        }\n\n        var jsnString2 = JSON.stringify(json2);\n        var maxj = json1.nodes.length;\n        var nodepositions2 = {};\n        var container2 = {};\n        //Rename the identifiers under the form glyphN where N is an integer. The identifiers between the two jsons\n        //are consistent so no identifiers is repeated.\n        for(i=0; i<json2.nodes.length; i++) {\n            maxj = maxj + 1;\n            nodepositions2[\"glyph\"+maxj] = i;\n\n            jsnString2 = jsnString2.replace(new RegExp('\"glyph'+maxj+'\"', \"g\"), '');\n            jsnString2 = jsnString2.replace(new RegExp('\"'+json2.nodes[i].data.id+'\"', \"g\"), '\"glyph'+maxj+'\"');\n            jsnString2 = jsnString2.replace(new RegExp(':,\"', \"g\"), ':\"'+json2.nodes[i].data.id+'\",\"');\n            jsnString2 = jsnString2.replace(new RegExp(':}', \"g\"), ':\"'+json2.nodes[i].data.id+'\"}');\n\n            jsnString2 = jsnString2.replace(new RegExp('\"glyph'+maxj+'-', \"g\"), '\"-');\n            jsnString2 = jsnString2.replace(new RegExp('\"'+json2.nodes[i].data.id+'-', \"g\"), '\"glyph'+maxj+'-');\n            jsnString2 = jsnString2.replace(new RegExp(':\"-', \"g\"), ':\"'+json2.nodes[i].data.id+'-');\n\n            jsnString2 = jsnString2.replace(new RegExp('-glyph'+maxj+'\"', \"g\"), '-');\n            jsnString2 = jsnString2.replace(new RegExp('-'+json2.nodes[i].data.id+'\"', \"g\"), '-glyph'+maxj+'\"');\n            jsnString2 = jsnString2.replace(new RegExp('-,\"', \"g\"), '-'+json2.nodes[i].data.id+'\",\"');\n\n            json2 = JSON.parse(jsnString2);\n        }\n\n        //Identify and store the container nodes, which are nodes able to contain other nodes in it.\n        //Store the content of the containers as well.\n        for(i=0; i<json2.nodes.length; i++) {\n            if(json2.nodes[i].data.parent != \"\") {\n                if(container2[json2.nodes[i].data.parent] === undefined)\n                    container2[json2.nodes[i].data.parent] = [json2.nodes[i].data.id];\n                else\n                    container2[json2.nodes[i].data.parent].push(json2.nodes[i].data.id);\n            }\n        }\n\n        var edgepositions2 = {};\n        var outcompsource2 = {};\n        var outcomptarget2 = {};\n        //Identify the nodes in containers and which connect to other nodes out of the containers.\n        //Store their neighbors as well.\n        for(i=0; i< json2.edges.length; i++) {\n            edgepositions2[json2.edges[i].data.id] = i;\n            if(json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent != \"\" && json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent == \"\") {\n                if(outcompsource2[json2.edges[i].data.source] === undefined)\n                    outcompsource2[json2.edges[i].data.source] = [json2.edges[i].data.target];\n                else\n                    outcompsource2[json2.edges[i].data.source].push(json2.edges[i].data.target);\n            }\n            if(json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent != \"\" && json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent == \"\") {\n                if(outcomptarget2[json2.edges[i].data.target] === undefined)\n                    outcomptarget2[json2.edges[i].data.target] = [json2.edges[i].data.source];\n                else\n                    outcomptarget2[json2.edges[i].data.target].push(json2.edges[i].data.source);\n            }\n        }\n\n        //Create an edge between the container and its content's neighbors lying outside of the container.\n        //This will be useful in the comparison step, as it only compares edges\n        //and thus can't compare lonely nodes not involved in an edge (like a compartment).\n        //Here, the source is the container and the target the neighbors.\n        outcompsourcekeys = Object.keys(outcompsource2);\n        for(i=0; i<outcompsourcekeys.length; i++) {\n            for(j=0; j<outcompsource2[outcompsourcekeys[i]].length; j++) {\n                json2.edges.push({});\n                json2.edges[json2.edges.length - 1].data = {};\n                json2.edges[json2.edges.length - 1].data.id = json2.nodes[nodepositions2[outcompsourcekeys[i]]].data.parent+'-'+json2.nodes[nodepositions2[outcompsource2[outcompsourcekeys[i]][j]]].data.id;\n                json2.edges[json2.edges.length - 1].data.bendPointPositions = [];\n                json2.edges[json2.edges.length - 1].data.cardinality = 0;\n                json2.edges[json2.edges.length - 1].data.source = json2.nodes[nodepositions2[outcompsourcekeys[i]]].data.parent;\n                json2.edges[json2.edges.length - 1].data.target = json2.nodes[nodepositions2[outcompsource2[outcompsourcekeys[i]][j]]].data.id;\n                json2.edges[json2.edges.length - 1].data.portsource = json2.edges[json2.edges.length - 1].data.source;\n                json2.edges[json2.edges.length - 1].data.porttarget = json2.edges[json2.edges.length - 1].data.target;\n                json2.edges[json2.edges.length - 1].data.toBeRemoved = \"\";\n            }\n        }\n\n        //Create an edge between the container and its content's neighbors lying outside of the container.\n        //This will be useful in the comparison step, as it only compares edges\n        //and thus can't compare lonely nodes not involved in an edge (like a compartment).\n        //Here, the target is the container and the source the neighbors.\n        outcomptargetkeys = Object.keys(outcomptarget2);\n        for(i=0; i<outcomptargetkeys.length; i++) {\n            for(j=0; j<outcomptarget2[outcomptargetkeys[i]].length; j++) {\n                json2.edges.push({});\n                json2.edges[json2.edges.length - 1].data = {};\n                json2.edges[json2.edges.length - 1].data.id = json2.nodes[nodepositions2[outcomptarget2[outcomptargetkeys[i]][j]]].data.id+'-'+json2.nodes[nodepositions2[outcomptargetkeys[i]]].data.parent;\n                json2.edges[json2.edges.length - 1].data.bendPointPositions = [];\n                json2.edges[json2.edges.length - 1].data.cardinality = 0;\n                json2.edges[json2.edges.length - 1].data.source = json2.nodes[nodepositions2[outcomptarget2[outcomptargetkeys[i]][j]]].data.id;\n                json2.edges[json2.edges.length - 1].data.target = json2.nodes[nodepositions2[outcomptargetkeys[i]]].data.parent;\n                json2.edges[json2.edges.length - 1].data.portsource = json2.edges[json2.edges.length - 1].data.source;\n                json2.edges[json2.edges.length - 1].data.porttarget = json2.edges[json2.edges.length - 1].data.target;\n                json2.edges[json2.edges.length - 1].data.toBeRemoved = \"\";\n            }\n        }\n\n        var jsn = {\"nodes\": [], \"edges\": []};\n\n        jsn.nodes = jsn.nodes.concat(JSON.parse(JSON.stringify(json1)).nodes);\n        jsn.edges = jsn.edges.concat(JSON.parse(JSON.stringify(json1)).edges);\n\n//******************************************************************************************\n//\t\t\t\t\t\t\t\t\t\tCaution !\n//\n//Start of the comparison step: it compares the edges (source, target and type of interaction)\n//of the smallest json with the biggest one.\n//When a match is found the edge of the smallest json is not added in the final one.\n//******************************************************************************************\n\n        var k;\n        var l;\n        var count1;\n        var count2;\n        var found1;\n        var found2;\n        var found4;\n        var found5;\n        var match1;\n        var match2;\n        var backward1;\n        var backward2;\n        var goodmatch;\n        var sharednodes = [];\n\n        for(i=0; i<json2.edges.length; i++) {\n            goodmatch = 0;\n            count1 = 0;\n            count2 = 0;\n            found1 = json1.edges.length + 1;\n            found2 = 2*(json1.edges.length + 1);\n            found4 = 0;\n            found5 = 0;\n            match1 = found1;\n            match2 = found2;\n            j = 0;\n            while((match1 != match2 || backward1 || backward2) && j<json1.edges.length) {\n                backward1 = 1;\n                backward2 = 1;\n\n//********************************************************************************\n//source: is there the same source node in the other json ?\n//********************************************************************************\n\n                //The source of the edge in the smallest json is a container and has a label.\n                if(container2[json2.edges[i].data.source] !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label != \"null\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found1 = j + 1;\n                        match1 = found1;\n                        backward1 = 0;\n                    }\n                    //The source of the edge in the smallest json is a container and has no label.\n                } else if(container2[json2.edges[i].data.source] !== undefined && container1[json1.edges[j].data.source] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.edges[i].data.source, json1.edges[j].data.source, nodepositions2, nodepositions1, container2, container1)) {\n                        found1 = j + 1;\n                        match1 = found1;\n                        backward1 = 0;\n                    }\n                    //The container in which lies the source of the edge in the smallest json has a label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent] !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent]].data.label !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent]].data.label != \"null\" && json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent != \"\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent = json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent;  //The container is found.\n                        if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                            found1 = j + 1;\n                            match1 = found1;\n                            backward1 = 0;\n                        }\n                    }\n                    //The container in which lies the source of the edge in the smallest json and has no label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent] !== undefined && container1[json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent, json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent, nodepositions2, nodepositions1, container2, container1)) {\n                        found1 = edgepositions1[json1.edges[j].data.id] + 1;\n                        match1 = found1;\n                        backward1 = 0;\n                    }\n                    //The node is a regular node, without a container.\n                } else {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found1 = j + 1;\n                        match1 = found1;\n                        backward1 = 0;\n                        if(json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label === undefined || json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label == \"null\") {\n                            found1 = 0;\n                        }\n                    }\n                }\n\n//********************************************************************************\n//target: is there the same target node in the other json ?\n//********************************************************************************\n\n                //The target of the edge in the smallest json is a container and has a label.\n                if(container2[json2.edges[i].data.target] !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label != \"null\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found2 = j + 1;\n                        match2 = found2;\n                        backward2 = 0;\n                    }\n                    //The target of the edge in the smallest json is a container and has no label.\n                } else if(container2[json2.edges[i].data.target] !== undefined && container1[json1.edges[j].data.target] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.edges[i].data.target, json1.edges[j].data.target, nodepositions2, nodepositions1, container2, container1)) {\n                        found2 = j + 1;\n                        match2 = found2;\n                        backward2 = 0;\n                    }\n                    //The container in which lies the target of the edge in the smallest json has a label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent] !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent]].data.label !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent]].data.label != \"null\" && json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent != \"\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent = json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent;  //The container is found.\n                        if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                            found2 = j + 1;\n                            match2 = found2;\n                            backward2 = 0;\n                        }\n                    }\n                    //The container in which lies the target of the edge in the smallest json and has no label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent] !== undefined && container1[json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent, json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent, nodepositions2, nodepositions1, container2, container1)) {\n                        found2 = edgepositions1[json1.edges[j].data.id] + 1;\n                        match2 = found2;\n                        backward2 = 0;\n                    }\n                    //The node is a regular node, without a container.\n                } else {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found2 = j + 1;\n                        match2 = found2;\n                        backward2 = 0;\n                        if(json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label === undefined || json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label == \"null\") {\n                            found2 = 0;\n                        }\n                    }\n                }\n\n//********************************************************************************\n//source: is there the same node (as a target this time !) in the other json ?\n//********************************************************************************\n\n                //The source of the edge in the smallest json is a container and has a label.\n                if(container2[json2.edges[i].data.source] !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label != \"null\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found4 = j + 1;\n                        match1 = found4;\n                        backward1 = 1;\n                    }\n                    //The source of the edge in the smallest json is a container and has no label.\n                } else if(container2[json2.edges[i].data.source] !== undefined && container1[json1.edges[j].data.target] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.edges[i].data.source, json1.edges[j].data.target, nodepositions2, nodepositions1, container2, container1)) {\n                        found4 = j + 1;\n                        match1 = found4;\n                        backward1 = 1;\n                    }\n                    //The container in which lies the source of the edge in the smallest json has a label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent] !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent]].data.label !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent]].data.label != \"null\" && json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent != \"\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent = json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent;  //The container is found.\n                        if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                            found4 = j + 1;\n                            match1 = found4;\n                            backward1 = 1;\n                        }\n                    }\n                    //The container in which lies the source of the edge in the smallest json and has no label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent] !== undefined && container1[json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.nodes[nodepositions2[json2.edges[i].data.source]].data.parent, json1.nodes[nodepositions1[json1.edges[j].data.target]].data.parent, nodepositions2, nodepositions1, container2, container1)) {\n                        found4 = edgepositions1[json1.edges[j].data.id] + 1;\n                        match1 = found4;\n                        backward1 = 1;\n                    }\n                    //The node is a regular node, without a container.\n                } else {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found4 = j + 1;\n                        match1 = found4;\n                        backward1 = 1;\n                        if(json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label === undefined || json2.nodes[nodepositions2[json2.edges[i].data.source]].data.label == \"null\") {\n                            found4 = 0;\n                        }\n                    }\n                }\n\n//********************************************************************************\n//target: is there the same node (as a source this time !) in the other json ?\n//********************************************************************************\n\n                //The target of the edge in the smallest json is a container and has a label.\n                if(container2[json2.edges[i].data.target] !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label !== undefined && json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label != \"null\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found5 = j + 1;\n                        match2 = found5;\n                        backward2 = 1;\n                    }\n                    //The target of the edge in the smallest json is a container and has no label.\n                } else if(container2[json2.edges[i].data.target] !== undefined && container1[json1.edges[j].data.source] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.edges[i].data.target, json1.edges[j].data.source, nodepositions2, nodepositions1, container2, container1)) {\n                        found5 = j + 1;\n                        match2 = found5;\n                        backward2 = 1;\n                    }\n                    //The container in which lies the target of the edge in the smallest json has a label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent] !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent]].data.label !== undefined && json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent]].data.label != \"null\" && json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent != \"\") {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent = json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent; //The container is found.\n                        if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                            found5 = j + 1;\n                            match2 = found5;\n                            backward2 = 1;\n                        }\n                    }\n                    //The container in which lies the target of the edge in the smallest json and has no label.\n                } else if(container2[json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent] !== undefined && container1[json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent] !== undefined) {\n                    //Compare the two containers.\n                    if(this.sameInnerNodes(json2, json1, json2.nodes[nodepositions2[json2.edges[i].data.target]].data.parent, json1.nodes[nodepositions1[json1.edges[j].data.source]].data.parent, nodepositions2, nodepositions1, container2, container1)) {\n                        found5 = edgepositions1[json1.edges[j].data.id] + 1;\n                        match2 = found5;\n                        backward2 = 1;\n                    }\n                    //The node is a regular node, without a container.\n                } else {\n                    if(JSON.stringify(json2.nodes[nodepositions2[json2.edges[i].data.target]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(json1.nodes[nodepositions1[json1.edges[j].data.source]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                        found5 = j + 1;\n                        match2 = found5;\n                        backward2 = 1;\n                        if(json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label === undefined || json2.nodes[nodepositions2[json2.edges[i].data.target]].data.label == \"null\") {\n                            found5 = 0;\n                        }\n                    }\n                }\n\n                if(match1 == match2)\n                    goodmatch = match1;\n\n                j = j + 1;\n            }\n\n//******************************************************************************************\n//End of the comparison step.\n//******************************************************************************************\n\n            //The target node is not in json1, then add it to the final json.\n            if(found1%(json1.edges.length + 1) != 0 && found2%(json1.edges.length + 1) == 0 && !found4 && !found5) {\n                //The node may be a container with multiple sub-levels of containers in it.\n                this.addInnerNodes(json2, jsn, container2, nodepositions2, json2.edges[i].data.target);\n\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.source = json1.edges[found1 - 1].data.source;\n                jsn.edges[jsn.edges.length - 1].data.portsource = json1.edges[found1 - 1].data.portsource;\n\n                sharednodes.push(json1.edges[found1 - 1].data.source);\n            }\n\n            //The source node is not in json1, then add it to the final json.\n            if(found1%(json1.edges.length + 1) == 0 && found2%(json1.edges.length + 1) != 0 && !found4 && !found5) {\n                //The node may be a container with multiple sub-levels of containers in it.\n                this.addInnerNodes(json2, jsn, container2, nodepositions2, json2.edges[i].data.source);\n\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.target = json1.edges[found2 - 1].data.target;\n                jsn.edges[jsn.edges.length - 1].data.porttarget = json1.edges[found2 - 1].data.porttarget;\n\n                sharednodes.push(json1.edges[found2 - 1].data.target);\n            }\n\n            //The target node is not in json1, then add it to the final json.\n            if(found1%(json1.edges.length + 1) == 0 && found2%(json1.edges.length + 1) == 0 && found4 && !found5) {\n                //The node may be a container with multiple sub-levels of containers in it.\n                this.addInnerNodes(json2, jsn, container2, nodepositions2, json2.edges[i].data.target);\n\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.source = json1.edges[found4 - 1].data.target;\n                jsn.edges[jsn.edges.length - 1].data.portsource = json1.edges[found4 - 1].data.porttarget;\n\n                sharednodes.push(json1.edges[found4 - 1].data.target);\n            }\n\n            //The source node is not in json1, then add it to the final json.\n            if(found1%(json1.edges.length + 1) == 0 && found2%(json1.edges.length + 1) == 0 && !found4 && found5) {\n                //The node may be a container with multiple sub-levels of containers in it.\n                this.addInnerNodes(json2, jsn, container2, nodepositions2, json2.edges[i].data.source);\n\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.target = json1.edges[found5 - 1].data.source;\n                jsn.edges[jsn.edges.length - 1].data.porttarget = json1.edges[found5 - 1].data.portsource;\n\n                sharednodes.push(json1.edges[found5 - 1].data.source);\n            }\n\n            //Neither the target node nor the source node are in json1, then add all the edge.\n            if(found1%(json1.edges.length + 1) == 0 && found2%(json1.edges.length + 1) == 0 && !found4 & !found5) {\n                //The node may be a container with multiple sub-levels of containers in it.\n                this.addInnerNodes(json2, jsn, container2, nodepositions2, json2.edges[i].data.source);\n\n                //The node may be a container with multiple sub-levels of containers in it.\n                this.addInnerNodes(json2, jsn, container2, nodepositions2, json2.edges[i].data.target);\n\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n            }\n\n            //Both the target node and the source node are in json1. Only add the interaction type of the edge.\n            if(found1%(json1.edges.length + 1) != 0 && found2%(json1.edges.length + 1) != 0) {\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.source = json1.edges[found1 - 1].data.source;\n                jsn.edges[jsn.edges.length - 1].data.portsource = json1.edges[found1 - 1].data.portsource;\n\n                sharednodes.push(json1.edges[found1 - 1].data.source);\n\n                jsn.edges[jsn.edges.length - 1].data.target = json1.edges[found2 - 1].data.target;\n                jsn.edges[jsn.edges.length - 1].data.porttarget = json1.edges[found2 - 1].data.porttarget;\n\n                sharednodes.push(json1.edges[found2 - 1].data.target);\n\n                //Both the target node and the source node are in json1. Only add the interaction type of the edge.\n            } else if(found4 && found5) {\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.source = json1.edges[found4 - 1].data.target;\n                jsn.edges[jsn.edges.length - 1].data.portsource = json1.edges[found4 - 1].data.porttarget;\n\n                sharednodes.push(json1.edges[found4 - 1].data.target);\n\n                jsn.edges[jsn.edges.length - 1].data.target = json1.edges[found5 - 1].data.source;\n                jsn.edges[jsn.edges.length - 1].data.porttarget = json1.edges[found5 - 1].data.portsource;\n\n                sharednodes.push(json1.edges[found5 - 1].data.source);\n            }\n\n            //Both the target node and the source node are in json1. Only add the interaction type of the edge.\n            if(found1%(json1.edges.length + 1) != 0 && found2%(json1.edges.length + 1) == 0 && !found4 && found5) {\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.source = json1.edges[found1 - 1].data.source;\n                jsn.edges[jsn.edges.length - 1].data.portsource = json1.edges[found1 - 1].data.portsource;\n\n                sharednodes.push(json1.edges[found1 - 1].data.source);\n\n                jsn.edges[jsn.edges.length - 1].data.target = json1.edges[found5 - 1].data.source;\n                jsn.edges[jsn.edges.length - 1].data.porttarget = json1.edges[found5 - 1].data.portsource;\n\n                sharednodes.push(json1.edges[found5 - 1].data.source);\n            }\n\n            //Both the target node and the source node are in json1. Only add the interaction type of the edge.\n            if(found1%(json1.edges.length + 1) == 0 && found2%(json1.edges.length + 1) != 0 && found4 && !found5) {\n                jsn.edges.push(JSON.parse(JSON.stringify(json2.edges[i])));\n                jsn.edges[jsn.edges.length - 1].data.source = json1.edges[found4 - 1].data.target;\n                jsn.edges[jsn.edges.length - 1].data.portsource = json1.edges[found4 - 1].data.porttarget;\n\n                sharednodes.push(json1.edges[found4 - 1].data.target);\n\n                jsn.edges[jsn.edges.length - 1].data.target = json1.edges[found2 - 1].data.target;\n                jsn.edges[jsn.edges.length - 1].data.porttarget = json1.edges[found2 - 1].data.porttarget;\n\n                sharednodes.push(json1.edges[found2 - 1].data.target);\n            }\n        }\n\n        //Some edges were created for the comparison step. They are useless now.\n        for(i=0; i<jsn.edges.length; i++) {\n            if(\"toBeRemoved\" in jsn.edges[i].data) {\n                jsn.edges.splice(i, 1);\n                i = i - 1;\n            }\n        }\n\n        for(i=0; i<json1.edges.length; i++) {  //Remove the useless edges.\n            if(\"toBeRemoved\" in json1.edges[i].data) {\n                json1.edges.splice(i, 1);\n                i = i - 1;\n            }\n        }\n\n        var whichJsn = {jsn1:[], jsn2:[]};\n        for(i=0; i<json1.nodes.length; i++)\n            whichJsn.jsn1.push(json1.nodes[i].data.id);\n\n        if(json1.nodes.length < jsn.nodes.length) {\n            for(i=json1.nodes.length; i<jsn.nodes.length; i++) {\n                json1.nodes.push(jsn.nodes[i]);\n                whichJsn.jsn2.push(jsn.nodes[i].data.id);\n            }\n        }\n\n        for(i=0; i<sharednodes.length; i++)\n            whichJsn.jsn2.push(sharednodes[i]);\n\n        whichJsn.jsn2.sort();\n\n        if(json1.edges.length < jsn.edges.length) {\n            for(i=json1.edges.length; i<jsn.edges.length; i++)\n                json1.edges.push(jsn.edges[i]);\n        }\n\n        return {wholeJson: json1, jsonToMerge: jsonToMerge, whichJsn: whichJsn};\n    },\n\n    //Add sub-levels nodes and containers into the final json.\n    addInnerNodes: function(primary, final, containerOf, positionOf, glyphId) {\n        if(containerOf[glyphId] !== undefined) {\n            var i;\n            for(i=0; i<containerOf[glyphId].length; i++)\n                this.addInnerNodes(primary, final, containerOf, positionOf, containerOf[glyphId][i]);\n        }\n\n        final.nodes.push(JSON.parse(JSON.stringify(primary.nodes[positionOf[glyphId]])));\n    },\n\n    //Compare sub-levels node in containers between the two jsons.\n    sameInnerNodes: function(jsn1, jsn2, node1, node2, pos1, pos2, cont1, cont2) {\n        var count = 0;\n        var result = 0;\n        if(cont1[node1] !== undefined && cont2[node2] !== undefined) {\n            if(cont1[node1].length == cont2[node2].length) {\n                for(k=0; k<cont1[node1].length; k++) {\n                    for(l=0; l<cont2[node2].length; l++) {\n                        if(JSON.stringify(jsn1.nodes[pos1[cont1[node1][k]]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(jsn2.nodes[pos2[cont2[node2][l]]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\")) {\n                            count = count + 1;\n                        }\n                    }\n                }\n\n                if(count >= cont1[node1].length) {\n                    for(i=0; i<cont1[node1].length; i++)\n                        result = this.sameInnerNodes(jsn1, jsn2, cont1[node1][i], cont2[node2][i], pos1, pos2, cont1, cont2);\n                }\n            }\n        } else {\n            if(JSON.stringify(jsn1.nodes[pos1[node1]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\") == JSON.stringify(jsn2.nodes[pos2[node2]]).replace(new RegExp('\"id\":\"[^\"]+\"', 'g'), '').replace(new RegExp('\"[]*bbox\":{[^}]+}', 'g'), '').replace(new RegExp('\"parent\":\"[^\"]+\"'), '').replace(new RegExp(',', 'g'), '').split(\"\").sort().join(\"\"))\n                result = 1;\n        }\n        return result;\n    }\n}","QUnit = require('qunitjs');\nmodule.exports = function() {\n    QUnit.testStart(function( details ) {\n        console.log( \"Now running: \", details.module, details.name );\n    });\n\n    QUnit.log(function( details ) {\n        console.log( \"Log: \", details.result, details.message );\n    });\n\n\n    QUnit.done(function( details ) {\n        console.log( \"Total: \", details.total, \" Failed: \", details.failed, \" Passed: \", details.passed, \" Runtime: \", details.runtime );\n    });\n\n}","QUnit = require('qunitjs');\n// agentAPI = require(\"../../agent-interaction/agentAPI\");\n\nmodule.exports = function(serverIp, modelManager){\n\n\n    QUnit.module( \"Agent API Tests\" );\n\n    var agent;\n    var agentId = '103abc';\n    var agentName = \"testAgent\";\n\n\n\n    function testNewAgent() {\n        QUnit.test('new Agent', function (assert) {\n            var Agent = require(\"../../agent-interaction/agentAPI\");\n            agent = new Agent(agentName, agentId);\n            assert.ok(agent, \"Agent created.\");\n        });\n    }\n\n    function testAgentProperties(){\n        QUnit.test('Agent properties', function(assert) {\n            assert.equal(agent.agentId, '103abc', \"agentId is correct.\");\n            assert.equal(agent.agentName, \"testAgent\", \"agentName is correct\");\n            assert.equal(agent.colorCode, \"#00bfff\", \"colorCode is correct\");\n        });\n    }\n\n\n\n    function testLoadModel() {\n        QUnit.test('Connect to server and load model', function (assert) {\n            assert.expect(3);\n\n            var done1 = assert.async();\n            var done2 = assert.async();\n            var done3 = assert.async();\n\n            agent.connectToServer(\"http://localhost:3000/\", function (socket) {\n\n                assert.ok(socket, \"Socket connection achieved\");\n                done1();\n\n\n\n                agent.loadModel(function () {\n                    assert.ok(agent.pageDoc, \"Agent acquired pageDoc\");\n                    done2();\n\n                    agent.loadOperationHistory(function () {\n\n                        assert.ok(agent.opHistory, \"Agent acquired opHistory\");\n                        done3();\n                    });\n                });\n\n            });\n        });\n    }\n\n    function testChangeName(){\n        QUnit.test('Change name', function (assert) {\n\n            assert.expect(1);\n            var done1 = assert.async();\n\n            agent.changeName(\"HAL\", function () {\n                setTimeout(function () { //should wait here as well\n                    assert.equal(agent.agentName, \"HAL\", \"Agent name changed.\");\n                    done1();\n                }, 100);\n\n            });\n        });\n\n    }\n\n    function testMessages() {\n        QUnit.test('Message send/receive', function (assert) {\n            assert.expect(1);\n            var done1 = assert.async();\n            var targets = agent.getUserList();\n\n            console.log(targets);\n            //agent.sendMessage(\"Hello\", targets, function (data) {\n            agent.sendRequest(\"agentMessage\", {comment:\"hello\", targets:\"*\"}, function(data){\n\n                setTimeout(function () { //should wait here as well\n\n\n                    assert.equal(data, \"success\", \"Agent message sent.\");\n                    done1();\n                }, 100);\n            });\n\n        });\n    }\n\n    function testGetRequests(){\n\n\n        QUnit.test('Agent getNode and getEdge', function(assert) {\n            assert.expect(2);\n            var done1 = assert.async();\n            var done2 = assert.async();\n\n            agent.getNodeRequest(\"glyph0\", function(){\n                assert.equal(agent.selectedNode.id, \"glyph0\", \"Node get operation is correct.\");\n                done1();\n            });\n\n\n            agent.getEdgeRequest(\"glyph15-glyph12\", function(){\n                assert.equal(agent.selectedEdge.id, \"glyph15-glyph12\", \"Edge get operation is correct.\");\n                done2();\n            });\n        });\n\n    }\n\n    function testAddDeleteRequests(){\n\n\n        QUnit.test('Agent addNode addEdge deleteNode deleteEdge clone', function(assert) {\n            assert.expect(5);\n            var done1 = assert.async();\n            var done2 = assert.async();\n           var done3 = assert.async();\n            var done4 = assert.async();\n            var done5 = assert.async();\n\n\n            agent.sendRequest(\"agentAddNodeRequest\", {x:30, y:40, class:\"macromolecule\"}, function(nodeId){\n                setTimeout(function () { //should wait here as well\n                    var val = modelManager.getModelNode(nodeId);\n                    assert.ok(val, \"Node added.\");\n                    done1();\n                },100);\n\n            });\n\n\n            var param = {source:\"glyph9\", target:\"glyph15\", class:\"consumption\"};\n            var edgeId = (param.source+ \"-\" + param.target + \"-\" + param.class);\n            agent.sendRequest(\"agentAddEdgeRequest\", {id: edgeId, source:param.source, target:param.target, class:param.class}, function(){\n                setTimeout(function () { //should wait here as well\n                    var val = modelManager.getModelEdge(edgeId);\n                    assert.ok(val, \"Edge added.\");\n                    done2();\n                },100);\n\n            });\n            var elesToDelete = [\"glyph4\", \"glyph7-glyph24\"];\n            agent.sendRequest(\"agentDeleteElesRequest\", {elementIds: elesToDelete, type:\"simple\"}, function(nodeId){\n\n                setTimeout(function () { //should wait here as well\n                    var val = modelManager.getModelEdge(\"glyph4-glyph18\");\n                    assert.notOk(val, \"Elements deleted simply.\");\n                    done3();\n                },100);\n\n            });\n\n            var elesToDelete = [\"glyph28\"];\n            agent.sendRequest(\"agentDeleteElesRequest\", {elementIds: elesToDelete, type:\"smart\"}, function(nodeId){\n                setTimeout(function () { //should wait here as well\n                    var val = modelManager.getModelNode(\"glyph42\");\n                    assert.notOk(val, \"Elements deleted smartly.\");\n                    done4();\n                },100);\n\n            });\n\n            agent.sendRequest(\"agentCloneRequest\", {elementIds:[\"glyph0\", \"glyph1\"]}, function(val){\n\n                setTimeout(function () { //should wait here as well\n\n                    assert.equal(val, \"success\", \"Elements cloned\");\n                    done5();\n                },100);\n\n            });\n\n        });\n\n    }\n\n    function testUndoRedoRequest(){\n\n\n        QUnit.test('Agent undo redo', function(assert) {\n            //Test on delete\n            var nodeToDelete = \"glyph32\";\n\n            assert.expect(3);\n            var done1 = assert.async();\n           var done2 = assert.async();\n           var done3 = assert.async();\n\n            var elesToDelete = [nodeToDelete];\n            agent.sendRequest(\"agentDeleteElesRequest\", {elementIds: elesToDelete, type:\"simple\"}, function(result){\n                console.log(result);\n                var val = modelManager.getModelNode(nodeToDelete);\n                assert.notOk(val,\"Deletion for undo/redo is performed.\");\n                done1();\n\n            });\n\n            setTimeout(function(){\n\n                agent.sendRequest(\"agentUndoRequest\",null, function(undoActionStr){\n                    setTimeout(function () { //should wait here as well\n                        var val = modelManager.getModelNode(nodeToDelete);\n                        assert.ok(val, \"Undo performed\");\n                        done2();\n                    },100);\n\n            });\n            }, 500);\n\n            setTimeout(function() {\n\n                agent.sendRequest(\"agentRedoRequest\", null, function () {\n                    setTimeout(function () { //should wait here as well\n                        var val = modelManager.getModelNode(nodeToDelete);\n                        assert.notOk(val, \"Redo performed\");\n                        done3();\n                    }, 100);\n                });\n            }, 800);\n\n\n\n\n        });\n\n    }\n\n\n    function testMoveNodeRequest(){\n\n        QUnit.test('Agent moveNode', function(assert) {\n            var nodeId = \"glyph8\";\n            var pos = {x: 30, y:50};\n            assert.expect(1);\n            var done1 = assert.async();\n\n\n            agent.sendRequest(\"agentMoveNodeRequest\", {id: nodeId,  pos:pos}, function(){\n                setTimeout(function () { //should wait here as well\n                    var val = modelManager.getModelNodeAttribute(\"position\", nodeId);\n                    assert.propEqual(val, pos, \"Node move operation is correct.\");\n                    done1();\n                },100);\n            });\n\n\n\n        });\n\n    }\n\n\n\n    function testAlignRequest(){\n\n        QUnit.test('Agent align', function(assert) {\n            var nodeId = \"glyph8\";\n\n            assert.expect(2);\n            var done1 = assert.async();\n            var done2 = assert.async();\n\n            agent.sendRequest(\"agentAlignRequest\", {nodeIds: '*', alignTo:nodeId, horizontal:\"none\", vertical:\"center\"}, function(res){\n                setTimeout(function () { //should wait here as well\n                    assert.equal(res, \"success\", \"Align successful.\");\n                    done1();\n                },100);\n            });\n\n            //UNDO\n            setTimeout(function(){\n                agent.sendRequest(\"agentUndoRequest\",null, function(res){\n                    setTimeout(function () { //should wait here as well\n                        assert.equal(res, \"success\", \"Undo performed\");\n                        done2();\n                    },100);\n\n                });\n            }, 500);\n\n\n        });\n    }\n\n\n    function testNodeSetAttributeRequests() {\n\n        QUnit.test('agentChangeNodeAttributeRequest', function (assert) {\n            var id = \"glyph8\";\n\n            var done = [];\n\n            var attr = [\n                {str: \"highlightColor\", val: \"red\"},\n                {str: \"data.label\", val: \"abc\"},\n                // {str: \"data.class\", val: \"Phenotype\"}, //changing this causes problems after reloading\n                {str: \"data.bbox.w\", val: 40},\n                {str: \"data.bbox.h\", val: 20},\n                {str: \"data.border-color\", val: \"green\"},\n                {str: \"data.font-family\", val: \"Times\"},\n                {str: \"data.font-weight\", val: \"bold\"},\n                {str: \"data.font-size\", val: 10},\n                {str: \"data.font-style\", val: \"normal\"},\n                {str: \"data.border-width\", val: 5},\n                {str: \"data.background-color\", val: \"blue\"},\n                {str: \"data.background-opacity\", val: 0.2},\n                {str: \"data.clonemarker\", val: true},\n                {str: \"data.parent\", val: \"glyph1\"},\n                {\n                    str: \"data.statesandinfos\",\n                    val: [{\n                        bbox: {x: 5, y: 5, w: 10, h: 10},\n                        clazz: \"state variable\",\n                        state: {value: \"a\", variable: \"b\"}\n                    }, {bbox: {x: 7, y: 7, w: 15, h: 20}, clazz: \"unit of information\", label: {text: \"abc\"}}]\n                },\n            ];\n\n\n            var expectCnt = attr.length;\n\n            assert.expect(expectCnt);\n\n            for (var i = 0; i < expectCnt; i++)\n                done.push(assert.async());\n\n\n            for (var i = 0; i < expectCnt; i++) {\n\n                //Call like this because of asynchronicity\n                var sendRequests = function (id, attStr, attVal, currDone) {\n                    agent.sendRequest(\"agentChangeNodeAttributeRequest\", {\n                        id: id,\n                        attStr: attStr,\n                        attVal: attVal\n                    }, function () {\n\n                        setTimeout(function () { //should wait here as well\n\n                            var val = modelManager.getModelNodeAttribute(attStr, id);\n                            assert.propEqual(val, attVal, (attStr + \" is correct\"));\n                            currDone();\n                        }, 100);\n                    });\n                }(id, attr[i].str, attr[i].val, done[i]);\n\n            }\n        });\n    }\n\n    function testEdgeSetAttributeRequests() {\n\n        QUnit.test('agentChangeEdgeAttributeRequest', function(assert) {\n            var id = \"glyph8-glyph15\";\n\n            var done = [];\n\n            var attr = [\n                {str: \"highlightColor\", val: \"red\"},\n                {str: \"data.cardinality\", val: 5},\n                {str: \"data.line-color\", val: \"blue\"},\n                {str: \"data.width\", val: 20},\n                {str: \"data.class\", val: \"necessary stimulation\"}\n                //{str: \"bendPoints\", val:{distances:[2,2], weights:[0.5,0.4]}}\n\n            ];\n\n\n            var expectCnt = attr.length;\n\n            assert.expect(expectCnt);\n\n            for (var i = 0; i < expectCnt; i++)\n                done.push(assert.async());\n\n\n\n            for (var i = 0; i < expectCnt; i++) {\n\n                //Call like this because of asynchronicity\n                var sendRequests = function (id, attStr, attVal, currDone) {\n                    agent.sendRequest(\"agentChangeEdgeAttributeRequest\", {\n                        id: id,\n                        attStr: attStr,\n                        attVal: attVal\n                    }, function () {\n\n                        setTimeout(function () { //should wait here as well\n\n                            var val = modelManager.getModelEdgeAttribute(attStr, id);\n                            assert.propEqual(val, attVal, (attStr + \" is correct\"));\n                            currDone();\n                        }, 100);\n                    });\n                }(id, attr[i].str, attr[i].val, done[i]);\n\n            }\n        });\n    }\n\n\n    function testLayout(){\n\n        QUnit.test('Agent layout', function(assert) {\n\n            assert.expect(1);\n            var done1 = assert.async();\n            agent.sendRequest(\"agentRunLayoutRequest\", null, function(val){\n                setTimeout(function () { //should wait here as well\n                    assert.equal(val, \"success\", \"Layout run.\") ;\n                    done1();\n                },100);\n            });\n        });\n\n    }\n\n\n    function testHideShow(){\n\n        QUnit.test('Agent hide show', function(assert) {\n\n            assert.expect(3);\n\n            var done1 = assert.async();\n            var done2 = assert.async();\n            var done3 = assert.async();\n\n            agent.sendRequest(\"agentUpdateVisibilityStatusRequest\", {val:\"hide\", elementIds:[\"glyph8\"]}, function(out){\n                setTimeout(function () { //should wait here as well\n                    var vStatus = modelManager.getModelNodeAttribute(\"visibilityStatus\", \"glyph8\");\n                    assert.equal(vStatus, \"hide\", \"Nodes hidden.\") ;\n                    done1();\n                },100);\n            });\n\n            agent.sendRequest(\"agentUpdateVisibilityStatusRequest\", {val:\"show\", elementIds:[\"glyph10\"]}, function(out){\n                setTimeout(function () { //should wait here as well\n                    var vStatus = modelManager.getModelNodeAttribute(\"visibilityStatus\", \"glyph10\");\n                    assert.notEqual(vStatus, \"hide\", \"Nodes shown.\") ;\n                    done2();\n                },100);\n            });\n\n\n            setTimeout(function () { //wait here not to affect initial hide\n                agent.sendRequest(\"agentUpdateVisibilityStatusRequest\", {val: \"showAll\"}, function (out) {\n                    setTimeout(function () { //should wait here as well\n                        var vStatus = modelManager.getModelNodeAttribute(\"visibilityStatus\", \"glyph8\");\n                        assert.equal(vStatus, \"show\", \"All nodes shown.\");\n                        done3();\n                    }, 100);\n                });\n\n            }, 500);\n\n        });\n    }\n\n    function testHighlight(){\n\n        QUnit.test('Agent highlight', function(assert) {\n\n            assert.expect(4);\n\n            var done1 = assert.async();\n            var done2 = assert.async();\n            var done3 = assert.async();\n            var done4 = assert.async();\n\n            agent.sendRequest(\"agentUpdateHighlightStatusRequest\", {val:\"neighbors\", elementIds:[\"glyph20\"]}, function(out){\n                setTimeout(function () { //should wait here as well\n                    var vStatus = modelManager.getModelNodeAttribute(\"highlightStatus\", \"glyph24\");\n                    assert.equal(vStatus, \"highlighted\", \"Neighbors highlighted.\") ;\n                    done1();\n                },100);\n            });\n\n            agent.sendRequest(\"agentUpdateHighlightStatusRequest\", {val:\"processes\", elementIds:[\"glyph20\"]}, function(out){\n                setTimeout(function () { //should wait here as well\n                    var vStatus = modelManager.getModelNodeAttribute(\"highlightStatus\", \"glyph21\");\n                    assert.equal(vStatus, \"highlighted\", \"Processes highlighted.\") ;\n                    done2();\n                },100);\n            });\n\n            setTimeout(function () { //wait here not to affect initial hide\n                agent.sendRequest(\"agentUpdateHighlightStatusRequest\", {val: \"remove\"}, function (out) {\n                    setTimeout(function () { //should wait here as well\n                        var vStatus = modelManager.getModelNodeAttribute(\"highlightStatus\", \"glyph20\");\n                        assert.notEqual(vStatus, \"highlighted\", \"Highlights removed.\");\n                        done3();\n                    }, 500);\n                });\n\n            }, 500);\n\n            agent.sendRequest(\"agentSearchByLabelRequest\", {label:\"myosin\"}, function(out){\n                setTimeout(function () { //should wait here as well\n                    var vStatus = modelManager.getModelNodeAttribute(\"highlightStatus\", \"glyph39\");\n                    assert.equal(vStatus, \"highlighted\", \"Label search successful.\") ;\n                    done4();\n                },100);\n            });\n\n        });\n    }\n\n    function testExpandCollapse(){\n\n        QUnit.test('Agent expand collapse', function(assert) {\n\n            assert.expect(2);\n\n            var done1 = assert.async();\n            var done2 = assert.async();\n\n            agent.sendRequest(\"agentUpdateExpandCollapseStatusRequest\", {val:\"collapse\", elementIds:[\"glyph0\"]}, function(out){\n                setTimeout(function () { //should wait here as well\n                    var vStatus = modelManager.getModelNodeAttribute(\"expandCollapseStatus\", \"glyph0\");\n                    assert.equal(vStatus, \"collapse\", \"Nodes collapsed.\") ;\n                    done1();\n                },100);\n            });\n\n            setTimeout(function () { //wait here not to affect initial collapse\n                agent.sendRequest(\"agentUpdateExpandCollapseStatusRequest\", {\n                    val: \"expand\",\n                    elementIds: [\"glyph0\"]\n                }, function (out) {\n                    setTimeout(function () { //should wait here as well\n                        var vStatus = modelManager.getModelNodeAttribute(\"expandCollapseStatus\", \"glyph0\");\n                        assert.notEqual(vStatus, \"collapse\", \"Nodes expanded.\");\n                        done2();\n                    }, 100);\n                });\n            },500);\n\n        });\n    }\n\n    function testAddCompound(){\n\n        QUnit.test('Agent add compound', function(assert) {\n            assert.expect(2);\n            var done1 = assert.async();\n            var done2 = assert.async();\n\n            agent.sendRequest(\"agentAddCompoundRequest\", {val:\"complex\", elementIds:[\"glyph8\", \"glyph9\"]}, function(val){\n                setTimeout(function () { //should wait here as well\n                    var node = modelManager.getModelNode(\"glyph8\");\n                    var parent = modelManager.getModelNode(node.data.parent);\n\n                    assert.equal(parent.data.class,\"complex\", \"Complex added.\");\n                    done1();\n                },100);\n\n            });\n\n            agent.sendRequest(\"agentAddCompoundRequest\", {val:\"compartment\", elementIds:[\"glyph26\", \"glyph27\"]}, function(val){\n                setTimeout(function () { //should wait here as well\n                    var node = modelManager.getModelNode(\"glyph26\");\n                    var parent = modelManager.getModelNode(node.data.parent);\n                    assert.equal(parent.data.class,\"compartment\", \"Compartment added.\");\n                    done2();\n                },100);\n\n            });\n\n        });\n    }\n\n    function testNewFile(){\n\n        QUnit.test('Agent new file', function(assert) {\n\n            assert.expect(1);\n            var done1 = assert.async();\n            agent.sendRequest(\"agentNewFileRequest\", null, function(){\n                setTimeout(function () { //should wait here as well\n                    var cy = modelManager.getModelCy();\n                    assert.ok((jQuery.isEmptyObject(cy.nodes) && jQuery.isEmptyObject(cy.edges)),\"New file loaded\") ;\n                    done1();\n                },100);\n            });\n        });\n\n    }\n\n    function testMerge(){\n        QUnit.test('Agent new file', function(assert) {\n\n            var sbgn = '<sbgn xmlns=\"http://sbgn.org/libsbgn/pd/0.1\"> <map> <glyph id=\"id_0\" class=\"macromolecule\"> <label text=\"MAP2K1\"/> <bbox y=\"0\" h=\"60\" w=\"140\" x=\"0\"/> <glyph id=\"id_3\" class=\"unit of information\"> <label text=\"mt:prot\"/> <bbox y=\"0\" h=\"18\" w=\"53\" x=\"0\"/> </glyph> </glyph> <glyph id=\"id_1\" class=\"macromolecule\">    <label text=\"MAPK1\"/> <bbox y=\"0\" h=\"60\" w=\"140\" x=\"0\"/> <glyph id=\"id_4\" class=\"unit of information\"> <label text=\"mt:prot\"/> <bbox y=\"0\" h=\"18\" w=\"53\" x=\"0\"/> </glyph> <glyph id=\"id_5\" class=\"state variable\"> <state variable=\"T185\" value=\"P\"/> <bbox y=\"1\" h=\"30\" w=\"70\" x=\"1\"/> </glyph> </glyph> <glyph id=\"id_2\" class=\"macromolecule\"> <label text=\"MAPK1\"/> <bbox y=\"0\" h=\"60\" w=\"140\" x=\"0\"/> <glyph id=\"id_6\" class=\"unit of information\"> <label text=\"mt:prot\"/> <bbox y=\"0\" h=\"18\" w=\"53\" x=\"0\"/> </glyph> </glyph> <glyph id=\"id_7\" class=\"process\"> <bbox y=\"0\" h=\"20\" w=\"20\" x=\"0\"/> </glyph> <arc source=\"id_2\" id=\"id_8\" target=\"id_7\" class=\"consumption\"/> <arc source=\"id_7\" id=\"id_9\" target=\"id_1\" class=\"production\"/> <arc source=\"id_0\" id=\"id_10\" target=\"id_7\" class=\"catalysis\"/> </map> </sbgn>'\n            assert.expect(1);\n            var done1 = assert.async();\n            agent.sendRequest('agentMergeGraphRequest', {type: 'sbgn', graph: sbgn}, function (data) {\n                console.log(data);\n                assert.ok(data,\"Sbgn graph merged\") ;\n                done1();\n            });\n        });\n    }\n\n    function testPropertyRequests(){\n\n        QUnit.test('Property updates', function(assert) {\n\n            assert.expect(1);\n            var done1 = assert.async();\n            var props = {\n                name: 'cose-bilkent',\n                nodeRepulsion: 4500,\n                idealEdgeLength: 50,\n                edgeElasticity: 0.45,\n                nestingFactor: 0.1,\n                gravity: 5,\n                numIter: 1000,\n                tile: true,\n                animationEasing: 'cubic-bezier(0.19, 1, 0.22, 1)',\n                animate: 'end',\n                animationDuration: 1000,\n                randomize: false,\n                tilingPaddingVertical: 20,\n                tilingPaddingHorizontal: 20,\n                gravityRangeCompound: 1.5,\n                gravityCompound: 1.0,\n                gravityRange: 3.8,\n            };\n            agent.sendRequest(\"agentSetLayoutPropertiesRequest\", props, function(val){\n                setTimeout(function () { //should wait here as well\n                    var layoutProps = modelManager.getLayoutProperties();\n                    assert.equal(layoutProps.numIter, 1000, \"Layout run.\") ;\n                    done1();\n                },100);\n            });\n        });\n\n    }\n\n\n\n\n    function testDisconnect(){\n\n        QUnit.test('Agent disconnect', function(assert) {\n\n            assert.expect(1);\n            var done1 = assert.async();\n            console.log(agent.socket);\n            agent.disconnect(function(){\n\n                assert.notOk(agent.socket.connected,\"Agent disconnected.\" ) ;\n                done1();\n            });\n\n\n        });\n\n    }\n\n\n    setTimeout(function() {\n        testNewAgent();\n    }, 100);\n\n\n\n    setTimeout(function() {\n        testAgentProperties();\n    }, 100);\n\n\n    setTimeout(function() {\n        testLoadModel();\n    }, 100);\n\n\n    //Make sure the model is loaded first\n    setTimeout(function() {\n        testChangeName();\n    }, 100);\n\n    setTimeout(function() {\n        testMessages();\n    }, 100);\n\n    setTimeout(function() {\n        testMerge();\n    }, 100);\n\n    // setTimeout(function() {\n    //     testGetRequests();\n    // },100);\n    //\n    //\n    // setTimeout(function() {\n    //     testMoveNodeRequest();\n    // },100);\n    //\n    // setTimeout(function() {\n    //     testNodeSetAttributeRequests();\n    // },100);\n    //\n    //\n    //\n    // setTimeout(function() {\n    //     testEdgeSetAttributeRequests();\n    // },100);\n    //\n    // setTimeout(function() {\n    //     testPropertyRequests();\n    // },100);\n\n\n    // setTimeout(function() {\n    //     testAlignRequest();\n    // }, 1000);\n\n    // setTimeout(function() {\n    //     testUndoRedoRequest();\n    // }, 1000);\n\n\n    // setTimeout(function() {\n    //     testHighlight();\n    // }, 100);\n    //\n    // setTimeout(function() {\n    //     testAddCompound();\n    // }, 100);\n    //\n    // setTimeout(function() {\n    //     testAddDeleteRequests();\n    // },100);\n    //\n    // setTimeout(function() {\n    //     testHideShow();\n    // }, 100);\n    //\n    //\n    //\n    //\n    // //Do this after others\n    // setTimeout(function() {\n    //     testExpandCollapse();\n    // }, 500);\n    //\n    //\n    //\n    // //do this at the end\n    // setTimeout(function() {\n    //     testLayout();\n    // }, 1000);\n\n    // //do this at the end\n    // setTimeout(function() {\n    //     testNewFile();\n    // }, 2000);\n\n    //\n    // //do this at the end\n    // setTimeout(function() {\n    //     testDisconnect();\n    // }, 3000);\n};","var Derby = require('./lib/Derby');\nmodule.exports = new Derby();\n","var Racer = require('./Racer');\nmodule.exports = new Racer();\n"]}